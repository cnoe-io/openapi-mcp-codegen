# Copyright 2025 CNOE
# SPDX-License-Identifier: Apache-2.0
# Generated by CNOE OpenAPI MCP Codegen tool

#!/usr/bin/env python3
"""
 MCP Server

This server provides a Model Context Protocol (MCP) interface to the ,
allowing large language models and AI assistants to interact with the service.
"""

import logging
import os
from dotenv import load_dotenv
from mcp.server.fastmcp import FastMCP


from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_account

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_account_can_i_resource_action_subresource

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_account_password

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_account_name

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_account_name_token

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_account_name_token_id

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_applications

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_applications_manifestswithfiles

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_applications_application_metadata_name

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import (
    api_v1_applications_applicationname_managed_resources,
)

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_applications_applicationname_resource_tree

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_applications_name

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_applications_name_events

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_applications_name_links

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_applications_name_logs

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_applications_name_manifests

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_applications_name_operation

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_applications_name_pods_podname_logs

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_applications_name_resource

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_applications_name_resource_actions

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_applications_name_resource_links

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import (
    api_v1_applications_name_revisions_revision_chartdetails,
)

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import (
    api_v1_applications_name_revisions_revision_metadata,
)

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_applications_name_rollback

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_applications_name_spec

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_applications_name_sync

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_applications_name_syncwindows

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_applicationsets

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_applicationsets_generate

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_applicationsets_name

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_applicationsets_name_resource_tree

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_certificates

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_clusters

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_clusters_id_value

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_clusters_id_value_invalidate_cache

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_clusters_id_value_rotate_auth

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_gpgkeys

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_gpgkeys_keyid

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_notifications_services

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_notifications_templates

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_notifications_triggers

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_projects

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_projects_name

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_projects_name_detailed

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_projects_name_events

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_projects_name_globalprojects

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_projects_name_links

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_projects_name_syncwindows

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_projects_project_metadata_name

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_projects_project_roles_role_token

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_projects_project_roles_role_token_iat

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_repocreds

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_repocreds_creds_url

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_repocreds_url

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_repositories

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_repositories_repo_repo

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_repositories_repo

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_repositories_repo_apps

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_repositories_repo_helmcharts

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_repositories_repo_refs

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_repositories_repo_validate

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_repositories_source_repourl_appdetails

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_session

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_session_userinfo

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_settings

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_settings_plugins

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_stream_applications

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import (
    api_v1_stream_applications_applicationname_resource_tree,
)

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_write_repocreds

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_write_repocreds_creds_url

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_write_repocreds_url

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_write_repositories

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_write_repositories_repo_repo

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_write_repositories_repo

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_v1_write_repositories_repo_validate

from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.tools import api_version


def main():
    # Load environment variables
    load_dotenv()

    # Configure logging
    logging.basicConfig(level=logging.DEBUG)

    # Get MCP configuration from environment variables
    MCP_MODE = os.getenv("MCP_MODE", "STDIO")

    # Get host and port for server
    MCP_HOST = os.getenv("MCP_HOST", "localhost")
    MCP_PORT = int(os.getenv("MCP_PORT", "8000"))

    logging.info(f"Starting MCP server in {MCP_MODE} mode on {MCP_HOST}:{MCP_PORT}")

    # Get agent name from environment variables
    AGENT_NAME = os.getenv("AGENT_NAME", "ARGOCD Agent")
    logging.info(f"Agent name: {AGENT_NAME}")

    # Create server instance
    if MCP_MODE == "SSE":
        mcp = FastMCP(f"{AGENT_NAME} MCP Server", host=MCP_HOST, port=MCP_PORT)
    else:
        mcp = FastMCP("ARGOCD MCP Server")

    # Register api_v1_account tools

    mcp.tool()(api_v1_account.account_service__list_accounts)

    # Register api_v1_account_can_i_resource_action_subresource tools

    mcp.tool()(api_v1_account_can_i_resource_action_subresource.account_service__can_i)

    # Register api_v1_account_password tools

    mcp.tool()(api_v1_account_password.account_service__update_password)

    # Register api_v1_account_name tools

    mcp.tool()(api_v1_account_name.account_service__get_account)

    # Register api_v1_account_name_token tools

    mcp.tool()(api_v1_account_name_token.account_service__create_token)

    # Register api_v1_account_name_token_id tools

    mcp.tool()(api_v1_account_name_token_id.account_service__delete_token)

    # Register api_v1_applications tools

    mcp.tool()(api_v1_applications.application_service__list)

    mcp.tool()(api_v1_applications.application_service__create)

    # Register api_v1_applications_manifestswithfiles tools

    mcp.tool()(api_v1_applications_manifestswithfiles.application_service__get_manifests_with_files)

    # Register api_v1_applications_application_metadata_name tools

    mcp.tool()(api_v1_applications_application_metadata_name.application_service__update)

    # Register api_v1_applications_applicationname_managed_resources tools

    mcp.tool()(api_v1_applications_applicationname_managed_resources.application_service__managed_resources)

    # Register api_v1_applications_applicationname_resource_tree tools

    mcp.tool()(api_v1_applications_applicationname_resource_tree.application_service__resource_tree)

    # Register api_v1_applications_name tools

    mcp.tool()(api_v1_applications_name.application_service__get)

    mcp.tool()(api_v1_applications_name.application_service__delete)

    # Register api_v1_applications_name_events tools

    mcp.tool()(api_v1_applications_name_events.application_service__list_resource_events)

    # Register api_v1_applications_name_links tools

    mcp.tool()(api_v1_applications_name_links.application_service__list_links)

    # Register api_v1_applications_name_logs tools

    mcp.tool()(api_v1_applications_name_logs.application_service__pod_logs2)

    # Register api_v1_applications_name_manifests tools

    mcp.tool()(api_v1_applications_name_manifests.application_service__get_manifests)

    # Register api_v1_applications_name_operation tools

    mcp.tool()(api_v1_applications_name_operation.application_service__terminate_operation)

    # Register api_v1_applications_name_pods_podname_logs tools

    mcp.tool()(api_v1_applications_name_pods_podname_logs.application_service__pod_logs)

    # Register api_v1_applications_name_resource tools

    mcp.tool()(api_v1_applications_name_resource.application_service__get_resource)

    mcp.tool()(api_v1_applications_name_resource.application_service__patch_resource)

    mcp.tool()(api_v1_applications_name_resource.application_service__delete_resource)

    # Register api_v1_applications_name_resource_actions tools

    mcp.tool()(api_v1_applications_name_resource_actions.application_service__list_resource_actions)

    mcp.tool()(api_v1_applications_name_resource_actions.application_service__run_resource_action)

    # Register api_v1_applications_name_resource_links tools

    mcp.tool()(api_v1_applications_name_resource_links.application_service__list_resource_links)

    # Register api_v1_applications_name_revisions_revision_chartdetails tools

    mcp.tool()(api_v1_applications_name_revisions_revision_chartdetails.application_service__revision_chart_details)

    # Register api_v1_applications_name_revisions_revision_metadata tools

    mcp.tool()(api_v1_applications_name_revisions_revision_metadata.application_service__revision_metadata)

    # Register api_v1_applications_name_rollback tools

    mcp.tool()(api_v1_applications_name_rollback.application_service__rollback)

    # Register api_v1_applications_name_spec tools

    mcp.tool()(api_v1_applications_name_spec.application_service__update_spec)

    # Register api_v1_applications_name_sync tools

    mcp.tool()(api_v1_applications_name_sync.application_service__sync)

    # Register api_v1_applications_name_syncwindows tools

    mcp.tool()(api_v1_applications_name_syncwindows.application_service__get_application_sync_windows)

    # Register api_v1_applicationsets tools

    mcp.tool()(api_v1_applicationsets.application_set_service__list)

    mcp.tool()(api_v1_applicationsets.application_set_service__create)

    # Register api_v1_applicationsets_generate tools

    mcp.tool()(api_v1_applicationsets_generate.application_set_service__generate)

    # Register api_v1_applicationsets_name tools

    mcp.tool()(api_v1_applicationsets_name.application_set_service__get)

    mcp.tool()(api_v1_applicationsets_name.application_set_service__delete)

    # Register api_v1_applicationsets_name_resource_tree tools

    mcp.tool()(api_v1_applicationsets_name_resource_tree.application_set_service__resource_tree)

    # Register api_v1_certificates tools

    mcp.tool()(api_v1_certificates.certificate_service__list_certificates)

    mcp.tool()(api_v1_certificates.certificate_service__create_certificate)

    mcp.tool()(api_v1_certificates.certificate_service__delete_certificate)

    # Register api_v1_clusters tools

    mcp.tool()(api_v1_clusters.cluster_service__list)

    mcp.tool()(api_v1_clusters.cluster_service__create)

    # Register api_v1_clusters_id_value tools

    mcp.tool()(api_v1_clusters_id_value.cluster_service__get)

    mcp.tool()(api_v1_clusters_id_value.cluster_service__update)

    mcp.tool()(api_v1_clusters_id_value.cluster_service__delete)

    # Register api_v1_clusters_id_value_invalidate_cache tools

    mcp.tool()(api_v1_clusters_id_value_invalidate_cache.cluster_service__invalidate_cache)

    # Register api_v1_clusters_id_value_rotate_auth tools

    mcp.tool()(api_v1_clusters_id_value_rotate_auth.cluster_service__rotate_auth)

    # Register api_v1_gpgkeys tools

    mcp.tool()(api_v1_gpgkeys.gpg_key_service__list)

    mcp.tool()(api_v1_gpgkeys.gpg_key_service__create)

    mcp.tool()(api_v1_gpgkeys.gpg_key_service__delete)

    # Register api_v1_gpgkeys_keyid tools

    mcp.tool()(api_v1_gpgkeys_keyid.gpg_key_service__get)

    # Register api_v1_notifications_services tools

    mcp.tool()(api_v1_notifications_services.notification_service__list_services)

    # Register api_v1_notifications_templates tools

    mcp.tool()(api_v1_notifications_templates.notification_service__list_templates)

    # Register api_v1_notifications_triggers tools

    mcp.tool()(api_v1_notifications_triggers.notification_service__list_triggers)

    # Register api_v1_projects tools

    mcp.tool()(api_v1_projects.project_service__list)

    mcp.tool()(api_v1_projects.project_service__create)

    # Register api_v1_projects_name tools

    mcp.tool()(api_v1_projects_name.project_service__get)

    mcp.tool()(api_v1_projects_name.project_service__delete)

    # Register api_v1_projects_name_detailed tools

    mcp.tool()(api_v1_projects_name_detailed.project_service__get_detailed_project)

    # Register api_v1_projects_name_events tools

    mcp.tool()(api_v1_projects_name_events.project_service__list_events)

    # Register api_v1_projects_name_globalprojects tools

    mcp.tool()(api_v1_projects_name_globalprojects.project_service__get_global_projects)

    # Register api_v1_projects_name_links tools

    mcp.tool()(api_v1_projects_name_links.project_service__list_links)

    # Register api_v1_projects_name_syncwindows tools

    mcp.tool()(api_v1_projects_name_syncwindows.project_service__get_sync_windows_state)

    # Register api_v1_projects_project_metadata_name tools

    mcp.tool()(api_v1_projects_project_metadata_name.project_service__update)

    # Register api_v1_projects_project_roles_role_token tools

    mcp.tool()(api_v1_projects_project_roles_role_token.project_service__create_token)

    # Register api_v1_projects_project_roles_role_token_iat tools

    mcp.tool()(api_v1_projects_project_roles_role_token_iat.project_service__delete_token)

    # Register api_v1_repocreds tools

    mcp.tool()(api_v1_repocreds.repo_creds_service__list_repository_credentials)

    mcp.tool()(api_v1_repocreds.repo_creds_service__create_repository_credentials)

    # Register api_v1_repocreds_creds_url tools

    mcp.tool()(api_v1_repocreds_creds_url.repo_creds_service__update_repository_credentials)

    # Register api_v1_repocreds_url tools

    mcp.tool()(api_v1_repocreds_url.repo_creds_service__delete_repository_credentials)

    # Register api_v1_repositories tools

    mcp.tool()(api_v1_repositories.repository_service__list_repositories)

    mcp.tool()(api_v1_repositories.repository_service__create_repository)

    # Register api_v1_repositories_repo_repo tools

    mcp.tool()(api_v1_repositories_repo_repo.repository_service__update_repository)

    # Register api_v1_repositories_repo tools

    mcp.tool()(api_v1_repositories_repo.repository_service__get)

    mcp.tool()(api_v1_repositories_repo.repository_service__delete_repository)

    # Register api_v1_repositories_repo_apps tools

    mcp.tool()(api_v1_repositories_repo_apps.repository_service__list_apps)

    # Register api_v1_repositories_repo_helmcharts tools

    mcp.tool()(api_v1_repositories_repo_helmcharts.repository_service__get_helm_charts)

    # Register api_v1_repositories_repo_refs tools

    mcp.tool()(api_v1_repositories_repo_refs.repository_service__list_refs)

    # Register api_v1_repositories_repo_validate tools

    mcp.tool()(api_v1_repositories_repo_validate.repository_service__validate_access)

    # Register api_v1_repositories_source_repourl_appdetails tools

    mcp.tool()(api_v1_repositories_source_repourl_appdetails.repository_service__get_app_details)

    # Register api_v1_session tools

    mcp.tool()(api_v1_session.session_service__create)

    mcp.tool()(api_v1_session.session_service__delete)

    # Register api_v1_session_userinfo tools

    mcp.tool()(api_v1_session_userinfo.session_service__get_user_info)

    # Register api_v1_settings tools

    mcp.tool()(api_v1_settings.settings_service__get)

    # Register api_v1_settings_plugins tools

    mcp.tool()(api_v1_settings_plugins.settings_service__get_plugins)

    # Register api_v1_stream_applications tools

    mcp.tool()(api_v1_stream_applications.application_service__watch)

    # Register api_v1_stream_applications_applicationname_resource_tree tools

    mcp.tool()(api_v1_stream_applications_applicationname_resource_tree.application_service__watch_resource_tree)

    # Register api_v1_write_repocreds tools

    mcp.tool()(api_v1_write_repocreds.repo_creds_service__list_write_repository_credentials)

    mcp.tool()(api_v1_write_repocreds.repo_creds_service__create_write_repository_credentials)

    # Register api_v1_write_repocreds_creds_url tools

    mcp.tool()(api_v1_write_repocreds_creds_url.repo_creds_service__update_write_repository_credentials)

    # Register api_v1_write_repocreds_url tools

    mcp.tool()(api_v1_write_repocreds_url.repo_creds_service__delete_write_repository_credentials)

    # Register api_v1_write_repositories tools

    mcp.tool()(api_v1_write_repositories.repository_service__list_write_repositories)

    mcp.tool()(api_v1_write_repositories.repository_service__create_write_repository)

    # Register api_v1_write_repositories_repo_repo tools

    mcp.tool()(api_v1_write_repositories_repo_repo.repository_service__update_write_repository)

    # Register api_v1_write_repositories_repo tools

    mcp.tool()(api_v1_write_repositories_repo.repository_service__get_write)

    mcp.tool()(api_v1_write_repositories_repo.repository_service__delete_write_repository)

    # Register api_v1_write_repositories_repo_validate tools

    mcp.tool()(api_v1_write_repositories_repo_validate.repository_service__validate_write_access)

    # Register api_version tools

    mcp.tool()(api_version.version_service__version)

    # Run the MCP server
    mcp.run()


if __name__ == "__main__":
    main()
