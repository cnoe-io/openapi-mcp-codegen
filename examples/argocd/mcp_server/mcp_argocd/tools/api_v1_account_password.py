# Copyright 2025 CNOE
# SPDX-License-Identifier: Apache-2.0
# Generated by CNOE OpenAPI MCP Codegen tool

"""Tools for /api/v1/account/password operations"""

import logging
from typing import Dict, Any
from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.api.client import make_api_request

# Configure logging
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger("mcp_tools")


async def account_service__update_password() -> Dict[str, Any]:
    '''
    Update an account's password to a new value.

    Args:
        new_password (str): The new password to set for the account.
        account_id (str): The unique identifier of the account whose password is being updated.

    Returns:
        Dict[str, Any]: The JSON response from the API call, containing the status of the password update.

    Raises:
        ConnectionError: If the API request fails due to network issues.
        ValueError: If the response contains an error indicating invalid input.
        Exception: If the API request fails or returns an unspecified error.
    '''
    logger.debug("Making PUT request to /api/v1/account/password")

    params = {}
    data = {}

    success, response = await make_api_request("/api/v1/account/password", method="PUT", params=params, data=data)

    if not success:
        logger.error(f"Request failed: {response.get('error')}")
        return {"error": response.get("error", "Request failed")}
    return response