# Copyright 2025 CNOE
# SPDX-License-Identifier: Apache-2.0
# Generated by CNOE OpenAPI MCP Codegen tool

"""Tools for /api/v1/applications/manifestsWithFiles operations"""

import logging
from typing import Dict, Any
from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.api.client import make_api_request

# Configure logging
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger("mcp_tools")


async def application_service__get_manifests_with_files() -> Dict[str, Any]:
    '''
    Retrieves application manifests generated from provided files.

    Args:
        None

    Returns:
        Dict[str, Any]: The JSON response containing the generated application manifests.

    Raises:
        Exception: If the API request fails or returns an error.

    OpenAPI Specification:
      post:
        summary: Retrieve application manifests using provided files.
        description: |
          Generates and returns application manifests by processing the files supplied in the request.
        operationId: application_service__get_manifests_with_files
        requestBody:
          required: true
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  files:
                    type: array
                    items:
                      type: string
                      format: binary
                    description: List of files to generate manifests from.
        responses:
          '200':
            description: Successfully generated application manifests.
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties: true
          '400':
            description: Invalid input or missing files.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
          '500':
            description: Internal server error.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
    '''
    logger.debug("Making POST request to /api/v1/applications/manifestsWithFiles")

    params = {}
    data = {}

    success, response = await make_api_request(
        "/api/v1/applications/manifestsWithFiles", method="POST", params=params, data=data
    )

    if not success:
        logger.error(f"Request failed: {response.get('error')}")
        return {"error": response.get("error", "Request failed")}
    return response