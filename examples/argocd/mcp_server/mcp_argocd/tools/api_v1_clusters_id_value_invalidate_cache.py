# Copyright 2025 CNOE
# SPDX-License-Identifier: Apache-2.0
# Generated by CNOE OpenAPI MCP Codegen tool

"""Tools for /api/v1/clusters/{id.value}/invalidate-cache operations"""

import logging
from typing import Dict, Any
from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.api.client import make_api_request

# Configure logging
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger("mcp_tools")


async def cluster_service__invalidate_cache(path_id_value: str) -> Dict[str, Any]:
    """
    InvalidateCache invalidates cluster cache

    OpenAPI Description:


    Args:
    path_id_value (str): OpenAPI parameter corresponding to 'path_id_value'.


    Returns:
        Dict[str, Any]: The JSON response from the API call.

    Raises:
        Exception: If the API request fails or returns an error.
    """
    logger.debug("Making POST request to /api/v1/clusters/{id.value}/invalidate-cache")

    params = {}
    data = {}

    success, response = await make_api_request(
        f"/api/v1/clusters/{path_id_value}/invalidate-cache", method="POST", params=params, data=data
    )

    if not success:
        logger.error(f"Request failed: {response.get('error')}")
        return {"error": response.get("error", "Request failed")}
    return response
