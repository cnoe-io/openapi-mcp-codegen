# Copyright 2025 CNOE
# SPDX-License-Identifier: Apache-2.0
# Generated by CNOE OpenAPI MCP Codegen tool

"""Tools for /api/version operations"""

import logging
from typing import Dict, Any
from agent_argocd.protocol_bindings.mcp_server.mcp_argocd.api.client import make_api_request

# Configure logging
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger("mcp_tools")


async def version_service__version() -> Dict[str, Any]:
    '''
    Fetches version information of the API server.

    This function makes an asynchronous GET request to the API server's version endpoint
    to retrieve version details.

    Args:

    Returns:
        Dict[str, Any]: A dictionary containing the JSON response from the API call, which
        includes version information of the server. If the request fails, the dictionary
        will contain an "error" key with the error message.

    Raises:
        Exception: If the API request fails or returns an error, an exception is raised
        with the error details.
    '''
    logger.debug("Making GET request to /api/version")

    params = {}
    data = {}

    success, response = await make_api_request("/api/version", method="GET", params=params, data=data)

    if not success:
        logger.error(f"Request failed: {response.get('error')}")
        return {"error": response.get("error", "Request failed")}
    return response