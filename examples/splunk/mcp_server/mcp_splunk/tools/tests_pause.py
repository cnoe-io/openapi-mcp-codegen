# Copyright 2025 CNOE
# SPDX-License-Identifier: Apache-2.0
# Generated by CNOE OpenAPI MCP Codegen tool

"""Tools for /tests/pause operations"""

import logging
from typing import Any, List
from mcp_splunk.api.client import make_api_request, assemble_nested_body

# Configure logging
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger("mcp_tools")


async def pause_multiple_tests(body_testIds: List[int] = None) -> Any:
    '''
    Deactivates the specified tests by their IDs. A maximum of 500 test IDs can be processed in a single request.

    Args:
        body_testIds (List[int], optional): A list of test IDs to deactivate. Maximum of 500 IDs per request. Defaults to None.

    Returns:
        Any: The JSON response from the API call indicating the result of the deactivation operation.

    Raises:
        Exception: If the API request fails or returns an error.
    '''
    logger.debug("Making PUT request to /tests/pause")

    params = {}
    data = {}

    flat_body = {}
    if body_testIds is not None:
        flat_body["testIds"] = body_testIds
    data = assemble_nested_body(flat_body)

    success, response = await make_api_request("/tests/pause", method="PUT", params=params, data=data)

    if not success:
        logger.error(f"Request failed: {response.get('error')}")
        return {"error": response.get("error", "Request failed")}
    return response