# Copyright 2025 CNOE
# SPDX-License-Identifier: Apache-2.0
# Generated by CNOE OpenAPI MCP Codegen tool

"""Tools for /metric/{name} operations"""

import logging
from typing import Any
from mcp_splunk.api.client import make_api_request, assemble_nested_body

# Configure logging
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger("mcp_tools")


async def retrieve__metadata__metric__name(path_name: str) -> Any:
    '''
    Retrieves metadata for the specified metric.

    Args:
        path_name (str): The name of the metric for which metadata is to be retrieved.

    Returns:
        Any: The JSON response containing the metadata for the specified metric.

    Raises:
        Exception: If the API request fails or returns an error.
    '''
    logger.debug("Making GET request to /metric/{name}")

    params = {}
    data = {}

    flat_body = {}
    data = assemble_nested_body(flat_body)

    success, response = await make_api_request(f"/metric/{path_name}", method="GET", params=params, data=data)

    if not success:
        logger.error(f"Request failed: {response.get('error')}")
        return {"error": response.get("error", "Request failed")}
    return response