{
  "openapi": "3.0.0",
  "info": {
    "version": "3.7.1",
    "title": "splunk",
    "x-update-date": "* 2019-05-30: 3.0.1\n* 2019-11-13: 3.3.0\n* 2019-11-24: 3.4.0\n* 2019-12-10: 3.5.0\n* 2020-01-29: 3.6.0\n* 2020-01-31: 3.7.0\n* 2020-02-26: 3.7.1\n* 2024-02-13: 3.8.0\n",
    "x-version-info": "* 2019-05-30: 3.0.1: Added documentation for GET `/incident` and GET `/incident/{id}`\n* 2019-06-05: 3.1.0: Updates for DOCS-483: Updates for corrected authentication token requirements\n  Simplified description of X-SF-TOKEN\n* 2019-11-13: 3.3.0: Updates for DOCS-973 and DOCS-240: Fix two incorrect statements in the REST API documentation for alertmuting\n* 2019-11-24: 3.4.0: Fixes for DOCS-170 and DOCS-172\n* 2019-12-10: 3.5.0: DOCS-930 user decides about muted notifications\n* 2020-01-29: 3.6.0: DOCS-938: Clear incidents by selecting metadata for signals that caused them\n* 2020-01-31: 3.7.0: DOCS-939: Describe new query parameter that mutes and clears simultaneously\n* 2020-02-26: 3.7.1: DOCS-1104: Incorrect position of duration property in response object\n* 2024-02-13: 3.8.0: O11YDOCS-5710: Add recurrence to muting rules API\n",
    "x-doc-link": "[Detect anomalies with detectors](/docs/detectors/detectors_events_alerts)\n",
    "x-description": "This API provides two endpoints:\n\n* `/incident`: Operations that retrieve incident information or clear an incident\n* `/alertmuting`: Operations that create, retrieve, update, or delete notification muting rules\n\n## Requirements\n\n* You must have an organization access token with the API permission or a session token to use the API.\n* You have to have the Splunk Observability Cloud admin, power, or read_only role to use the `GET /incident`, `GET /incident/{id}`, `GET /alertmuting`, and `GET /alertmuting/{id}` operations.\n* You have to have the Splunk Observability Cloud admin or power role to use the `PUT /incident/clear`, `PUT /incident/{id}/clear`, `POST /alertmuting`,  `PUT /alertmuting/{id}`, `DELETE /alertmuting/{id}`, and `PUT /alertmuting/{id}/unmute` operations.\n\n\n## Incidents\n\nAn incident is the combination of an alert event and a clear event. Splunk Observability Cloud\ngenerates alert events when an incoming stream of data triggers a rule you define for a\ndetector. When the condition that triggered the alert is no longer true, Splunk Observability Cloud\ntriggers a clear event. Use the `/incident` endpoint to retrieve information for these\nevents.\n\n## Event time series (ETS)\n\nAn event time series (ETS) is a collection of events with the same metric and the same set of dimensions for the same detector rule. Each ETS points to only the latest incident.\n\n## Notification muting\n\nNotification muting controls the optional notifications for a detector rule. If you've\ndefined a notification service for a detector rule, Splunk Observability Cloud sends you a notification for\nan alert event and a clear event. Notification muting controls these notifications.\n\nTo learn more about notification muting, see the section [Mute alert notifications](https://docs.splunk.com/observability/en/alerts-detectors-notifications/mute-notifications.html)\nin the user documentation.\n\nNote: Although the detectors API only works with detectors you create in the API\n(v2 detectors), the `/v2/incident`</code>` and `/v2/alertmuting`\nendpoints work with all alerts, events, incidents, and notifications,\nregardless of which detector version created them. This means that you can use the\nendpoints to work with incidents and muting rules for detectors you create in the UI.\n",
    "description": "API for retrieving or clearing incidents and muting \"critical-notifications\".\n\n## Requirements\n\n* You must have an organization access token with the API permission or a session token to use the API.\n* You have to have the Splunk Observability Cloud admin, power, or read_only role to use the `GET /incident`, `GET /incident/{id}`, `GET /alertmuting`, and `GET /alertmuting/{id}` operations.\n* You have to have the Splunk Observability Cloud admin or power role to use the `PUT /incident/clear`, `PUT /incident/{id}/clear`, `POST /alertmuting`,  `PUT /alertmuting/{id}`, `DELETE /alertmuting/{id}`, and `PUT /alertmuting/{id}/unmute` operations.\n"
  },
  "servers": [
    {
      "url": "https://outshift.signalfx.com/v2",
      "description": "Splunk Olly API endpoint URL\n",
      "x-description": "Splunk Observability Cloud API endpoint. Replace `{REALM}` with the name of your realm.\n\nFor example, if your realm is `eu0`,  use `https://api.eu0.signalfx.com/v2`.\nTo find your realm, go to your profile page in the user interface.\n\nIf you don't include a realm and use `https://api.signalfx.com/v2`,\nthe API interprets the endpoint as pointing to the `us0` realm.\n"
    }
  ],
  "paths": {
    "/incident": {
      "get": {
        "tags": [
          "Retrieve Incidents"
        ],
        "summary": "Retrieves information for the latest incidents in an organization",
        "description": "Retrieves the latest incidents in an organization\n",
        "x-description": "Retrieves information for the latest incidents in an organization, one incident from each ETS. This endpoint retrieves\nincidents created by detectors you add in the UI and detectors you add using the API.\n\nNote: Splunk Observability Cloud returns a maximum of 10,000 incidents, even if your organization contains more than 10,000. To learn more, see the\n[Considerations for retrieve operations](https://dev.splunk.com/observability/docs/apibasics/retrieve_data_basics#Considerations-for-retrieve-operations) section in the developer guide.\n",
        "operationId": "Retrieve Incidents",
        "parameters": [
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token.\n",
            "x-description": "Authentication token.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "includeResolved",
            "in": "query",
            "description": "Controls retrieval of the latest resolved incidents\n",
            "x-description": "Specifies which latest incidents to retrieve based on their status. If\nthe value is `true`, the API returns latest incident for which the status\nis `\"resolved\"`; otherwise, the API only returns the latest active incidents.\n",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return from the result set\n",
            "x-description": "The number of results to return from the result set.\n",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": false
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index in result set at which the API starts returning results\n",
            "x-description": "The result object in the result set at which the API should start\nreturning results to you. If omitted, the API starts at the first\nresult in the set.\n",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": false
          },
          {
            "name": "query",
            "in": "query",
            "description": "Controls which latest incidents to retrieve, based on descriptions and other filters. For example, to retrieve the latest incidents created by detectors linked to a team with the ID `FO1Vq3ABXYZ`, specify `teamId:FO1Vq3ABXYZ`.\n\nTo search for latest incidents by specific values of a dimension or custom property, use `query=<name>:<value>`. If `<value>` contains non-alphanumeric characters, encode the non-alphanumeric characters and surround the value with double quotes. For example, the region custom property value `US East` must be passed in the parameter as `region:\"US%20East\"`.\n\nHere are examples of the `query` parameter used alone and with other available query parameters:\n\n- `https://app.{realm}.signalfx.com/v2/incident?query=teamId:FO1Vq3ABXYZ`\n- `https://app.{realm}.signalfx.com/v2/incident?query=region:\"US%20East\"&limit=5&offset=5`\n\nFor information about how to link detectors to teams, see [Detectors linked to teams](https://quickdraw.splunk.com/redirect/?product=Observability&location=devdocs.getincidents.byteamid&version=current).\n",
            "x-description": "Controls which latest incidents to retrieve, based on descriptions and other filters. For example, to retrieve the latest incidents created by detectors linked to a team with the ID `FO1Vq3ABXYZ`, specify `teamId:FO1Vq3ABXYZ`.\n\nTo search for latest incidents by specific values of a dimension or custom property, use `query=<name>:<value>`. If `<value>` contains non-alphanumeric characters, encode the non-alphanumeric characters and surround the value with double quotes. For example, the region custom property value `US East` must be passed in the parameter as `region:\"US%20East\"`.\n\nHere are examples of the `query` parameter used alone and with other available query parameters:\n\n- `https://app.{realm}.signalfx.com/v2/incident?query=teamId:FO1Vq3ABXYZ`\n- `https://app.{realm}.signalfx.com/v2/incident?query=region:\"US%20East\"&limit=5&offset=5`\n\nFor information about how to link detectors to teams, see [Detectors linked to teams](https://quickdraw.splunk.com/redirect/?product=Observability&location=devdocs.getincidents.byteamid&version=current).\n",
            "schema": {
              "type": "string"
            },
            "example": "teamId:FO1Vq3ABXYZ",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Successful operation\n",
            "headers": {
              "Content-Type": {
                "description": "`\"application/json\"`\n",
                "x-description": "Format of the response body. Always `\"application/json\"`.\n",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveIncidentResponses"
                }
              }
            }
          }
        }
      }
    },
    "/incident/{id}": {
      "get": {
        "tags": [
          "Retrieve Incident ID"
        ],
        "summary": "Retrieves the incident specified in the {id} path parameter",
        "description": "Retrieves an incident based on its ID\n",
        "x-description": "Retrieves an incident, based on the incident ID\nspecified in the `{id}` path parameter. This endpoint retrieves an\nincident created by a detector you add using the UI or a detector\nyou add using the API (a v2 detector).\n",
        "operationId": "Retrieve Incident ID",
        "parameters": [
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token.\n",
            "x-description": "Authentication token.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of incident to retrieve\n",
            "x-description": "ID of an incident\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Successful retrieval\n",
            "headers": {
              "Content-Type": {
                "description": "`\"application/json\"`\n",
                "x-description": "Format of the response body. Always `\"application/json\"`.\n",
                "schema": {
                  "type": "string",
                  "default": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveIncidentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/incident/clear": {
      "put": {
        "tags": [
          "Clear Incidents by Filter"
        ],
        "summary": "Clears specified incidents",
        "description": "Clears alerts specified in the request body\n",
        "x-description": "Clears alerts identified by the rules in the request body.\n",
        "operationId": "Clear Incidents",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "`\"application/json\"`\n",
            "x-description": "Format of the request body. Always `\"application/json\"`.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "Rules that identify an incident you want to clear\n",
          "x-description": "Rules that identify an incident you want to clear\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncidentClearRules"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success. The API doesn't return a response body.\n",
            "x-description": "Successful request. This request doesn't return a response body.\n"
          },
          "400": {
            "description": "Invalid request\n",
            "x-description": "Invalid request body. Some causes are:\n\n* JSON is not well-formed\n* Missing required property in request body\n* Invalid value for a property.\n\nFor example, if you misspell `propertyValue` as `propertyValue`, you receive\nthe following error response body:\n\n```\n    {\n        \"code\": 400,\n        \"message\": \"Failed to deserialize payload at: sf.rest.shared.model.incident.ClearMultipleIncidentsRequest[\\\"filters\\\"]->java.util.ArrayList[0]->sf.rest.shared.model.PropertyFilter[\\\"propertyValue\\\"]\"\n    }\n```\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "description": "HTTP response code 400\n",
                      "x-description": "HTTP response code, always `400`\n",
                      "type": "integer"
                    },
                    "message": {
                      "description": "Error message\n",
                      "x-description": "Human-readable text string\n",
                      "type": "string"
                    }
                  }
                },
                "example": "{\n  \"code\": 400,\n  \"message\": \"Failed to deserialize payload at: sf.rest.shared.model.incident.ClearMultipleIncidentsRequest[\\\"filters\\\"]->java.util.ArrayList[0]->sf.rest.shared.model.PropertyFilter[\\\"propertyValue\\\"]\"\n}\n"
              }
            }
          },
          "401": {
            "description": "Invalid authentication token\n",
            "x-description": "Invalid authentication token\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "example": "\"Invalid token specified.\"\n"
              }
            }
          }
        }
      }
    },
    "/incident/{id}/clear": {
      "put": {
        "tags": [
          "Clear Single Incident"
        ],
        "summary": "Clears an incident specified by the `{id}`path parameter",
        "description": "Clears an incident\n",
        "x-description": "Manually clears the incident identified by the\nincident ID specified in the `{id}` path parameter.\n\nThis API can be used with incidents created by a detector you add\nusing the UI or a detector you add using the API (a v2\ndetector).\n\nThis operation doesn't return a response body.\n",
        "operationId": "Clear Single Incident",
        "parameters": [
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token.\n",
            "x-description": "Authentication token.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the incident you want to clear\n",
            "x-description": "The id of an existing incident that you want to clear\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Successfully cleared the event\n"
          }
        }
      }
    },
    "/alertmuting": {
      "get": {
        "tags": [
          "Retrieve Muting Rules Query"
        ],
        "summary": "Retrieves muting rules based on search criteria",
        "description": "Retrieves notification muting rules based on query parameters\n",
        "x-description": "Retrieves muting rules based on the query\nyou specify in the `query` query parameter.\nThis endpoint retrieves muting rules regardless of the version\nof the detector associated with the rule.\n\nNote: Splunk Observability Cloud returns a maximum of 10,000 rules, even if your organization contains more than 10,000. To learn more, see the\n[Considerations for retrieve operations](https://dev.splunk.com/observability/docs/apibasics/retrieve_data_basics#Considerations-for-retrieve-operations) section in the developer guide.\n",
        "operationId": "Retrieve Muting Rules Using Query",
        "parameters": [
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token.\n",
            "x-description": "Authentication token.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "include",
            "in": "query",
            "description": "Type of muting rules you want to retrieve\n",
            "x-description": "Specifies the type of muting rules you want to retrieve. The allowed values are:\n\n* `Past`: Retrieve expired muting rules\n* `Future`: Retrieve muting rules scheduled to start in the future\n* `Ongoing`: Retrieve currently active muting rules\n* `Open`: Retrieve muting rules with no scheduled end date\n* `All`: Retrieve muting rules of all types\n",
            "schema": {
              "type": "string",
              "enum": [
                "Past",
                "Future",
                "Ongoing",
                "Open",
                "All"
              ],
              "example": "All"
            },
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return from the result set\n",
            "x-description": "The number of results to return from the\nresult set.\n",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 50
            },
            "required": false
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index in the result set from which the API starts returning results\n",
            "x-description": "The result object in the result set at which\nthe API should start returning results to you.\nIf omitted, the API starts at the first result\nin the set.\n",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 0
            },
            "required": false
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Metadata property on which the API sorts the results\n",
            "x-description": "The metadata property on which the API should\nsort the results. You don't have to include\nthis property in the query, but the name must\nbe a property of muting rules.\n\nPrepend a `-` character to the property name to sort in descending order. If you want to apply `order_by` to non-custom property fields like `timestamp`, prepend the field with `sf_`. For example: `order_by=-sf_timestamp`.\n",
            "schema": {
              "type": "string",
              "example": "sf_timestamp"
            },
            "required": false
          },
          {
            "name": "query",
            "in": "query",
            "description": "Query that specifies the muting rules you want to retrieve\n",
            "x-description": "Specify which muting rules to retrieve based on description and filters.\n\n* You can retrieve muting rules with description containing specific keywords using this format: `query=sf_description:<pattern>`. For example, this is a query for muting rules with description related to CPU: `query=sf_description:cpu_*`.\n* You can retrieve muting rules with filters containing specific keywords using this format: `query=sf_filters.lowercase:<pattern>`. For example, this is a query for muting rules with filters for the AWS US East region: `query=sf_filters.lowercase:us-east-2a`.\n* To search for muting rules by specific values of a dimension or custom property, use `query=<name>:<value>`. If `<value>` contains non-alphanumeric characters, encode the non-alphanumeric characters and surround the value with double quotes. For example, the region custom property value `US East` must be passed in the parameter as `region:\"US%20East\"`.\n\nNote: The value for `sf_description` is case sensitive.\n",
            "schema": {
              "type": "string",
              "example": "sf_description:cpu_*"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Successfully retrieved muting rules,\nor no rules matched the search criteria\n",
            "headers": {
              "Content-Type": {
                "description": "Always `\"application/json\"`\n",
                "x-description": "Format of the response body. Always `\"application/json\"`.\n",
                "schema": {
                  "type": "string",
                  "default": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveAlertMutingRulesResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Create Single Muting Rule"
        ],
        "summary": "Creates a new muting rule",
        "description": "Creates a new notification muting rule\n",
        "x-description": "Creates a new muting rule, based on the\nspecifications in the request body. Unlike the detector APIs, you can\nuse the muting APIs with detectors you create in the UI as\nwell as detectors you create with the API.\n\nNote: In some cases, Splunk Observability Cloud may send notifications during a muting period.\nTo learn more, see the section\n[Mute alert notifications](https://docs.splunk.com/observability/en/alerts-detectors-notifications/mute-notifications.html)\nin the user documentation.\n\nWhen you create a muting rule, you can resolve all of the alerts for the\nmuting rule you created by setting the optional `resolveMatchingActiveAlerts`\nquery parameter to `true`. The flag's default value is `false`.\n",
        "operationId": "Create Single Muting Rule",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Always `\"application/json\"`\n",
            "x-description": "Format of the request body. Always `\"application/json\"`.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token.\n",
            "x-description": "Authentication token.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "resolveMatchingActiveAlerts",
            "in": "query",
            "description": "Indicates that Splunk Observability Cloud should resolve alerts for the matched rules\n",
            "x-description": "Optional resolve alerts flag. If you set the flag to `true`,\nSplunk Observability Cloud resolves the alerts that match the muting rule you created.\nIf you leave out the parameter or set it to `false`, Splunk Observability Cloud takes no action.\n",
            "schema": {
              "type": "boolean"
            },
            "required": false,
            "example": true
          }
        ],
        "requestBody": {
          "description": "Properties of a new notification muting rule\n",
          "x-description": "Contains the specification of a new muting rule.\n\nNote: You can't create properties that are marked read-only\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertMutingRule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success\n",
            "x-description": "Successful request.\n",
            "headers": {
              "Content-Type": {
                "description": "Always `\"application/json\"`\n",
                "x-description": "Format of the response body. Always `\"application/json\"`.\n",
                "schema": {
                  "type": "string",
                  "default": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertMutingRule"
                }
              }
            }
          }
        }
      }
    },
    "/alertmuting/{id}": {
      "get": {
        "tags": [
          "Retrieve Muting Rule ID"
        ],
        "summary": "Retrieves the muting rule specified in the {id} path parameter",
        "description": "Retrieves a muting rule\n",
        "x-description": "Retrieves a muting rule, based on the rule ID specified in the\n`{id}` path parameter. Unlike the detector APIs, you can use the alert\nmuting APIs with detectors you create in the UI as well as detectors you\ncreate with the API.\n",
        "operationId": "Retrieve Muting Rule ID",
        "parameters": [
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token.\n",
            "x-description": "Authentication token.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the muting rule you want\n",
            "x-description": "ID of a muting rule\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Successful retrieval of the specified muting rule\n",
            "headers": {
              "Content-Type": {
                "description": "Always `\"application/json\"`\n",
                "x-description": "Format of the response body. Always `\"application/json\"`.\n",
                "schema": {
                  "type": "string",
                  "default": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertMutingRule"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Update Single Muting Rule"
        ],
        "summary": "Updates a muting rule",
        "description": "Updates a muting rule\n",
        "x-description": "Updates the muting rule specified in the `{id}` path parameter,\nusing the values specified in the request body. Unlike the detector\nAPIs, you can use the muting APIs with detectors you create in the\nUI as well as detectors you create with the API.\n\nNote: In some cases, Splunk Observability Cloud may send notifications during a muting period.\nTo learn more, see the section\n[Mute alert notifications](https://docs.splunk.com/observability/en/alerts-detectors-notifications/mute-notifications.html)\nin the user documentation.\n\nWhen you update a muting rule, you can resolve all of the alerts that match\nthe rule by setting the optional `resolveMatchingActiveAlerts` query parameter\nto `true`. The flag's default value is `false`.\n",
        "operationId": "Update Single Muting Rule",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Always `\"application/json\"`\n",
            "x-description": "Format of the request body. Always `\"application/json\"`.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token.\n",
            "x-description": "Authentication token.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the muting rule you want to modify\n",
            "x-description": "The ID of a muting rule\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "resolveMatchingActiveAlerts",
            "in": "query",
            "description": "Indicates that you want Splunk Observability Cloud to resolve alerts for the rule\n",
            "x-description": "Optional resolve alerts flag. If you set the flag to `true`,\nSplunk Observability Cloud resolves the alerts for the muting rule you're updating.\nIf you leave out the parameter or set it to `false`, Splunk Observability Cloud takes no action.\n",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ],
        "requestBody": {
          "description": "Properties you want to update. These overwrite existing properties\n",
          "x-description": "Muting rule properties that overwrite existing properties\n\nNote: You can't create or update properties that are marked\nread-only.\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertMutingRule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Successfully updated the muting rule\n",
            "headers": {
              "Content-Type": {
                "description": "Always `\"application/json\"`\n",
                "x-description": "Format of the response body. Always `\"application/json\"`.\n",
                "schema": {
                  "type": "string",
                  "default": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertMutingRule"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Delete Single Muting Rule"
        ],
        "summary": "Deletes a muting rule specified in the {id} path parameter",
        "description": "Deletes a muting rule\n",
        "x-description": "Deletes a muting rule, specified by the rule ID in the `{id}`\npath parameter. Unlike the detector APIs that create v2 detectors,\nyou can use the muting APIs with detectors you create using the web\nUI as well as detectors you create using the API (v2 detectors).\n\nThis operation doesn't return a response body.\n\nNote: You can't delete an active muting rule.\n",
        "operationId": "Delete Single Muting Rule",
        "parameters": [
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token.\n",
            "x-description": "Authentication token.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the muting rule you want to delete\n",
            "x-description": "The ID of a muting rule\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Successful deletion of a muting rule that starts in the future.\n"
          },
          "400": {
            "description": "Invalid request\n",
            "x-description": "Bad request, for example, you tried to delete a muting rule that starts in the past\n"
          },
          "404": {
            "description": "The muting rule doesn't exist\n",
            "x-description": "Muting rule for the ID you specified doesn't exist.\n"
          }
        }
      }
    },
    "/alertmuting/{id}/unmute": {
      "put": {
        "tags": [
          "Unmute Single Muting Rule"
        ],
        "summary": "Ends the active muting period for a muting rule",
        "description": "Ends the active muting period for a muting rule\n",
        "x-description": "Ends the muting period that's currently active for a muting rule\nand updates the stop time to the current server time.\n\nThis operation works with muting rules for detectors you create\nusing the UI as well as detectors you create using the API\n(v2 detectors).\n\nNote: In some cases, Splunk Observability Cloud may send notifications during a muting period.\nTo learn more, see the section\n[Mute alert notifications](https://docs.splunk.com/observability/en/alerts-detectors-notifications/mute-notifications.html)\nin the user documentation.\n",
        "operationId": "Unmute Single Muting Rule",
        "parameters": [
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token.\n",
            "x-description": "Authentication token.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the muting rule you want to unmute\n",
            "x-description": "The ID of a muting rule\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Successfully unmuted an alert\n",
            "headers": {
              "Content-Type": {
                "description": "Always  `\"application/json\"`\n",
                "x-description": "Format of the response body. Always `\"application/json\"`.\n",
                "schema": {
                  "type": "string",
                  "default": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertMutingRule"
                }
              }
            }
          }
        }
      }
    },
    "/team": {
      "get": {
        "tags": [
          "Retrieve Teams by Name"
        ],
        "summary": "Retrieves teams using a name search",
        "description": "Retrieves teams using a name search\n",
        "x-description": "Retrieves one or more team objects, based on a name specified in the\nquery parameters.\n\nNote: Splunk Observability Cloud returns a maximum of 10,000 teams for the specified name pattern, even if your organization contains more than 10,000. To learn more, see the\n[Considerations for retrieve operations](https://dev.splunk.com/observability/docs/apibasics/retrieve_data_basics#Considerations-for-retrieve-operations) section in the developer guide.\n",
        "operationId": "Retrieve Teams by Name",
        "parameters": [
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return\n",
            "x-description": "Maximum number of team objects to return. The default is 20, and \nthe API uses this value if you specify an invalid value.\n",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 20
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index in result set at which the API should start returning results\n",
            "x-description": "0-based index in the result set where the API should start\nreturning team objects.\n",
            "schema": {
              "type": "number",
              "format": "int32",
              "default": 0,
              "minimum": 0
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Team name filter\n",
            "x-description": "A search pattern for the value of the `name` property of a team\nobject. You can use any ASCII character in the string,  and \nthe API matches the pattern to any part of the name property. For\nexample, `name=Sig` matches the following team names:\n\n* `\"SignalFlow\"`\n* `\"SignedMetrics\"`\n* `\"Insignia\"`\n\nThe following conditions cause the API to match any value of\nthe `name` property:\n\n* String of length 0\n* Omitting the `name` parameter from the query\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Property on which the API should sort results\n",
            "x-description": "Team object property that the API should sort results on.\n\nPrepend a `-` character to the property name to sort in descending order. If you want to apply `order_by` to non-custom property fields like `timestamp`, prepend the field with ``sf_``. For example: `order_by=-sf_timestamp`.            \n",
            "schema": {
              "type": "string",
              "default": "lastUpdated"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Success\n\nNote: The API returns `200` even if the query doesn't match any\nobjects. In this case, the response object is empty.\n",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Results\n",
                  "x-description": "Query results, in the form of a JSON object\n",
                  "type": "object",
                  "properties": {
                    "count": {
                      "description": "Number of results in the result set\n",
                      "x-description": "Number of team objects that matched the provided search\ncriteria.\n\nNote: This value is a count of the total\nnumber of objects in the result set. The number of objects\nthat the system returns is affected by the `limit` and\n`offset` query parameters. In summary:\n\n* `count`: Size of result set\n* number of returned objects:\n\n  * (`limit` - `offset`) >= `count`: `count`\n  * (`limit` - `offset`) < `count`: `limit` - `offset`\n",
                      "type": "integer",
                      "format": "int32"
                    },
                    "results": {
                      "description": "List of teams\n",
                      "x-description": "List of team objects that the system returns as the result\nof the request. The number and location of the objects\nwithin the result set depend on the query parameters you\nspecify in the request. To learn more, see the top-level\ndescription of the API and the description of the `count`\nresponse property\n",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TeamResponseBody"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Create Single Team"
        ],
        "summary": "Creates a team",
        "description": "Creates a team\n",
        "x-description": "Creates the team specified by the properties in the request body\n",
        "operationId": "Create Single Team",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Always  `\"application/json\"`\n",
            "x-description": "Format of the request body. Always  `\"application/json\"`.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token associated with an admin user\n",
            "x-description": "Authentication token. Must be a session token (User API access token)\nfor an administrator.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "Team properties\n",
          "x-description": "Properties that the API uses to create the team object\n",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Successful creation of a team\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/team/{tid}": {
      "get": {
        "tags": [
          "Retrieve Team Using ID"
        ],
        "summary": "Retrieves the team specified in the {tid} path parameter",
        "description": "Retrieves a team\n",
        "x-description": "Retrieves the team name and team members for the team specified by the\n`id` path parameter.\n",
        "operationId": "Retrieve Team Using ID",
        "parameters": [
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "tid",
            "in": "path",
            "description": "Team ID\n",
            "x-description": "ID of an existing team\n",
            "required": true,
            "schema": {
              "type": "string"
            },
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Successful retrieval of team information for the specified team. The\nresponse object contains the team name and an array of IDs for the\nteam members.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamResponseBody"
                }
              }
            }
          },
          "404": {
            "description": "Invalid team ID\n",
            "x-description": "Request failed because the API couldn't find the specified team ID.\nThe response object contains the string Unable to find the given\nteam.\n"
          }
        }
      },
      "put": {
        "summary": "Updates the team specified in the {tid} path parameter",
        "tags": [
          "Update Team"
        ],
        "operationId": "Update Team",
        "description": "Updates a team\n",
        "x-description": "Updates the team object specified by the `{tid}` path parameter\n",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Always  `\"application/json\"`\n",
            "x-description": "Format of the request body. Always  `\"application/json\"`.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token associated with an admin user\n",
            "x-description": "Authentication token. Must be a session token (User API access token)\nfor an administrator.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "tid",
            "in": "path",
            "description": "Team ID\n",
            "x-description": "ID of an existing team\n",
            "required": true,
            "schema": {
              "type": "string"
            },
            "allowEmptyValue": false
          }
        ],
        "requestBody": {
          "description": "Request body\n",
          "x-description": "An object containing the properties you want to update in the team\nobject. You must specify the `name` property; all other properties are\noptional.\n",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Successful team object update\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamResponseBody"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Delete Team"
        ],
        "operationId": "Delete Team",
        "summary": "Deletes the team specified in the {tid} path parameter",
        "description": "Deletes a team\n",
        "x-description": "Deletes a team from the organization, based on the team's ID specified\nby the `{tid}` path parameter.\n",
        "parameters": [
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token associated with an admin user\n",
            "x-description": "Authentication token. Must be a session token (User API access token)\nfor an administrator.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "tid",
            "in": "path",
            "description": "Team ID\n",
            "x-description": "ID of an existing team\n",
            "required": true,
            "schema": {
              "type": "string"
            },
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "204": {
            "description": "No Content\n",
            "x-description": "No Content. Successful deletion of the specified team object. The system doesn't\nreturn a response object.\n"
          }
        }
      }
    },
    "/team/{tid}/members": {
      "put": {
        "tags": [
          "Add Team Member List"
        ],
        "operationId": "Add Team Member List",
        "summary": "Adds team members",
        "description": "Adds new members to the team specified by the `{tid}` path parameter.\n",
        "x-description": "Adds new members to the team specified by the `{tid}` path parameter. \n\nThis endpoint doesn't overwrite existing team members.\n",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Always  `\"application/json\"`\n",
            "x-description": "Format of the request body. Always  `\"application/json\"`.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token associated with an admin user\n",
            "x-description": "Authentication token. Must be a session token (User API access token)\nfor an administrator.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "tid",
            "in": "path",
            "description": "Team ID\n",
            "x-description": "ID of an existing team\n",
            "required": true,
            "schema": {
              "type": "string"
            },
            "allowEmptyValue": false
          }
        ],
        "requestBody": {
          "description": "List of team members to add\n",
          "x-description": "List of team members to add to the team specified by the `{tid}`\npath parameter\n",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "members": {
                    "description": "List of one or more Splunk Observability Cloud-assigned user IDs to add to the team\n",
                    "x-description": "List of one or more Splunk Observability Cloud-assigned user IDs to add to the team,\nin the form of a JSON array of strings\n",
                    "type": "array",
                    "items": {
                      "description": "User ID of the team member to add\n",
                      "x-description": "User ID of a team member to add to the team\n",
                      "type": "string"
                    },
                    "example": [
                      "XxXXxXXXXXX",
                      "YyYYyYYYYYY",
                      "ZzZZzZZZZZZ"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content\n",
            "x-description": "No Content. Successful update. The system doesn't return a response body.\n"
          }
        }
      },
      "delete": {
        "tags": [
          "Delete Team Members"
        ],
        "operationId": "Delete Team Members List",
        "summary": "Deletes one or more members from a team",
        "description": "Deletes one or more members from the team specified by the {tid} path parameter\n",
        "x-description": "Deletes one or more team members from the team specified by the {tid} path parameter\n\nNote: This method takes a request body containing the user IDs of the members you want to delete.\n",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Always  `\"application/json\"`\n",
            "x-description": "Format of the request body. Always  `\"application/json\"`.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token associated with an admin user\n",
            "x-description": "Authentication token. Must be a session token (User API access token)\nfor an administrator.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "tid",
            "in": "path",
            "description": "Team ID\n",
            "x-description": "ID of an existing team\n",
            "required": true,
            "schema": {
              "type": "string"
            },
            "allowEmptyValue": false
          }
        ],
        "requestBody": {
          "description": "List of members to delete, in the form of a JSON object containing a JSON array\n",
          "x-description": "List of members to delete, in the form of a JSON object that contains a list of user IDs to delete.\nThe list has the form of a JSON array.\n",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "members": {
                    "description": "List of members\n",
                    "x-description": "List of members to remove from the team, in the form of a JSON array of\nstrings containing user IDs\n",
                    "type": "array",
                    "items": {
                      "description": "Organization user ID of a user you want to remove from the team\n",
                      "x-description": "Organization user ID of a user you want to remove from the team\n",
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "members": [
                    "XxXXxXXXXXX",
                    "YyYYyYYYYYY",
                    "ZzZZzZZZZZZ"
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content\n",
            "x-description": "No Content. Successful deletion of the specified members from the team. The system doesn't\nreturn a response object.\n"
          },
          "403": {
            "description": "Forbidden\n",
            "x-description": "Forbidden. The authentication token is associated with a user who's\nnot an administrator.\n"
          }
        }
      }
    },
    "/team/{tid}/member/{uid}": {
      "put": {
        "summary": "Updates the team specified by {tid} by adding the user specified by {uid}\n",
        "tags": [
          "Update Team Membership using User Id"
        ],
        "operationId": "Update Team Membership User Id",
        "description": "Updates a team by adding a user by ID\n",
        "x-description": "Updates the team specified by the `{tid}` path parameter by adding the user\nspecified by the `{uid}` path parameter.\nNotes:\n\n  * Although this is a PUT method, it doesn't have overwrite semantics. Instead, the\n    specified user is added to the existing team without any other updates.\n  * This method doesn't have a request body.\n",
        "parameters": [
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token associated with an admin user\n",
            "x-description": "Authentication token. Must be a session token (User API access token)\nfor an administrator.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "tid",
            "in": "path",
            "description": "Team ID\n",
            "x-description": "ID of an existing team\n",
            "required": true,
            "schema": {
              "type": "string"
            },
            "allowEmptyValue": false
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User ID\n",
            "x-description": "ID, assigned by Splunk Observability Cloud, for a user you want\nto add to the team specified by {tid}\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content.\n",
            "x-description": "No Content. Successful update. The system doesn't return a response body.\n"
          },
          "403": {
            "description": "Forbidden\n",
            "x-description": "Forbidden. The authentication token is associated with a user who's\nnot an administrator.\n"
          }
        }
      },
      "delete": {
        "summary": "Deletes the user specified by {uid} from the team specified by {tid}\n",
        "tags": [
          "Delete User from Team using User Id"
        ],
        "operationId": "Delete Team User User Id",
        "description": "Deletes a user from a team\n",
        "x-description": "Deletes the user specifed by the `{uid}` path parameter from the\nteam specified by the `{tid}` path parameter\n",
        "parameters": [
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token associated with an admin user\n",
            "x-description": "Authentication token. Must be a session token (User API access token)\nfor an administrator.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "tid",
            "in": "path",
            "description": "Team ID\n",
            "x-description": "ID of an existing team\n",
            "required": true,
            "schema": {
              "type": "string"
            },
            "allowEmptyValue": false
          },
          {
            "name": "uid",
            "in": "path",
            "description": "User ID\n",
            "x-description": "ID, assigned by Splunk Observability Cloud, for a user you want\nto add to the team specified by {tid}\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content.\n",
            "x-description": "No Content. Successful deletion of the specified user. The system doesn't\nreturn a response object.\n"
          },
          "400": {
            "description": "Bad Request\n",
            "x-description": "Bad Request. The user specified by `{uid}` is not a member of\nthe team specified by `{tid}`\n"
          }
        }
      }
    },
    "/detector": {
      "post": {
        "tags": [
          "Create Single Detector"
        ],
        "summary": "Creates a detector",
        "description": "Creates a detector\n",
        "x-description": "Creates a new detector object. Detectors define rules for identifying\nconditions of interest to the customer, and the notifications to send\nwhen the conditions occur or stop occurring.\n\nFor more information on\ndetectors including the types of notifications available,\nsee [Detect Anomalies with Detectors](https://dev.splunk.com/observability/docs/detectors/detectors_events_alerts)\nin the Developers Guide.\n",
        "operationId": "Create Single Detector",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "`\"application/json\"`\n",
            "x-description": "Request body format. Always `\"application/json\"`.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "Properties for the new detector\n",
          "x-description": "A JSON object that contains the values for the new detector\n",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDetectorRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Success\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDetectorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request\n",
            "x-description": "The request is invalid because your request body has one or more errors. Possible errors include but are not limited to the following problems:\n\n  * You tried to create or update a detector with an empty `name` or `programText` field.\n  * You created or updated a detector rule but didn't specify a value for `detectLabel` or `severity`.\n  * You specified an unsupported timezone.\n  * You assigned a detect label to multiple rules, but you're only allowed to assign a detect label to a single rule.\n  * You assigned a detect label to a rule but didn't specify it in `programText`.\n  * You specified an invalid value for `detectorOrigin`.\n",
            "headers": {
              "Content-Type": {
                "description": "`\"application/json\"`\n",
                "x-description": "Format of the response body. Always `\"application/json\"`.\n",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "description": "HTTP response code\n",
                      "x-description": "HTTP response code. Always '400'\n",
                      "type": "integer",
                      "format": "int32"
                    },
                    "message": {
                      "description": "Error explanation\n",
                      "x-description": "Error explanation\n",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Retrieve Detectors Query"
        ],
        "summary": "Retrieves detectors based on search criteria",
        "description": "Retrieves detector properties based on the query parameters\n",
        "x-description": "Retrieves the properties of one or more detectors. If you don't\nspecify any query parameters, the API returns up to the first 50\ndetector objects that you have access to.\n",
        "operationId": "Retrieve Detectors Query",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "`\"application/json\"`\n",
            "x-description": "Format of the request body. Always `\"application/json\"`.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return from the result set\n",
            "x-description": "Number of results to return from the list of detectors that match your search criteria.\n\nTogether, the `offset` and `limit` properties provide paged access to the query results. You can repeatedly download small slices of a large query result, which\nhelps you avoid bandwidth and performance problems.\n",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50,
              "example": 100,
              "maximum": 10000,
              "minimum": 0
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Search criteria for existing detector name\n",
            "x-description": "Search criteria that the API tries to match to the `name` property\nof existing detectors. The match can be full or partial. If the\nstring is empty, it's ignored and the API uses the other criteria in\nthe query. For example, a value of \"per\" matches detectors for which\nthe name contains \"dropped per day\", \"95th percentile\", or \"personal\ndisk usage\".\n",
            "schema": {
              "type": "string"
            },
            "allowEmptyValue": true,
            "required": false
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index in result set at which request should start returning detector\n",
            "x-description": "Index, in the list of detectors that match your search criteria, at\nwhich you want to start downloading results.\n\nTogether, the `offset` and limit properties provide paged access to\nthe query results. You can repeatedly download small slices of a large\nquery result, which helps you avoid bandwidth and performance problems.\n",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "minimum": 0
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "description": "The field on which the API should sort the query results. The API only supports fields specified in the enum. \n",
            "x-description": "The field on which the API should sort the query results. The API only supports fields specified in the enum.\n",
            "schema": {
              "type": "string",
              "enum": [
                "creator",
                "created",
                "description",
                "lastUpdated",
                "lastUpdatedBy",
                "name",
                "tags"
              ],
              "default": "lastUpdated"
            }
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "description": "Detector tags search criteria\n",
            "x-description": "Search criteria that the API applies to the elements of the `tags`\narray property of detectors. The string must be an exact match.\nYou can specify multiple `tags` parameters in the same request.\n",
            "schema": {
              "type": "string"
            },
            "allowEmptyValue": true
          },
          {
            "name": "prefixTags",
            "in": "query",
            "required": false,
            "description": "Search filter that the API applies to find and return only detectors \nwhich have at least one tag starting with the provided prefix, \nfor each prefix provided.\n",
            "x-description": "Search filter that the API applies to find and return only detectors \nwhich have at least one tag starting with the provided prefix, \nfor each prefix provided.\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "allowEmptyValue": true
          },
          {
            "name": "prefixTagExclusions",
            "in": "query",
            "required": false,
            "description": "Search filter that the API applies to exclude detectors which have at least one \ntag starting with any of the provided prefixes from the query result.\n",
            "x-description": "Search filter that the API applies to exclude detectors which have at least one \ntag starting with any of the provided prefixes from the query result.\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Success\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDetectorsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/detector/{id}": {
      "get": {
        "tags": [
          "Retrieve Detector ID"
        ],
        "summary": "Retrieves a specified detector",
        "description": "Retrieves a detector based on its ID\n",
        "x-description": "Retrieves the properties of the detector that has the\nID specified in the `{id}` path parameter.\n",
        "operationId": "Retrieve Detector ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of an existing detector\n",
            "x-description": "ID for a detector\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Success\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDetectorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request\n",
            "x-description": "Bad request.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Update Single Detector"
        ],
        "summary": "Updates properties for a detector",
        "description": "Updates a detector\n",
        "x-description": "Updates the properties of the detector with the ID\nspecified in the `{id}` path parameter.\n\nNote: You can only update the `team`, `disabled`, and `notifications` fields for detectors that have `detectorOrigin` value `AutoDetect`.\n\nThe PUT `/detector/{id}` operation has overwrite semantics:\n\n* For read-write properties, if the value is already specified, a new\n  value in the request body overwrites it.\n* For read-write properties, if the value is already specified, and\n  you don't specify a value for it, the API removes the property\n  from the detector.\n\nProperties that are read-write are annotated in the request body\nproperty descriptions.\n\nBecause of these semantics, you have to explicitly preserve existing\nvalues as follows:\n\n1.  Send a GET `/detector/{id}` request to retrieve the existing\n    detector values.\n2.  Update any read-write properties in the response body with the new\n    values you want to use.\n3.  Use the response body as the request body in the\n    PUT `/detector/{id}` operation to update the detector.\n\nNote: When you update a detector, Splunk Observability Cloud stops the SignalFlow program associated with the detector and sends a stop notification to all the recipients currently configured for the detector. \n\nFor detectors with a large number of recipients or a large number of alerts, to avoid sending out stop notifications when you update a detector, mute all the alerts before updating it.\n\nAfter you've updated the detector, you can unmute its alerts.\n",
        "operationId": "Update Single Detector",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of an existing detector\n",
            "x-description": "ID of a detector you want to update\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "`\"application/json\"`\n",
            "x-description": "Format of the request body. Always `\"application/json\"`.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n\nNote: If you're updating the `authorizedWriters`\nproperty, and your user ID isn't in `authorizedWriters` already,\nthen you need to use a session token (User API access token)\nassociated with an administrator.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "Request body properties\n",
          "x-description": "Properties you want to use to update an existing detector, in\nthe form of a JSON object.\n",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDetectorRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Success\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateDetectorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request\n",
            "x-description": "The request is invalid because your request body has one or more errors. Possible errors include but are not limited to the following problems:\n\n  * You tried to create or update a detector with an empty `name` or `programText` field.\n  * You created or updated a detector rule but didn't specify a value for `detectLabel` or `severity`.\n  * You specified an unsupported timezone.\n  * You assigned a detect label to multiple rules, but you're only allowed to assign a detect label to a single rule.\n  * You assigned a detect label to a rule but didn't specify it in `programText`.\n  * You specified an invalid value for `detectorOrigin`.\n",
            "headers": {
              "Content-Type": {
                "description": "`\"application/json\"`\n",
                "x-description": "Format of the response body. Always `\"application/json\"`.\n",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "description": "HTTP response code\n",
                      "x-description": "HTTP response code. Always '400'\n",
                      "type": "integer",
                      "format": "int32"
                    },
                    "message": {
                      "description": "Error explanation\n",
                      "x-description": "Error explanation\n",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Delete Single Detector"
        ],
        "summary": "Deletes a single detector",
        "description": "Deletes a detector\n",
        "x-description": "Deletes the detector specified by the `{id}` path parameter.\n\nNote: When you delete a detector, Splunk Observability Cloud stops the SignalFlow program associated with the detector and sends a stop notification to all the recipients currently configured for the detector.\n\nFor detectors with a large number of recipients or a large number of alerts, to avoid sending out stop notifications, delete all the recipients from the detector before you delete the detector. When the detector has no recipients, Splunk Observability Cloud doesn\u2019t send out any notification.\n",
        "operationId": "Delete Single Detector",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the detector you want to delete\n",
            "x-description": "ID of the detector you want to delete.\nUsing the API, you can retrieve this value using GET `/v2/detector`\nwith the detector's name.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success. The operation doesn't return a response body.\n",
            "x-description": "Success. The operation doesn't return a response body.\n"
          },
          "400": {
            "description": "Invalid request\n",
            "x-description": "Invalid request. The response body contains the HTTP response code\nand a text message.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "description": "HTTP response code 400\n",
                      "x-description": "HTTP response code. Always '400'.\n",
                      "type": "integer"
                    },
                    "message": {
                      "description": "Error message\n",
                      "x-description": "Text message that describes the error. For example, if\nyou specify an invalid detector ID, the API returns the\nmessage \"Invalid ID <specified_id>\".\n",
                      "type": "string"
                    }
                  },
                  "example": {
                    "code": 400,
                    "message": "Invalid ID junkID"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid authentication token\n",
            "x-description": "Invalid or unauthorized authentication token. The value of\n`X-SF-TOKEN` is incorrect. The response body contains a text message.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "example": "Invalid token specified."
              }
            }
          }
        }
      }
    },
    "/detector/{id}/enable": {
      "put": {
        "tags": [
          "Enable Detect Blocks"
        ],
        "summary": "Enables detect blocks for a detector",
        "description": "Enable the detect objects in a detector\n",
        "x-description": "Enables `detect()` blocks in the detector specified by the `{id}` path parameter.\n\nYou can use PUT `/detector/{id}/enable` with both `Standard` and `AutoDetect` detectors.\n\nWhen you enable a disabled `detect()` block, it starts creating events again.\nIf you muted notifications for dimensions or properties associated with this\n`detect()` block, you have to unmute them separately.\n\nSending this request for a `detect()` block that's already enabled\ndoesn't return an error, and the detector remains enabled. You can\nmake the request without first checking the current state of the detector.\n\nEnabling a `detect()` block doesn't clear active alerts. Instead,\nSplunk Observability Cloud keeps them until after you clear the condition in the signal\nthat first triggered the block. To learn more about enabling and unmuting,\nsee the section [Notification muting](/detectors_events_alerts#Notification-muting).\n\nThis request doesn't return a response body.\n",
        "operationId": "Enable Detect Blocks",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the detector that contains the detect blocks you want to enable\n",
            "x-description": "Detector ID of the detector that contains\nthe `detect()` blocks you want to enable. Using the API, you can\nretrieve this value using GET `/v2/detector` with the detector's\nname.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "`\"application/json\"`\n",
            "x-description": "Format of the request body. Always `\"application/json\"`.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "List of detect object labels you want to enable\n",
          "x-description": "List of labels for the `detect()` blocks you want to enable,\nin the form of a JSON array of strings. If you specify an\nempty array, Splunk Observability Cloud enables all of the detector's `detect()` blocks.\n",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "Detect object label\n",
                  "x-description": "Label of a `detect()` block you want to enable\n"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success. The response doesn't return a response body.\n",
            "x-description": "Success. The response doesn't return a response body.\n"
          },
          "400": {
            "description": "Invalid request\n",
            "x-description": "Invalid request. For example, the request body contains a `detect()`\nblock label that doesn't exist in the detector.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "description": "HTTP response code 400\n",
                      "x-description": "HTTP response code. Always `400`.\n",
                      "type": "integer"
                    },
                    "message": {
                      "description": "Error message\n",
                      "x-description": "Text that describes the error.\n",
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "code": 400,
                  "message": "Label not found in detector: invalidLabel"
                }
              }
            }
          },
          "401": {
            "description": "Invalid authentication token\n",
            "x-description": "Invalid or unauthorized authentication token. The value of\n`X-SF-TOKEN` is incorrect. The response body contains a text message.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "example": "Invalid token specified."
              }
            }
          }
        }
      }
    },
    "/detector/{id}/disable": {
      "put": {
        "tags": [
          "Disable Detect Blocks"
        ],
        "summary": "Disables detect blocks for a detector",
        "description": "Disables detect objects in a detector\n",
        "x-description": "Disables `detect()` blocks in the SignalFlow for the detector specified\nin the `{id}` path parameter.\n\nYou can use PUT `/detector/{id}/disable` with both `Standard` and `AutoDetect` detectors.\n\nWhen you disable a `detect()` block, it stops creating events and stops\nsending notifications. You can also mute notifications for dimensions\nor properties associated with the `detect()` block without disabling\nthe block itself. To learn more about disabling and muting, see the section\n[Notification muting](/detectors_events_alerts#Notification-muting).\n\nSending this request for a `detect()` block that's already disabled\ndoesn't return an error, and the detector remains disabled. You can\nmake the request without first checking the current state of the detector.\n\nDisabling a `detect()` block doesn't clear active alerts. Instead,\nSplunk Observability Cloud keeps them until after you re-enable the `detect()` block and\nclear the condition in the signal that first triggered the block.\n\nThis request doesn't return a response body.\n",
        "operationId": "Disable Detect Blocks",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the detector that contains the objects you want to disable\n",
            "x-description": "Detector ID of the detector that contains\nthe `detect()` blocks you want to disable. Using the API, you can\nretrieve this value using GET `/v2/detector` with the detector's\nname.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "`\"application/json\"`\n",
            "x-description": "Format of the request body. Always `\"application/json\"`.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "List of labels for the detect objects you want to disable\n",
          "x-description": "List of `detect()` block labels you want to disable, in the\nform of a JSON array of strings. If you specify an empty array,\nSplunk Observability Cloud disables all of the detector's `detect()` blocks.\n",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "Detect object label\n",
                  "x-description": "Label of a `detect()` block you want to disable\n"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success. The API doesn't return a response body.\n",
            "x-description": "Success. The API doesn't return a response body.\n"
          },
          "400": {
            "description": "Invalid request\n",
            "x-description": "Invalid request. For example, the request body contains a `detect()`\nblock label that doesn't exist in the detector.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "description": "HTTP response code 400\n",
                      "x-description": "HTTP response code. Always `400`.\n",
                      "type": "integer"
                    },
                    "message": {
                      "description": "Error message\n",
                      "x-description": "Text that describes the error.\n",
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "code": 400,
                  "message": "Label not found in detector: invalidLabel"
                }
              }
            }
          },
          "401": {
            "description": "Invalid authentication token\n",
            "x-description": "Invalid or unauthorized authentication token. The value of\n`X-SF-TOKEN` is incorrect. The response body contains a text message.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "example": "Invalid token specified."
              }
            }
          }
        }
      }
    },
    "/detector/{id}/events": {
      "get": {
        "tags": [
          "Retrieve Events Single Detector"
        ],
        "summary": "Retrieves events generated by a detector",
        "description": "Retrieves events for a detector, based on the query parameters\n",
        "x-description": "Retrieves the events generated by the detector identified by the `id`\npath parameter.\n\nNote: Splunk Observability Cloud returns a maximum of 10,000 events, even if your organization contains more than 10,000. To learn more, see the\n[Considerations for retrieve operations](https://dev.splunk.com/observability/docs/apibasics/retrieve_data_basics#Considerations-for-retrieve-operations) section in the developer guide.\n",
        "operationId": "Retrieve Events Single Detector",
        "parameters": [
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the detector you want to retrieve\n",
            "x-description": "The ID of the detector that generated the events\nyou want to retrieve.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "from",
            "in": "query",
            "description": "Starting timestamp (inclusive) of events you want to retrieve\n",
            "x-description": "The starting timestamp, inclusive, of the range of events you want\nto retrieve, in *nix time in milliseconds.\n",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": false,
            "example": 1557534630000
          },
          {
            "name": "to",
            "in": "query",
            "description": "Ending timestamp (inclusive) of events you want to retrieve\n",
            "x-description": "The ending timestamp, inclusive, for the time range of events you\nwant to retrieve, in *nix time in milliseconds.\n",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": false,
            "example": 1557689430000
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index in query result set at which to start returning results\n",
            "x-description": "The index in the query results at which you want to start getting\nresults\n",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of query results to return\n",
            "x-description": "Number of query results to return. By default, the API returns 50 detector events. If you want to retrieve a different number of detector events, change the `limit` value.\n",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50,
              "minimum": 0
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Success\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDetectorEventsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/detector/{id}/incidents": {
      "get": {
        "tags": [
          "Retrieve Incidents Single Detector"
        ],
        "summary": "Gets active incidents for a detector\n",
        "description": "Retrieves the active incidents for a detector\n",
        "x-description": "Gets the active incidents for the detector identified by the `id` path\nparameter. An incident is one or more events generated by a detector,\nsuch as alerting and clearing events.\n",
        "operationId": "Retrieve Incidents Single Detector",
        "parameters": [
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the detector that generated the incidents\n",
            "x-description": "The detector ID for the detector that generated\nthe  incidents you want to retrieve.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index in result set at which you want to start receiving results\n",
            "x-description": "The index in the query results at which you want to start getting\nresults.\n",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return\n",
            "x-description": "Number of query results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Success\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDetectorIncidentsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/detector/validate": {
      "post": {
        "tags": [
          "Validate Detector Definition"
        ],
        "summary": "Validates a detector",
        "description": "Validates a create detector request, but doesn't create the detector\n",
        "x-description": "Does a dry run of a detector request payload to see if it's valid, but\ndoesn't actually create a detector. This operation doesn't return a\nresponse body.\n",
        "operationId": "Validate Detector Definition",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "`\"application/json\"`\n",
            "x-description": "Format of the request body. Always `\"application/json\"`.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "Detector definition you want to validate\n",
          "x-description": "Detector definition\n",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateDetectorRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success. The API doesn't return a response.\n",
            "x-description": "Success. The API doesn't return a response.\n"
          }
        }
      }
    },
    "/metric": {
      "get": {
        "summary": "Retrieve metadata for metrics",
        "tags": [
          "Retrieve Metadata Metrics Query"
        ],
        "description": "Retrieves metadata based on query parameters\n",
        "x-description": "Retrieves metadata objects for which the metrics name matches the\nsearch criteria.\n\nThe API first collects all of the matching results. This is known as the\nresult set. Depending on the values you specify for `offset` and\n`limit`, the number of metadata objects in the response body can be\nsmaller than than the result set. For example, if you specify `offset=0`\n(the default) and `limit=50`, and the API finds 100 matches, you only \nreceive the first 50 results.\n\nNote: Splunk Observability Cloud returns a maximum of 10,000 metadata objects, even if your organization contains more than 10,000. To learn more, see the\n[Considerations for retrieve operations](https://dev.splunk.com/observability/docs/apibasics/retrieve_data_basics#Considerations-for-retrieve-operations) section in the developer guide.\n",
        "operationId": "Retrieve Metadata MetricsQuery",
        "parameters": [
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "query",
            "in": "query",
            "description": "Metric name search string\n",
            "x-description": "Metric name search string. The string always starts with `name:`. You\nhave the following search options:\n\n* To search by metric name, use `query=name:<metric_name>`. This\n  returns all of the metadata for that metric.\n* Metrics generated by Splunk Observability Cloud start with the prefix `sf.` or `sf_metric`.    \n* To search for names using wildcards, use `*` as the\n  wildcard character. For example, to search for all the metrics that\n  start with `cpu.`, use `name:cpu.*`. This returns metadata for\n  `cpu.utilization`, `cpu.num_cores`, and so forth.\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Property on which the API should sort the query results\n",
            "x-description": "Result object property on which the API should sort the results.\nThis must be a property of the metrics metadata object.\n\nPrepend a `-` character to the property name to sort in descending order. If you want to apply `order_by` to non-custom property fields like `timestamp`, prepend the field with ``sf_``. For example: `order_by=-sf_timestamp`.                        \n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index in the result set at which the API should start returning results\n",
            "x-description": "Object in the result set at which the API should start returning\nresults to you. If omitted, the API starts at the first result in the \nset.\n",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return\n",
            "x-description": "Number of results to return from the set of all metrics that\nmatch the query.\n",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Success\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricsQueryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/metric/{name}": {
      "get": {
        "tags": [
          "Retrieve Metadata Metric Name"
        ],
        "summary": "Retrieves the metadata for a metric name",
        "description": "Retrieves metadata for the specified metric\n",
        "x-description": "Retrieves the metadata for the metric name specified in the\n`{name}` path parameter. The API returns all of the metadata for this\nmetric.\n",
        "operationId": "Retrieve Metadata Metric Name",
        "parameters": [
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "name",
            "in": "path",
            "description": "Metric name\n",
            "x-description": "Name of an existing metric. For example, to\nretrieve the metadata for the `cpu.utilization` metric, use the\nendpoint `https://api.{REALM}.signalfx.com/v2/metric/cpu.utilization`\n",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "network.usage.rx_bytes"
          }
        ],
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Success\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricsMetadata"
                }
              }
            }
          }
        }
      }
    },
    "/dimension": {
      "get": {
        "tags": [
          "Retrieve Dimensions Query"
        ],
        "summary": "Retrieves dimensions based on a query",
        "description": "Retrieves dimensions based on query parameters\n",
        "x-description": "Retrieves the dimensions objects for the search criteria you specify\nin the `query` query parameter.\n\nThe query can contain one or more of the following:\n\n* Dimension names\n* Dimension names and values\n* Custom property names\n\nThe API first collects all of the matching results. This is known as the\nresult set. Depending on the values you specify for `offset` and\n`limit`, the number of metadata objects in the response body can be\nsmaller than than the result set. For example, if you specify `offset=0`\n(the default) and `limit=50`, and the API finds 100 matches, you only \nreceive the first 50 results.\n\nNote: Splunk Observability Cloud returns a maximum of 10,000 dimensions, even if your organization contains more than 10,000. To learn more, see the\n[Considerations for retrieve operations](https://dev.splunk.com/observability/docs/apibasics/retrieve_data_basics#Considerations-for-retrieve-operations) section in the developer guide.\n",
        "operationId": "Retrieve Dimensions Query",
        "parameters": [
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "query",
            "in": "query",
            "description": "Dimension name or name and value to search for\n",
            "x-description": "Search criteria for the dimensions you want to retrieve\n\nUse this syntax:\n\n* To search for a dimension name use `query=key:<dimension_name>`\n* To search for specific values of a dimension or property, use\n  the name and value as `query=<name>:<value>`. If `<value>` contains non-alphanumeric characters, encode the non-alphanumeric characters and surround the value with double quotes. For example, the region custom property value `US East` must be passed in the parameter as `region:\"US%20East\"`.\n* Use `*` as a wildcard character. For example, to search for all\n  values of the `region` dimension, use `query=region:*`.\n* To search for the existence of dimensions, use `_exists_` and\n`_missing_`. For example, to search for metadata that\n  has the `host_machine` dimension, specify `query=_exists_:host_machine`.\n* A single dimension name or name-value pair (or wildcards) make up\n  a predicate that implicitly returns a boolean.\n* Join predicates with the NOT, AND, and OR boolean operators.\n* Use parentheses '(' and ')' to change the evaluation order.\n  For example, to retrieve all metadata that has the dimensions\n  `region:emea` and `hostname:france-*`, use\n  `query=region:emea AND hostname:france-*`.\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Property on which the API should sort the query results\n",
            "x-description": "Metadata object property on which the API should sort the results.\nThis must be a property of the dimensions metadata object.\n\nPrepend a `-` character to the property name to sort in descending order. If you want to apply `order_by` to non-custom property fields like `timestamp`, prepend the field with ``sf_``. For example: `order_by=-sf_timestamp`.            \n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index in the result set at which the API should start returning results\n",
            "x-description": "Object in the result set at which the API should start\nreturning results to you. If omitted, the API starts at the first\nresult in the set.\n",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return from the result set\n",
            "x-description": "Number of results to return from the result set\n",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Success\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DimensionQueryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/dimension/{key}/{value}": {
      "get": {
        "tags": [
          "Retrieve Dimension Metadata Name Value"
        ],
        "summary": "Retrieves metadata for a dimension and value",
        "description": "Retrieves metadata for the specified dimension and value\n",
        "x-description": "Retrieves the metadata for the dimension and value specified in the\n`key` and `value` path parameters\n",
        "operationId": "Retrieve Dimension Metadata Name Value",
        "parameters": [
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "key",
            "in": "path",
            "description": "Dimension name\n",
            "x-description": "Dimension name\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "value",
            "in": "path",
            "description": "Dimension value\n",
            "x-description": "Dimension value\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Success\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DimensionMetadata"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Update Dimension Metadata"
        ],
        "summary": "Overwrites metadata for the specified dimension",
        "description": "Updates the metadata for the specified dimension\n",
        "x-description": "Overwrites metadata for the dimension specified by the name and value \nin the path parameters. \n\nThis method uses overwrite semantics. Properties in the request body\noverwrite existing values. If a property exists and you omit it from the\nrequest body, the API sets it to `null`.\n",
        "operationId": "Update Dimension Metadata",
        "parameters": [
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "key",
            "in": "path",
            "description": "Name of the dimension you want to update\n",
            "x-description": "Name of the dimension you want to update\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "value",
            "in": "path",
            "description": "Value of the dimension you want to update\n",
            "x-description": "Value of the dimension you want to update\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "Properties you want to add or update\n",
          "x-description": "Custom properties or tags (or both) that you want to add or update\nfor the specified dimension key and value\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DimensionUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Success\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DimensionUpdateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/metrictimeseries": {
      "get": {
        "tags": [
          "Retrieve Metric Timeseries Metadata"
        ],
        "summary": "Retrieves metric timeseries (MTS) metadata based on a query",
        "description": "Retrieves metadata for the MTS specified in the query parameter\n",
        "x-description": "Retrieves metadata for the metric timeseries specified by the search criteria in the `query` query parameter. \n\nThe query can contain one or more of the following:\n\n* Metric name\n* Dimensions\n* Custom properties\n* Tags\n    \nThe API first collects all of the matching results. This is known as the result set. Depending on the value you specify for `limit`, the number of metadata objects in the response body can be smaller than than the result set. For example, if you specify `limit=50`, and the API finds 100 matches, you only receive the first 50 results. \n\nSplunk Observability Cloud returns a maximum of 10,000 objects, even if your organization contains more. To learn more, see the [Considerations for retrieve operations](https://dev.splunk.com/observability/docs/apibasics/retrieve_data_basics#Considerations-for-retrieve-operations) section in the developer guide.\n",
        "operationId": "Retrieve Metric Timeseries Metadata",
        "parameters": [
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "query",
            "in": "query",
            "description": "Search criteria\n",
            "x-description": "Search criteria that selects the metric timeseries for which you want metadata. \n\nSearch criteria have the following rules:\n\n* To search by metric name, use `query=metric:<metric_name>` or `query=sf_metric:<metric_name>`. The result is metadata for MTS that have that metric name.\n* Metrics and MTS generated by Splunk Observability Cloud start with the prefix `sf.` or `sf_metric`.  \n* To search by dimension name, use `query=<dimension_name>:*`. The result\n  is metadata for MTS that have a dimension with that dimension name,\n  regardless of metric name.\n* To search for specific values of a dimension or custom property, use `query=<name>:<value>`. The result is metadata for MTS that have that dimension or property, regardless of metric name. If `<value>` contains non-alphanumeric characters, encode the non-alphanumeric characters and surround the value with double quotes. For example, the region custom property value `US East` must be passed in the parameter as `region:\"US%20East\"`.\n* To search with a wildcard character, use `*`. For example, to\n  search for all of the values of the `region` dimension, use\n  `query=region:*`.\n* To search for the existence of dimensions or properties, use\n  `_exists_` and `_missing_`. For example, to search for metadata that\n  has the `host_machine` dimension, specify `query=_exists_:host_machine`.\n* A single name and value (or wildcards) make up a\n  predicate  that implicitly returns a boolean.\n* Join predicates with the NOT, AND, and OR boolean operators.\n* Use parentheses '(' and ')' to change the evaluation order.\n  For example, to retrieve all metadata that has the dimension\n  `region:emea` and the custom property `company` with values that\n  start with `Schneider*`, use `query=region:emea AND company:Schneider*`.\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return from the result set\n",
            "x-description": "Number of result objects to return from the result set.\n",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": false
          },
          {
            "name": "searchInactive",
            "in": "query",
            "description": "Controls how Splunk Observability Cloud searches for metadata for inactive MTS. Set this parameter to `true` to search for active and inactive MTS. The default is `false`.",
            "x-description": "Flag that controls the retrieval of metadata for inactive MTS.\nThe default for `searchInactive` is `false`, so GET `/metrictimeseries`\nonly searches for active MTS.\nIf the query parameter includes active MTS filter terms like `sf_isActive` or `sf_lastActiveMs`, then this flag value is ignored.\n",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Success\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MTSQueryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/metrictimeseries/{id}": {
      "get": {
        "tags": [
          "Retrieve MTS Metadata ID"
        ],
        "summary": "Retrieves the MTS metadata for a metric timeseries",
        "description": "Retrieves metadata for the MTS specified by the ID query parameter\n",
        "x-description": "Retrieves metadata for the single metric timeseries specified by\nthe `{id}` path parameter.\n",
        "operationId": "Retrieve MTS Metadata Using ID",
        "parameters": [
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the MTS for which you want metadata\n",
            "x-description": "ID of the MTS for which you want metadata\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Success\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MTSMetadata"
                }
              }
            }
          }
        }
      }
    },
    "/tag": {
      "get": {
        "tags": [
          "Retrieve Tag Metadata Query"
        ],
        "summary": "Retrieves metadata for tags",
        "description": "Retrieves metadata for the tag specified by the query parameter\n",
        "x-description": "Retrieves metadata for which the tag matches the search criteria. \n\nThe API first collects all of the matching results. This is known as the\nresult set. Depending on the values you specify for `offset` and\n`limit`, the number of metadata objects in the response body can be\nsmaller than than the result set. For example, if you specify `offset=0`\n(the default) and `limit=50`, and the API finds 100 matches, you only \nreceive the first 50 results.\n\nNote: Splunk Observability Cloud returns a maximum of 10,000 tags, even if your organization contains more than 10,000. To learn more, see the\n[Considerations for retrieve operations](https://dev.splunk.com/observability/docs/apibasics/retrieve_data_basics#Considerations-for-retrieve-operations) section in the developer guide.\n",
        "operationId": "Retrieve Tag Metadata Using Query",
        "parameters": [
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "query",
            "in": "query",
            "description": "Search criteria\n",
            "x-description": "Search criteria for tags.\n\nUse the following syntax rules:\n\n* To search for a tag, specify `query=<tagname>`. If `<tagname>` contains\n  non-alphanumeric characters, encode the non-alphanumeric characters and surround the value with\n  double quotes. For example, the tag `prod env` must be passed in the parameter as `query=\"prod%20env\"`.\n* Use `*` as a wildcard. For example, to\n  search for tags that start with the string \"python\", use\n  `query=\"python*\".\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Property on which the API should sort the query results\n",
            "x-description": "Result object property on which the API should sort the results.\nThis must be a property of the tag metadata object.\n\nPrepend a `-` character to the property name to sort in descending order. If you want to apply `order_by` to non-custom property fields like `timestamp`, prepend the field with ``sf_``. For example: `order_by=-sf_timestamp`.            \n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index in the result set at which the API should start returning results\n",
            "x-description": "Object in the result set at which the API should start returning\nresults to you. If omitted, the API starts at the first result in the \nset.\n",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return from the result set\n",
            "x-description": "Number of results to return from the result set.\n",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Success\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagQueryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tag/{name}": {
      "get": {
        "tags": [
          "Retrieve Tag Metadata Name"
        ],
        "summary": "Retrieves metadata for a tag",
        "description": "Retrieves metadata for the tag specified by the query parameter\n",
        "x-description": "Retrieves the metadata for the tag specified in the\n`{name}` path parameter. The API returns all of the metadata for this\ntag.\n",
        "operationId": "Retrieve Tag Metadata Using Name",
        "parameters": [
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "name",
            "in": "path",
            "description": "Tag you want to retrieve\n",
            "x-description": "Tag you want to retrieve\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Successful retrieval of tag metadata for a specified tag\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagMetadata"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Create Update Tag"
        ],
        "summary": "Creates or updates a tag",
        "description": "Creates or updates the tag specified in the path parameter\n",
        "x-description": "Creates or updates the tag specified in the `{name}` path parameter.\n",
        "operationId": "Create Update Tag",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Always  `\"application/json\"`\n",
            "x-description": "Format of the request body. Always  `\"application/json\"`.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "name",
            "in": "path",
            "description": "Tag name\n",
            "x-description": "Data for the tag you want to create or update. The section \n[Tags Criteria](https://developers.signalfx.com/metrics/metrics_metadata_overview.html#_tags_criteria)\nlists the requirements for tags.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "Properties of the tag you want to create or update\n",
          "x-description": "Metadata for the tag you want to create or update\n",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customProperties": {
                    "description": "Custom properties for the tag\n",
                    "x-description": "Custom properties for the tag, in the form of a JSON\nobject. Each property is a custom property name\nand value. \nThe section \n[Custom Properties Criteria](https://developers.signalfx.com/metrics/metrics_metadata_overview.html#_custom_properties_criteria)\nlists the requirements for custom property names and values.\n",
                    "type": "object",
                    "additionalProperties": true,
                    "maxItems": 50
                  },
                  "description": {
                    "description": "Tag description\n",
                    "x-description": "Tag description, up to 1024 UTF-8 characters.\n",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 1024,
                    "format": "UTF-8"
                  },
                  "name": {
                    "description": "Tag name\n",
                    "x-description": "Tag name, as specified in the `{name}` path parameter\n"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Success\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagCreateUpdateResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Delete Single Tag"
        ],
        "summary": "Deletes a tag",
        "description": "Deletes the specified tag\n",
        "x-description": "Deletes the tag specified in the `{name}` path parameter\n",
        "operationId": "Delete Single Tag",
        "parameters": [
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "name",
            "in": "path",
            "description": "Tag you want to delete\n",
            "x-description": "Tag you want to delete\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success. The API doesn't return a response body.\n",
            "x-description": "Success\n"
          },
          "404": {
            "description": "Unable to find the tag\n",
            "x-description": "Unable to find the specified tag\n"
          }
        }
      }
    },
    "/event": {
      "get": {
        "summary": "Retrieves custom events specified by search criteria",
        "tags": [
          "Retrieve Custom Events Using Query"
        ],
        "description": "**This API is deprecated**. Use the Event Retrieval API `/v2/event` instead.\n",
        "x-description": "**This API is deprecated**. Use the Event Retrieval API `/v2/event` instead.\n\nRetrieves one or more custom events from Splunk Observability Cloud, based on\nquery parameters you specify:\n\n* The `query` query parameter specifies name- and value-based\n  search criteria.\n* The time query parameters specify a time window from which\n  to retrieve data points\n* The `offset` parameter specifies the point in the query results at\n  which the API should start sending event data.\n* The `limit` parameter specifies the number of results to send.\n  \nThe API combines the `query` results and the time window with a \nlogical AND. The result set contains custom events that match\nthe `query` parameter criteria and have a timestamp that's within the \nwindow specified by the time query parameters. From the result set,\nthe API returns a `limit` number custom events starting at the `offset`\nin the result set.\n\nThe `order_by` parameter controls the order of the results you receive.\n\nIf you don't specify any query parameters, the API sends you all of\nthe custom events it has for your organization, in an indeterminate\norder.\n\nThis API doesn't take a request body.\n\nNote: Splunk Observability Cloud returns a maximum of 10,000 events, even if your organization contains more than 10,000. To learn more, see the\n[Considerations for retrieve operations](https://dev.splunk.com/observability/docs/apibasics/retrieve_data_basics#Considerations-for-retrieve-operations) section in the developer guide.\n",
        "operationId": "Retrieve Custom Events Using Query",
        "deprecated": true,
        "parameters": [
          {
            "name": "X-SF-Token",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "query",
            "in": "query",
            "description": "Custom event search criteria\n",
            "x-description": "Search criteria that specifies the custom events that you want the\nAPI to return. You can search for any of the event properties.\n\nSearch criteria have the following rules:\n\n* To search for specific values of a dimension or custom property, specify\n  `<name>:<value>`. If `<value>` contains\n  non-alphanumeric characters, encode the non-alphanumeric characters and surround the value with\n  double quotes. For example, the region custom property value `US East` must be passed in the parameter as `region:\"US%20East\"`.\n* To search for names or values using wildcards, use `*` as the\n  wildcard character. For example, to search for all values of the\n  `region` dimension, use `region:*`.\n* A single property name and value (or wildcards) make up a\n  predicate that implicitly returns a boolean.\n* Join predicates with the NOT, AND, and OR boolean operators.\n* Use parentheses '(' and ')' to change the evaluation order.\n  \n  For example, to retrieve all custom events that have an `eventType`\n  prefixed with `myCompany` and have the dimension `region:emea`, use\n  `query=\"eventType:myCompany* AND region:emea\".\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "from",
            "in": "query",
            "description": "Starting timestamp for search, in *nix time in milliseconds\n",
            "x-description": "Start of the time window from which the API should retrieve custom\nevents. Specify the value in *nix time in milliseconds, and remember to\ncorrect for your time zone.\n\nIf the value is negative, the API interprets it as an offset before\nthe current server time (UTC).\n\nIf you specify `from` but not `to`, the time window extends to the\ncurrent server time.\n",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": false,
            "example": 1557523830000
          },
          {
            "name": "to",
            "in": "query",
            "description": "Ending timestamp for search, in *nix time in milliseconds\n",
            "x-description": "End of the time window from which the API should retrieve custom\nevents. Specify the value in *nix time in milliseconds and remember to\ncorrect for your time zone.\n\nIf the value is negative, the API interprets it as an offset before\nthe current server time (UTC).\n\nIf you specify `to` but not `from`, the time window extends from the\nearliest event to the value of `to`.\n",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": false,
            "example": 1557696630000
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Property on which the API should sort the results\n",
            "x-description": "The field on which the API should sort the query results. The value \ncan be any custom event property, including metadata\n\nPrepend a `-` character to the property name to sort in descending order. If you want to apply `order_by` to non-custom property fields like `timestamp`, prepend the field with ``sf_``. For example: `order_by=-sf_timestamp`.            \n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index in the result set at which the API should start returning results\n",
            "x-description": "The index in the query result set at which the API should start\nsending results to you. For example, 0 is first result in the set, and\n10 is the 11th result.\n",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return\n",
            "x-description": "The number of custom events to return. If you specify `-1`, the API\nreturns 1000 results. The value of `limit` is an upper boundary on\nthe number of results; the API may return less depending on the\nother query parameters.\n",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Successful custom event retrieval request\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomEventResponseObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/event/find": {
      "get": {
        "summary": "Retrieves events specified by search criteria",
        "tags": [
          "Retrieve Events Using Query"
        ],
        "description": "Retrieves events from Splunk Observability Cloud\n",
        "x-description": "Retrieves events from Splunk Observability Cloud, based on\nquery parameters you specify. The operation retrieves detector\nevents as well as custom events.\n\nNote: Splunk Observability Cloud returns a maximum of 10,000 events, even if your organization contains more than 10,000. To learn more, see the\n[Considerations for retrieve operations](https://dev.splunk.com/observability/docs/apibasics/retrieve_data_basics#Considerations-for-retrieve-operations) section in the developer guide.\n\n\nThe operation provides these query parameters:\n\n  * The `query` query parameter specifies name- and value-based\n    search criteria.\n  * The `fields` query parameter specifies custom fields to return values for. You can add multiple fields to one query.\n  * The `start_time` and `end_time` query parameters specify the boundaries of a time window from which\n    you want to retrieve datapoints.\n  * The `offset` parameter specifies the point in the query results at\n    which the API should start sending event data.\n  * The `limit` parameter specifies the number of results to send.\n  * The `order_by` parameter controls the order of the results you receive.\n\nThe API combines the `query` results and the time window with a logical `AND`.\n\nThis API doesn't take a request body.\n\n## Requirements\n* You must have an organization access token with the API permission or a session token to use this endpoint.\n* You must have the Splunk Observability Cloud admin, power role, or read_only role.\n",
        "operationId": "Retrieve Events Using Query",
        "parameters": [
          {
            "name": "X-SF-Token",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "query",
            "in": "query",
            "description": "Event search criteria\n",
            "x-description": "Search criteria that specifies the events that you want the\nAPI to return. You can search for any of the event properties.\n\nYou might need to use different forms of a field name in the\n`query` parameter:\n\n* To search for `eventType`, use `sf_eventType`.\n* To search for `category`, use `sf_eventCategory`.\n\nYou have to specify at least one value for query.\n\nSearch criteria have the following rules:\n\n* To search for specific values of a dimension or property, specify\n  `<name>:<value>`. If `<value>` contains\n  non-alphanumeric characters, encode the non-alphanumeric characters and surround the value with\n  double quotes. For example, the region custom property value `US East` must be passed in the parameter as `region:\"US%20East\"`.\n* To search for names or values using wildcards, use `*` as the\n  wildcard character.\n* Join searches with NOT, AND, and OR operators.\n* Use parentheses '(' and ')' to change the evaluation order.\n",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "is:ok AND sf_notificationWasSent:true\n"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Custom fields of the event to return values for upon a successful request.\n",
            "x-description": "Custom fields of the event to return values for upon a successful request.\n\nTo add a field to your query, use the format \"fields=<field_name>\". \nIf you're adding multiple fields, separate each field with \"&\". \nFor example, `fields=sf_detectorId&fields=sf_detector&fields=sf_eventType&fields=sf_eventCategory` \nreturns values for `sf_detectorId`, `sf_detector`, `sf_eventType`, and `sf_eventCategory`.\n",
            "schema": {
              "type": "string"
            },
            "required": false,
            "example": "sf_detector"
          },
          {
            "name": "start_time",
            "in": "query",
            "description": "Starting timestamp for search, in *nix time in milliseconds\n",
            "x-description": "Start of the time window from which the API should retrieve custom\nevents. Specify the value in *nix time in milliseconds, and remember to\ncorrect for your time zone.\n\nIf the value is negative, the API interprets it as an offset before\nthe current server time (UTC).\n\nIf you specify `start_time` but not `end_time`, the time window extends to the\ncurrent server time.\n",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": false,
            "example": 1557523830000
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return\n",
            "x-description": "The number of events to retrieve from the result set:\n\n* The maximum is 9,999, because the first retrieved event is result 0.\n* The default is 1000.\n* If you specify `-1`, the API returns 1000 results.\n* Regardless of the value of `offset`, requesting more than\n  10,000 results results in an HTTP response code 500.\n",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 9999
            },
            "required": false,
            "example": 1000
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Index in the result set at which the API should start returning results\n",
            "x-description": "The index in the query result set at which the API should start\nsending results to you. For example, 0 is first result in the set, and\n10 is the 11th result.\n",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "required": false,
            "example": 100
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Property on which the API should sort the results\n",
            "x-description": "The field on which the API should sort the query results. The value\ncan be any event property, including metadata.\n\nPrepend a `-` character to the property name to sort in descending order. If you want to apply `order_by` to non-custom property fields like `timestamp`, prepend the field with ``sf_``. For example: `order_by=-sf_timestamp`.            \n",
            "schema": {
              "type": "string"
            },
            "required": false,
            "example": "sf_eventType"
          },
          {
            "name": "end_time",
            "in": "query",
            "description": "Ending timestamp for search, in *nix time in milliseconds\n",
            "x-description": "End of the time window from which the API should retrieve custom\nevents. Specify the value in *nix time in milliseconds and remember to\ncorrect for your time zone.\n\nIf the value is negative, the API interprets it as an offset before\nthe current server time (UTC).\n\nIf you specify `end_time` but not `start_time`, the time window extends from the\nearliest event to the value of `end_time`.\n",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "required": false,
            "example": 1557696630000
          }
        ],
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Successful event retrieval request\n\nNote: Regardless of the values you set for `limit` and `offset`, this\noperation returns a maximum of 10,000 events.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "maxItems": 10000,
                  "minItems": 0,
                  "items": {
                    "$ref": "#/components/schemas/EventResponseObject"
                  }
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable\n",
            "x-description": "Request specifies invalid query parameters.\n\nThis error occurs when you fail to specify a `query` value in the\nquery parameters.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "description": "HTTP response code. Always `406`.\n",
                      "x-description": "HTTP response code. Always `406`.\n",
                      "type": "integer"
                    },
                    "message": {
                      "description": "Error message\n",
                      "x-description": "Error message\n",
                      "type": "string"
                    }
                  },
                  "example": {
                    "code": 406,
                    "message": "At least one filtration clause must be specified."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal error\n",
            "x-description": "Internal error. This error can occur if you specify a `limit`\nvalue greater than 9,999.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "description": "HTTP response code. Always `500`.\n",
                      "x-description": "HTTP response code. Always `500`.\n",
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "description": "Error message, including a unique error identifier\n",
                      "x-description": "Error message, including a unique error identifier\n",
                      "type": "string",
                      "example": "Server error occurred. Unique error identifier [<error_id>]"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tests": {
      "get": {
        "summary": "Gets a list of all tests.",
        "tags": [
          "Synthetics tests"
        ],
        "description": "Returns a list of all tests.\n\n## Requirements\n\n* You must have an organization access token with the API permission or a session token to use the API.\n* You need the Splunk Observability Cloud admin, power, or read_only role.\n",
        "x-description": "Returns a list of all tests.\n\n## Requirements\n\n* You must have an organization access token with the API permission or a session token to use the API.\n* You need the Splunk Observability Cloud admin, power, or read_only role.\n",
        "operationId": "getTests",
        "parameters": [
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Always  `\"application/json\"`\n",
            "x-description": "Format of the request body. Always  `\"application/json\"`.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of tests to return.",
            "x-description": "The page to return. Must be greater than 0, but will default to 1\notherwise.\n",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "Number of tests to return.",
            "x-description": "Number of tests to return for a given request.\n",
            "schema": {
              "type": "integer",
              "default": 50
            }
          },
          {
            "name": "testType",
            "in": "query",
            "description": "Test type to return.",
            "x-description": "Returns only tests based on the specified type. Possible values:\n\n* `browser`: Browser tests\n* `api`: API tests\n* `http`: HTTP tests\n* `port`: Port tests\n* `uptime`: HTTP or Port tests\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort tests by the specified value.",
            "x-description": "Sorts tests by the specified value. Possible values:\n\n* `id`: Test ID\n* `name`: Test name\n* `active`: Active status\n* `type`: Test type\n* `frequency`: Test run frequency\n* `created_at`: Date and time when tests were created.\n* `updated_at`: Date and time when tests were last updated.\n* `scheduling_strategy`: Scheduling strategy\n* `last_run_at`: Date and time when tests were last run\n* `last_run_status`: Status of the last time tests were run\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search for tests based on Name or Type.",
            "x-description": "Returns a list of tests that have match the value you specified for Name or Type. \n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "query",
            "description": "Filter for tests by the given locationId.",
            "x-description": "Returns a list of tests that are configured to run from the given locationId.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customProperties",
            "in": "query",
            "description": "Filter for tests by the given customProperties.",
            "x-description": "Returns a list of tests which have the given customProperties. The properties should be in the format \"key:value\". \n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "key:value",
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "name": "testTypes",
            "in": "query",
            "description": "Test types to return.",
            "x-description": "Returns only tests based on the specified types. Possible values:\n\n* `browser`: Browser tests\n* `api`: API tests\n* `http`: HTTP tests\n* `port`: Port tests\n* `uptime`: HTTP or Port tests\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "frequencies",
            "in": "query",
            "description": "Filter for tests by the given frequencies.",
            "x-description": "Returns a list of tests that are configured to run with the given frequencies.\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "locationIds",
            "in": "query",
            "description": "Filter for tests by the given locationIds.",
            "x-description": "Returns a list of tests that are configured to run from the given locationIds.\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lastRunStatus",
            "in": "query",
            "description": "Filter for tests by the given lastRunStatus.",
            "x-description": "Returns only tests based off of the lastRunStatus. Possible values:\n\n* `success`: Last test run was successful\n* `failed`: Last test run failed\n* `pending`: Test has not been run yet\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "schedulingStragety",
            "in": "query",
            "description": "Filter for tests by the given schedulingStrategy",
            "x-description": "Returns only tests based on the specified schedulingStrategy. Possible values:\n\n* `round_robin`\n* `concurrent`\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "active",
            "in": "query",
            "description": "Filter tests by active or paused status.",
            "x-description": "When true, returns only active tests. When false, returns only paused tests.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success\n",
            "x-description": "Successfully retrieved tests, or no matching tests matched\nsearch criteria.\n",
            "headers": {
              "Content-Type": {
                "description": "Always  `\"application/json\"`\n",
                "x-description": "Format of the response body. Always  `\"application/json\"`.\n",
                "schema": {
                  "type": "string",
                  "default": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTestsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tests/{id}": {
      "delete": {
        "tags": [
          "Delete a single test"
        ],
        "summary": "Deletes a test specified in the {id} path parameter.",
        "description": "Deletes a Test.\n\n## Requirements\n\n* You must have an organization access token with the API permission or a session token to use the API.\n* You need the Splunk Observability Cloud admin or power role.\n",
        "x-description": "Deletes a Test.\n\n## Requirements\n\n* You must have an organization access token with the API permission or a session token to use the API.\n* You need the Splunk Observability Cloud admin or power role.\n",
        "operationId": "DeleteTest",
        "parameters": [
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token.\n",
            "x-description": "Authentication token.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the test to delete.\n",
            "x-description": "The ID of a test\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success\n",
            "x-description": "Successful deletion of a Test.\n"
          },
          "404": {
            "description": "The Test does not exist\n",
            "x-description": "The Test does not exist\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          }
        }
      }
    },
    "/tests/bulk_delete": {
      "post": {
        "tags": [
          "Delete multiple tests"
        ],
        "summary": "Deletes the tests specified in `requestBody`. Maximum of 500 test IDs in one request.",
        "description": "Deletes the tests specified in `requestBody`. Maximum of 500 test IDs in one request.\n\n### Requirements\n\n* You must have an organization access token with the API permission or a session token to use the API.\n* You need the Splunk Observability Cloud admin or power role.\n",
        "x-description": "Deletes the tests specified in `requestBody`. Maximum of 500 test IDs in one request.\n\n### Requirements\n\n* You must have an organization access token with the API permission or a session token to use the API.\n* You need the Splunk Observability Cloud admin or power role.\n",
        "operationId": "DeleteMultipleTests",
        "parameters": [
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "`\"application/json\"`\n",
            "x-description": "Format of the request body. Always `\"application/json\"`.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "List of test IDs.\n",
          "x-description": "List of test IDs.\n",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListOfIds"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful deletion of selected tests.\n",
            "x-description": "Successful deletion of selected tests.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponse"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request body \n",
            "x-description": "Invalid request body\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntity"
                }
              }
            }
          }
        }
      }
    },
    "/tests/play": {
      "put": {
        "tags": [
          "Activate multiple tests"
        ],
        "summary": "Activates the tests specified in `requestBody`. Maximum of 500 test IDs in one request.",
        "description": "Activates the tests specified in `requestBody`. Maximum of 500 test IDs in one request.\n\n### Requirements\n\n* You must have an organization access token with the API permission or a session token to use the API.\n* You need the Splunk Observability Cloud admin or power role.\n",
        "x-description": "Activates the tests specified in `requestBody`. Maximum of 500 test IDs in one request.\n\n### Requirements\n\n* You must have an organization access token with the API permission or a session token to use the API.\n* You need the Splunk Observability Cloud admin or power role.\n",
        "operationId": "PlayMultipleTests",
        "parameters": [
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "`\"application/json\"`\n",
            "x-description": "Format of the request body. Always `\"application/json\"`.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "List of test IDs.\n",
          "x-description": "List of test IDs.\n",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListOfIds"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful activation of selected tests.\n",
            "x-description": "Successful activation of selected tests.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponse"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request body \n",
            "x-description": "Invalid request body\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntity"
                }
              }
            }
          }
        }
      }
    },
    "/tests/pause": {
      "put": {
        "tags": [
          "Deactivate multiple tests"
        ],
        "summary": "Dectivates the tests specified in `requestBody`. Maximum of 500 test IDs in one request.",
        "description": "Dectivates the tests specified in `requestBody`. Maximum of 500 test IDs in one request.\n\n### Requirements\n\n* You must have an organization access token with the API permission or a session token to use the API.\n* You need the Splunk Observability Cloud admin or power role.\n",
        "x-description": "Dectivates the tests specified in `requestBody`. Maximum of 500 test IDs in one request.\n\n### Requirements\n\n* You must have an organization access token with the API permission or a session token to use the API.\n* You need the Splunk Observability Cloud admin or power role.\n",
        "operationId": "PauseMultipleTests",
        "parameters": [
          {
            "name": "X-SF-TOKEN",
            "in": "header",
            "description": "Authentication token\n",
            "x-description": "Authentication token\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "`\"application/json\"`\n",
            "x-description": "Format of the request body. Always `\"application/json\"`.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "List of test IDs.\n",
          "x-description": "List of test IDs.\n",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListOfIds"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful deactivation of selected tests.\n",
            "x-description": "Successful deactivation of selected tests.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponse"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request body \n",
            "x-description": "Invalid request body\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntity"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AlertMutingFilter": {
        "description": "Muting filter for a rule\n",
        "x-description": "Single muting filter for a rule, in the form of a JSON\nobject. Specifies the dimension or custom property to filter on, the\nvalue or values to match, and a boolean value that controls the match semantics.\n\nThe filter mutes an alert based on the following:\n\n* NOT = false: Value of `property` EQ `propertyValue`\n* NOT = true: Value of `property` NE `propertyValue`\n\nIf `propertyValue` is an array, then the filter mutes an alert based on\nthe following:\n\n* NOT = false: Value of `property` matches any element of `propertyValue`\n* NOT = true: Value of `property` matches none of the elements of `propertyValue`\n",
        "type": "object",
        "properties": {
          "NOT": {
            "description": "Controls the filter matching\n",
            "x-description": "Flag that controls the filter semantics. If `true`, the filter\ndoes a not equals comparison. Otherwise, the filter does an\nequals comparison. The default is `false`.\n",
            "type": "boolean",
            "default": false
          },
          "property": {
            "description": "Property that detectors are monitoring for anomalies\n",
            "x-description": "Name (key) of a dimension or custom property that one or more detectors\nare monitoring for anomalies. The filter compares the value of `property`\nto the value or values of `propertyValue`.\n",
            "type": "string"
          },
          "propertyValue": {
            "description": "Value that Splunk Observability Cloud compares to the value of `property`\n",
            "x-description": "Value that the API compares to the value of `property`.\n",
            "anyOf": [
              {
                "title": "Boolean",
                "description": "Boolean value\n",
                "x-description": "Boolean value\n",
                "type": "boolean"
              },
              {
                "title": "Integer or Float",
                "description": "Number\n",
                "x-description": "Integer or floating point number\n",
                "type": "number"
              },
              {
                "title": "String",
                "description": "string\n",
                "x-description": "String value\n",
                "type": "string"
              },
              {
                "title": "Array",
                "description": "Array\n",
                "x-description": "List of numbers, strings, or booleans, as a JSON array. You can\nspecify multiple types in the same array.\n",
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "string"
                    },
                    {
                      "type": "boolean"
                    }
                  ]
                }
              }
            ]
          }
        },
        "example": "[\n  {\n    \"NOT\": false,\n    \"property\": \"aws_availability_zone\",\n    \"propertyValue\": \"us-east-1a\"\n  },\n  {\n    \"NOT\": true,\n    \"property\": \"cpu.utilization\",\n    \"propertyValue\": 10.7\n  },\n  {\n    \"NOT\": false,\n    \"property\": \"aws_availability_zone\",\n    \"propertyValue\":\n      [\n        \"us-east-2a\",\n        \"us-west-1a\",\n        \"emea-west-2a\"\n      ]\n  }\n]\n"
      },
      "AlertMutingRule": {
        "description": "Properties of a muting rule\n",
        "x-description": "Properties of a muting rule, in the form of a JSON object.\nNote: You can't create or update properties marked read-only. You\nreceive read-only properties in response bodies for the following:\n\n*  GET `/alertmuting`\n*  POST `/alertmuting`\n*  GET `/alertmuting/{id}`\n*  PUT `/alertmuting/{id}`\n\nThe response body for this request contains a string representation of\nany non-string values you specify for `propertyValue`.\n",
        "type": "object",
        "properties": {
          "created": {
            "$ref": "#/components/schemas/Created"
          },
          "creator": {
            "$ref": "#/components/schemas/Creator"
          },
          "description": {
            "description": "Description of the muting rule\n",
            "x-description": "Description of the muting rule. It is best practice to provide a descriptive reason for the muting rule.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false
          },
          "filters": {
            "description": "List of muting filters for this rule\n",
            "x-description": "List of muting filters for this rule, in the form of a JSON\narray. Each array element specifies a single filter.\n\nA muting filter JSON specifies the following:\n\n* `property`: The dimension or custom property to compare to\n  `propertyValue`\n* `propertyValue`: A number, string, or array\n* `NOT`: A flag that controls the comparison.\n\nA filter mutes an alert based on the following:\n\n* NOT = false: value of `property` EQ `propertyValue`\n* NOT = true: value of `property` NE `propertyValue`\n\nIf `propertyValue` is an array, then the filter mutes an alert based on\nthe following:\n\n* NOT = false: value of `property` matches any element of\n `propertyValue`\n* NOT = true: value of `property` matches none of the elements of\n `propertyValue`\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertMutingFilter"
            }
          },
          "id": {
            "$ref": "#/components/schemas/Id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/LastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/LastUpdatedBy"
          },
          "recurrence": {
            "$ref": "#/components/schemas/recurrence"
          },
          "linkedTeams": {
            "$ref": "#/components/schemas/LinkedTeams"
          },
          "sendAlertsOnceMutingPeriodHasEnded": {
            "$ref": "#/components/schemas/SendAlertsOnceMutingPeriodHasEnded"
          },
          "startTime": {
            "$ref": "#/components/schemas/StartTime"
          },
          "stopTime": {
            "$ref": "#/components/schemas/StopTime"
          }
        }
      },
      "IncidentClearRule": {
        "description": "Single rule that clears an incident\n",
        "x-description": "Single clear incident rule, in the form of a JSON object. A rule selects\nincidents by comparing a signal property to one or more values. If\nSplunk Observability Cloud finds a match, it it clears the incidents that the signal triggered.\n\nThe `NOT` property tells the API to reverse the rule results:\n\n* `NOT` is false: Rule matches if the property is equal to any of the specified values\n* `NOT` is true: Rule matches if the property is equal to none\n   of the specified values or if the property doesn't exist\n",
        "type": "object",
        "properties": {
          "NOT": {
            "description": "Controls the filter comparison\n",
            "x-description": "Flag that controls the rule results. If `true`, the filter\ndoes a not equals comparison. Otherwise, the filter does an\nequals comparison. The default is `false`.\n",
            "type": "boolean",
            "default": false
          },
          "property": {
            "description": "Property of the signal that triggered an alert\n",
            "x-description": "Dimension or custom property name (key) of a signal\nor signals that triggered an incident, in the form of a JSON string\n",
            "type": "string",
            "minLength": 1
          },
          "propertyValue": {
            "description": "List of values that Splunk Observability Cloud compares to the value of `property`\n",
            "x-description": "List of values that the API compares to the value of `property`, in\nthe form of a JSON array. Each element can be a JSON number, string,\nor boolean.\n",
            "type": "array",
            "minItems": 1,
            "items": {
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string",
                  "minLength": 1
                },
                {
                  "type": "boolean"
                }
              ]
            }
          }
        },
        "example": "{\n  \"NOT\": false,\n  \"property\": \"aws_availability_zone\",\n  \"propertyValue\": [\n    \"us-east-1a\"\n  ]\n}\n"
      },
      "IncidentClearRules": {
        "description": "Rules that identify incidents you want to clear\n",
        "x-description": "Rules that identify one or more incidents you want to clear.\n",
        "type": "object",
        "properties": {
          "filters": {
            "description": "List of rules that identify incidents\n",
            "x-description": "List of rules that identify one or more incidents, in the form\nof a JSON array. Each array element specifies a single rule.\n",
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/IncidentClearRule"
            }
          }
        },
        "example": "filters: [\n{\n  \"NOT\": false,\n  \"property\": \"aws_availability_zone\",\n  \"propertyValue\": [\n    \"us-east-1a\"\n  ]\n},\n{\n  \"NOT\": true,\n  \"property\": \"demo_test_host\",\n  \"propertyValue\": [ true ]\n}\n]\n"
      },
      "Active": {
        "description": "Indicates that the incident is ongoing (active). Set by system.\n",
        "x-description": "Flag that indicates if an incident is still ongoing (\"active\"), in\nthe form of a JSON boolean. This property is read-only.\n",
        "type": "boolean",
        "readOnly": true
      },
      "AnomalyState": {
        "description": "Describes the current state of an event or incident. Set by system.\n",
        "x-description": "Describes the current anomaly state of an event or incident, in the\nform of a JSON string that describes the current signal status compared\nto its expected state. This property is read-only. The possible\nvalues are:\n\n* `\"ANOMALOUS\"`: Based on detector settings, Splunk Observability Cloud detected an\n  anomaly and issued events in this incident.\n* `\"MANUALLY_RESOLVED\"`: User resolved the incident in the UI or by\n  calling PUT `/incident/{id}/clear`.\n* `\"OK\"`: Based on the detector settings, Splunk Observability Cloud detected that the\n  anomaly had cleared and issued a clear event for the incident.\n* `\"STOPPED\"`: User updated the detector and restarted the detector job\n",
        "type": "string",
        "enum": [
          "ANOMALOUS",
          "MANUALLY_RESOLVED",
          "OK",
          "STOPPED"
        ],
        "readOnly": true
      },
      "Count": {
        "title": "Count of matched detectors",
        "description": "Number of detectors that matched the query criteria\n",
        "x-description": "Number of detectors that match the search criteria.\nThis property is read-only; it's always set by the system.\n\nNote: Count isn't the same as the number of detectors returned\nin the response body:\n\n* `sizeOf(results)`: Size of the array returned in the response body.\n* `count`: Number of objects that match the search criteria\n",
        "type": "integer",
        "format": "int32",
        "readOnly": true,
        "example": 25
      },
      "Created": {
        "title": "Creation time",
        "type": "integer",
        "format": "int64",
        "description": "Detector creation timestamp, in *nix time in milliseconds. Set by system.\n",
        "x-description": "The time the detector was created, in *nix time in milliseconds.\n\nThis property is read-only; it's always set by the system.\n",
        "example": 1556825430000,
        "readOnly": true
      },
      "Creator": {
        "title": "Creator user ID",
        "description": "ID of user who created the detector. Set by system.\n",
        "x-description": "Splunk Observability Cloud ID of the user who created the detector.\n\nThis property is read-only; it's always set by the system.\n",
        "type": "string",
        "example": "AAXYAAAAAZ3",
        "readOnly": true
      },
      "DetectLabel": {
        "title": "Publish object label",
        "description": "Publish object label for the detector that generated this event\n",
        "x-description": "Label of the publish object for the detector that generated this event.\nThe publish object is the part of the detector's SignalFlow program\nthat publishes the results of the `detect()`. The object is created by\na `publish(<label>)`, and `detectLabel` is set to the value of `<label>`.\n",
        "type": "string",
        "example": "loadWarning"
      },
      "DetectorId": {
        "description": "ID of the detector that generated the event\n",
        "x-description": "The ID of the detector that generated an\nevent or events in an incident\nThis property is read-only.\n",
        "type": "string",
        "readOnly": true
      },
      "Dimensions": {
        "description": "Matched dimension names and values for the detector rule that triggered\nthe event\n",
        "x-description": "The dimension names and values that matched the detector rule that\ntriggered the event, in the form of a JSON object.\n\nThis property is read-only.\n",
        "type": "object",
        "readOnly": true
      },
      "Duration": {
        "title": "Duration of the incident",
        "description": "In milliseconds, duration of an incident from anomalous to OK. Set by system.\n",
        "x-description": "Duration of the entire incident in milliseconds, in the form of a\nJSON integer. If the incident isn't cleared yet, the value is `null`.\n\nThis property is read-only; it's always set by the system.\n",
        "type": "integer",
        "format": "int64",
        "readOnly": true
      },
      "EventId": {
        "title": "ID for an event",
        "description": "ID of an event. Set by system.\n",
        "x-description": "ID for an event generated by a detector.\n\nThis property is read-only; it's always set by the system.\n",
        "type": "string",
        "readOnly": true
      },
      "Fragment": {
        "description": "Fragment of SignalFlow code containing a value that triggered an event\n",
        "x-description": "Code that computed a `value` property that triggered an event, in the\nform of a JSON string containing a fragment of SignalFlow code.\n\nThis property is read-only; it's always set by the system.\n",
        "type": "string",
        "readOnly": true
      },
      "Id": {
        "title": "Detector system ID",
        "description": "Detector ID. Set by system.\n",
        "x-description": "ID of a detector. When you retrieve events\nor incidents for a detector, this ID is for the detector that\ngenerated the event or incident.\n\nThis property is read-only; it's always set by the system.\n",
        "type": "string",
        "readOnly": true
      },
      "IncidentId": {
        "title": "ID of an incident",
        "description": "Incident ID. Set by system.\n",
        "x-description": "ID of an incident that represents the\ntrigger and clear events generated by a detector.\n\nThis property is read-only; it's always set by the system.\n",
        "type": "string",
        "readOnly": true
      },
      "LastUpdated": {
        "title": "Detector last updated time",
        "description": "Detector last updated timestamp, in *nix time in milliseconds. Set by system.\n",
        "x-description": "The last time the detector was updated, in *nix time in milliseconds.\n",
        "type": "integer",
        "format": "int64",
        "example": 1557689430000,
        "readOnly": true
      },
      "LastUpdatedBy": {
        "title": "Detector last updated ID",
        "description": "ID of user who last updated the detector\n",
        "x-description": "The ID of the user who last updated the detector. If the system made the last update, the value is `\"AAAAAAAAAA\"`.\n\nThis property is read-only; it's always set by the system.\n",
        "type": "string",
        "readOnly": true,
        "example": "ZZyZZZZXXXQ"
      },
      "LinkedTeams": {
        "title": "IDs of teams linked to the detector that created the incident.",
        "description": "IDs of teams linked to the detector that created the incident. If the incident is created by a detector that is not linked to a team, the value is `null`. This is a JSON array of strings, where each string is a team ID. This property is read-only; it's always set by the system. For information about how to link detectors to teams, see [Detectors linked to teams](https://quickdraw.splunk.com/redirect/?product=Observability&location=devdocs.getincidents.byteamid&version=current).\n",
        "x-description": "IDs of teams linked to the detector that created the incident. If the incident is created by a detector that is not linked to a team, the value is `null`. This is a JSON array of strings, where each string is a team ID. This property is read-only; it's always set by the system. For information about how to link detectors to teams, see [Detectors linked to teams](https://quickdraw.splunk.com/redirect/?product=Observability&location=devdocs.getincidents.byteamid&version=current).\n",
        "type": "array",
        "items": {
          "type": "string"
        },
        "readOnly": true,
        "example": [
          "AbcdEf1ABCD",
          "FO1Vq3ABXYZ"
        ]
      },
      "Name": {
        "title": "Detector name (displayed)",
        "description": "Detector name\n",
        "x-description": "Displayed name of the detector in the UI. When you\nretrieve events or incidents, this property contains the name of the\nassociated detector.\n",
        "type": "string",
        "minLength": 1,
        "readOnly": false,
        "writeOnly": false,
        "example": "JVM CPU Load detector"
      },
      "recurrence": {
        "description": "Recurrence period of the muting rule\n",
        "x-description": "Recurrence period of the muting rule. Recurrence can be daily, weekly,\nor custom, based on the number of days or weeks you provide. Note that\nthe recurrence period must be larger than the muting duration.\n",
        "type": "object",
        "properties": {
          "unit": {
            "description": "Unit of the period. Can be days (`d`) or weeks (`w`)",
            "x-description": "Unit of the period. Can be days (`d`) or weeks (`w`).",
            "example": "d",
            "type": "string",
            "enum": [
              "d",
              "w"
            ]
          },
          "value": {
            "description": "Amount of time, expressed as an integer applicable to the unit\n",
            "x-description": "Amount of time, expressed as an integer applicable to the unit.\n",
            "example": 2,
            "type": "integer",
            "minimum": 1
          }
        }
      },
      "SendAlertsOnceMutingPeriodHasEnded": {
        "description": "Controls notifications after the muting period ends\n",
        "x-description": "Controls notifications after the muting period ends.\nTo learn more, see the section [Mute alert notifications](https://docs.splunk.com/observability/en/alerts-detectors-notifications/mute-notifications.html)\nin the user documentation.\n",
        "type": "boolean",
        "default": true,
        "example": true,
        "readOnly": false
      },
      "Severity": {
        "description": "Alert severity\n",
        "x-description": "Indicates the severity of a triggered alert. You can assign your own\nsemantics to each severity level. To see the available values,  refer to\nthe `enum` specification.\n\nNote: The allowed values for `Severity`\nare enums, so you must enter them with the first letter in uppercase and\nall other letters lowercase.\n\nThe PagerDuty alerting service maps\nSplunk Observability Cloud severity values to PagerDuty service values as follows\n(Splunk Observability Cloud values are at the beginning of the line):\n\n* Critical \u2192 Critical\n* Major \u2192 Critical\n* Minor \u2192 Error\n* Warning \u2192 Warning\n* Info \u2192 Info\n",
        "type": "string",
        "format": "Capitalized",
        "enum": [
          "Critical",
          "Warning",
          "Major",
          "Minor",
          "Info"
        ],
        "example": "Info",
        "readOnly": false,
        "writeOnly": false
      },
      "StartTime": {
        "description": "Starting timestamp of a muting rule, in *nix time in milliseconds\n",
        "x-description": "Starting time of a muting rule, in *nix time in milliseconds. If not specified,\ndefaults to the current time. read/write.\n",
        "type": "integer",
        "format": "int64",
        "minimum": 0,
        "readOnly": false,
        "writeOnly": false
      },
      "StopTime": {
        "description": "Ending timestamp of a muting rule, in *nix time in milliseconds\n",
        "x-description": "Stop time of a muting rule, in *nix time in milliseconds. If set to 0, detectors\nthat match this rule are muted indefinitely. The default value is 0.\nread/write\n",
        "type": "integer",
        "format": "int64",
        "minimum": 0,
        "default": 0,
        "readOnly": false,
        "writeOnly": false
      },
      "TimeStamp": {
        "description": "Event timestamp, in *nix time in milliseconds. Set by system.\n",
        "x-description": "Timestamp for the time that the event occurred, in *nix time in milliseconds.\n\nThis property is read-only.\n",
        "type": "integer",
        "format": "int64",
        "readOnly": true,
        "example": 1557484230000
      },
      "Value": {
        "description": "Value that matched a triggered detector rule\n",
        "x-description": "The value that matched the detector rule, thus triggering an\nalert event or clear event. This property is read-only.\n",
        "type": "number",
        "readOnly": true
      },
      "IncidentEventSource": {
        "description": "Individual stream or variable that matched a detector rule\n",
        "x-description": "A value that matched a detector rule and triggered an alert event or\nclear event\n",
        "type": "object",
        "properties": {
          "dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "fragment": {
            "$ref": "#/components/schemas/Fragment"
          },
          "value": {
            "$ref": "#/components/schemas/Value"
          }
        }
      },
      "IncidentEvent": {
        "description": "Properties of an event associated with an incident\n",
        "x-description": "Event data for an event associated with an incident\n",
        "type": "object",
        "properties": {
          "anomalyState": {
            "$ref": "#/components/schemas/AnomalyState"
          },
          "detectLabel": {
            "$ref": "#/components/schemas/DetectLabel"
          },
          "detectorId": {
            "$ref": "#/components/schemas/Id"
          },
          "duration": {
            "$ref": "#/components/schemas/Duration"
          },
          "detectorName": {
            "$ref": "#/components/schemas/Name"
          },
          "event_annotations": {
            "description": "Internal field. Set by system.\n",
            "x-description": "Reserved for Splunk Observability Cloud use.\n\nThis property is read-only; it's always set by the system.\n",
            "type": "object",
            "readOnly": true
          },
          "id": {
            "$ref": "#/components/schemas/EventId"
          },
          "incidentId": {
            "$ref": "#/components/schemas/IncidentId"
          },
          "inputs": {
            "description": "List of input streams and variables in the rule for this event\n",
            "x-description": "The list of input sources that the detector used in the rule\nthat triggered this event.\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentEventSource"
            }
          },
          "severity": {
            "$ref": "#/components/schemas/Severity"
          },
          "timestamp": {
            "$ref": "#/components/schemas/TimeStamp"
          }
        }
      },
      "RetrieveAlertMutingRulesResponse": {
        "description": "Properties of the notification muting rule retrieval object\n",
        "x-description": "Response body for GET `/alertmuting`, in the form of a JSON object.\n",
        "type": "object",
        "properties": {
          "count": {
            "$ref": "#/components/schemas/Count"
          },
          "results": {
            "description": "List of muting rules\n",
            "x-description": "Query results, in the form of a JSON array of\nobjects. Each element is a muting rule.\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertMutingRule"
            }
          }
        }
      },
      "RetrieveIncidentResponse": {
        "description": "Properties of a single retrieved incident\n",
        "x-description": "The properties of a single incident\n",
        "type": "object",
        "properties": {
          "active": {
            "$ref": "#/components/schemas/Active"
          },
          "anomalyState": {
            "$ref": "#/components/schemas/AnomalyState"
          },
          "detectLabel": {
            "$ref": "#/components/schemas/DetectLabel"
          },
          "detectorId": {
            "$ref": "#/components/schemas/DetectorId"
          },
          "duration": {
            "$ref": "#/components/schemas/Duration"
          },
          "events": {
            "description": "List of event objects for this incident\n",
            "x-description": "Array that contains the event objects for this incident\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentEvent"
            }
          },
          "incidentId": {
            "$ref": "#/components/schemas/IncidentId"
          },
          "linkedTeams": {
            "$ref": "#/components/schemas/LinkedTeams"
          },
          "severity": {
            "$ref": "#/components/schemas/Severity"
          }
        }
      },
      "RetrieveIncidentResponses": {
        "description": "List of incidents returned by a query retrieval\n",
        "x-description": "List of incidents returned by a search, in the form of a JSON array.\nThe `results` property contains a list of incident objects.\n",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/RetrieveIncidentResponse"
        }
      },
      "TeamId": {
        "description": "ID of a team\n",
        "x-description": "ID for the team. This field is read-only, and the system always sets the value.\n",
        "type": "string",
        "readOnly": true
      },
      "TeamName": {
        "description": "Team name\n",
        "x-description": "Name or label for the team.\nNote: Only administrators can update this property.\n",
        "type": "string"
      },
      "TeamDescription": {
        "description": "Team description\n",
        "x-description": "Text that provides extended information about the team. \nNote: Only team members and administrators can update this property.\n",
        "type": "string"
      },
      "TeamMembersArray": {
        "description": "List of user IDs that belong to a team\n",
        "x-description": "List of user IDs that belong to this team. \nNote: Only team members and administrators can add or delete user IDs from this property.\n",
        "type": "array",
        "items": {
          "type": "string"
        },
        "example": [
          "XxXXxXXXXXX",
          "YyYYyYYYYYY",
          "ZzZZzZZZZZZ"
        ]
      },
      "NotificationDestination": {
        "description": "Notification service\n",
        "x-description": "Individual notification service\n",
        "oneOf": [
          {
            "$ref": "#/components/schemas/AmazonEventBridgeNotification"
          },
          {
            "$ref": "#/components/schemas/BigPandaNotificationObject"
          },
          {
            "$ref": "#/components/schemas/EmailNotificationObject"
          },
          {
            "$ref": "#/components/schemas/JiraNotification"
          },
          {
            "$ref": "#/components/schemas/MSTeamsNotificationObject"
          },
          {
            "$ref": "#/components/schemas/OpsgenieNotificationObject"
          },
          {
            "$ref": "#/components/schemas/PagerDutyNotificationObject"
          },
          {
            "$ref": "#/components/schemas/ServiceNowNotificationObject"
          },
          {
            "$ref": "#/components/schemas/SlackNotificationObject"
          },
          {
            "$ref": "#/components/schemas/TeamEmailNotificationObject"
          },
          {
            "$ref": "#/components/schemas/TeamNotificationObject"
          },
          {
            "$ref": "#/components/schemas/VictorOpsNotificationObject"
          },
          {
            "$ref": "#/components/schemas/WebhookNotificationObject"
          },
          {
            "$ref": "#/components/schemas/XMattersNotificationObject"
          }
        ]
      },
      "TeamNotificationLists": {
        "description": "Team notification policy\n",
        "x-description": "Team notification policy, in the form of a set of notification service\nlists that Splunk Observability Cloud uses to send alert messages for an alerting rule or org token\nthreshold. Each list has the form of a JSON array of objects.\n\nAlerting rules specify a severity, and Splunk Observability Cloud uses the team\nnotification policy for that severity when it sends a message. You can\nspecify a list of notification services for each severity.\n\nTo send email notifications:\n\n* The team must already exist.\n* For one or more individual users, use `\"type\": \"Email\"`.\n* For a single team, use `\"type\": \"TeamEmail\"`.\n* For multiple teams, use multiple list objects, each with `\"type\": \"TeamEmail\"` and the team ID.\n\nNote: Only team members and administrators can update this list.\n",
        "type": "object",
        "properties": {
          "default": {
            "description": "Notification services to use for undefined alerts\n",
            "x-description": "List of notification services to use for undefined alerts\ncategory. You can specify a single notification service or a list.\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationDestination"
            }
          },
          "critical": {
            "description": "Notification services to use for critical alerts\n",
            "x-description": "List of notification services to use for critical alerts.\nYou can specify a single notification service or a list.\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationDestination"
            }
          },
          "warning": {
            "description": "Notification services to use for warning alerts\n",
            "x-description": "List of notification services to use for warning alerts.\nYou can specify a single notification service or a list.\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationDestination"
            }
          },
          "major": {
            "description": "Notification services to use for major alerts\n",
            "x-description": "List of notification services to use for major alerts.\nYou can specify a single notification service or a list.\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationDestination"
            }
          },
          "minor": {
            "description": "Notification services to use for minor alerts\n",
            "x-description": "List of notification services to use for minor alerts.\nYou can specify a single notification service or a list.\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationDestination"
            }
          },
          "info": {
            "description": "Notification services to use for information alerts\n",
            "x-description": "List of notification destinations to use for information alerts.\nYou can specify a single notification service or a list.\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationDestination"
            }
          }
        }
      },
      "AmazonEventBridgeNotification": {
        "title": "Amazon EventBridge Alert Notification",
        "description": "Properties that link a notification to an Amazon EventBridge integration\n",
        "x-description": "Specifies the properties needed to send a notification from a detector\nto an existing Splunk Observability Cloud-to-Amazon EventBridge integration\n",
        "type": "object",
        "required": [
          "type",
          "credentialId"
        ],
        "properties": {
          "type": {
            "description": "Always `\"AmazonEventBridge\"`\n",
            "x-description": "Tells Splunk Observability Cloud which external system it should use to send the\nnotification. For an Amazon EventBridge notification, this is always \n`\"AmazonEventBridge\"`.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false,
            "example": "AmazonEventBridge"
          },
          "credentialId": {
            "description": "ID of the Amazon EventBridge integration object\n",
            "x-description": "Amazon EventBridge integration identifier, which Splunk Observability Cloud assigns\nwhen you add the integration. Use the UI or the Integrations API\nto find the value of `credentialId`.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false
          }
        }
      },
      "BigPandaNotificationObject": {
        "title": "BigPanda Notification",
        "description": "Properties of a BigPanda notification service integration\n",
        "x-description": "Notification properties for an alert sent via BigPanda\n",
        "type": "object",
        "required": [
          "type",
          "credentialId"
        ],
        "properties": {
          "type": {
            "description": "Always `\"BigPanda\"`\n",
            "x-description": "Tells Splunk Observability Cloud which system it should use to send the\nnotification. To select BigPanda as the notification system, set `\"type\": \"BigPanda\"`.\n",
            "type": "string",
            "example": "BigPanda"
          },
          "credentialId": {
            "description": "BigPanda integration ID\n",
            "x-description": "The ID of the integration profile for BigPanda. Use the\nIntegrations API to get the credential ID for your BigPanda\nintegration.\n",
            "type": "string"
          }
        }
      },
      "EmailNotificationObject": {
        "title": "Email Notification",
        "description": "Email notification properties\n",
        "x-description": "Notification properties for an alert sent via email\n",
        "type": "object",
        "required": [
          "type",
          "email"
        ],
        "properties": {
          "type": {
            "description": "Always `\"Email\"`\n",
            "x-description": "Tells Splunk Observability Cloud to send the notification as an email. Set `\"type\": \"Email\"`.\n",
            "type": "string",
            "example": "Email"
          },
          "email": {
            "description": "Destination email address\n",
            "x-description": "Destination address for the notification email. Splunk Observability Cloud doesn't\nvalidate this address, so you must ensure it's correct before you\nuse it. Splunk Observability Cloud may not store invalid values, and it may try to\nsend notification email that doesn't have an address. In either\ncase, the notification won't be delivered.\n",
            "type": "string",
            "example": "info@example.com"
          }
        }
      },
      "JiraNotification": {
        "title": "Jira Cloud or Jira Server Alert Notification",
        "description": "Properties that link a notification to a Jira integration\n",
        "x-description": "Specifies the properties of a notification service integration between\nJira Cloud or Jira Server and Splunk Observability Cloud, in the form of a JSON object.\nJira alert notifications take the form of a new Jira ticket whose\nproperties are specified in the Jira integration object.\nFor more information, see the [Integrate Jira with Splunk Observability Cloud](https://dev.splunk.com/observability/docs/integrations/jira_integration_overview) topic in the Developers Guide.\n",
        "type": "object",
        "required": [
          "type",
          "credentialId"
        ],
        "properties": {
          "type": {
            "description": "Always \"Jira\"\n",
            "x-description": "Tells Splunk Observability Cloud which external system it should use to send the\nnotification. For a Jira Cloud or Jira Server notification, this is \nalways `\"Jira\"`.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false,
            "example": "Jira"
          },
          "credentialId": {
            "description": "ID of the Jira integration object\n",
            "x-description": "Jira integration identifier, which Splunk Observability Cloud assigns when you add\nthe integration. Use the UI or the Integrations API to find the\nvalue of `credentialId`.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false
          }
        }
      },
      "MSTeamsNotificationObject": {
        "title": "Microsoft Teams Notification",
        "description": "Properties of a Microsoft Teams notification service integration\n",
        "x-description": "Notification properties for an alert sent using the Microsoft Teams integration\n",
        "type": "object",
        "required": [
          "type",
          "credentialId"
        ],
        "properties": {
          "type": {
            "description": "Always `\"Office365\"` (backwards compatibility)\n",
            "x-description": "Tells Splunk Observability Cloud which system it should use to send the\nnotification. To select Microsoft Teams as the notification system, set `\"type\": \"Office365\"`.\nSplunk Observability Cloud uses this value for backwards compatibility.\n",
            "type": "string",
            "example": "Office365"
          },
          "credentialId": {
            "description": "Microsoft Teams integration ID\n",
            "x-description": "The ID of the integration profile for Microsoft Teams. Use the\nIntegrations API to get the credential ID for your Microsoft Teams\nintegration.\n",
            "type": "string"
          }
        }
      },
      "OpsgenieNotificationObject": {
        "title": "Opsgenie Notification",
        "description": "Notification properties for an Opsgenie notification integration\n",
        "x-description": "Notification properties for an alert sent via Opsgenie.\n",
        "type": "object",
        "required": [
          "credentialId",
          "type"
        ],
        "properties": {
          "type": {
            "description": "Always `\"Opsgenie\"`\n",
            "x-description": "Tells Splunk Observability Cloud which system it should use to send the\nnotification. To select Opsgenie as the notification system, set `\"type\": \"Opsgenie\"`.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false,
            "example": "Opsgenie"
          },
          "credentialId": {
            "description": "Opsgenie integration ID\n",
            "x-description": "Opsgenie integration identifier, which Splunk Observability Cloud assigns when you add\nthe integration\n",
            "type": "string"
          },
          "credentialName": {
            "description": "Opsgenie credential name\n",
            "x-description": "Descriptive name of the Opsgenie credential, which you assign when\nyou add the integration\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false,
            "example": "My Opsgenie Integration"
          },
          "responderName": {
            "description": "Responder you created in Opsgenie\n",
            "x-description": "Name of a responder you created in Opsgenie. Notifications you\nsend using the Opsgenie integration go to this responder.\n\nIf you specify `responderName`, you don't have to specify \n`responderId`. If you specify neither, Opsgenie uses the defaults\nfor your Opsgenie account.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false
          },
          "responderId": {
            "description": "ID of a responder you created in Opsgenie\n",
            "x-description": "ID of a responder you created in Opsgenie. Notifications you\nsend using the Opsgenie integration go to this responder.\n\nIf you specify `responderId`, you don't have to specify \n`responderName`. If you specify neither, Opsgenie uses the\ndefaults for your Opsgenie account.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false
          },
          "responderType": {
            "description": "Always `\"Team\"`\n",
            "x-description": "Opsgenie responder type. The only valid value is ``\"Team\"``.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false,
            "example": "Team"
          }
        }
      },
      "PagerDutyNotificationObject": {
        "title": "PagerDuty Notification",
        "description": "Properties of a PagerDuty notification service integration\n",
        "x-description": "Notification properties for an alert sent via PagerDuty\n",
        "type": "object",
        "required": [
          "type",
          "credentialId"
        ],
        "properties": {
          "type": {
            "description": "Always `\"PagerDuty\"`\n",
            "x-description": "Tells Splunk Observability Cloud which system it should use to send the\nnotification. To select PagerDuty as the notification system, set `\"type\": \"PagerDuty\"`.\n",
            "type": "string",
            "example": "PagerDuty"
          },
          "credentialId": {
            "description": "PagerDuty integration ID\n",
            "x-description": "ID of the PagerDuty integration\n",
            "type": "string"
          }
        }
      },
      "ServiceNowNotificationObject": {
        "title": "ServiceNow Notification",
        "description": "Properties of a ServiceNow notification service integration\n",
        "x-description": "Notification properties for an alert sent via ServiceNow\n",
        "type": "object",
        "required": [
          "type",
          "credentialId"
        ],
        "properties": {
          "type": {
            "description": "Always `\"ServiceNow\"`\n",
            "x-description": "Tells Splunk Observability Cloud which system it should use to send the\nnotification. To select ServiceNow as the notification system, set `\"type\": \"ServiceNow\"`.\n",
            "type": "string",
            "example": "ServiceNow"
          },
          "credentialId": {
            "description": "ServiceNow integration ID\n",
            "x-description": "ID of the ServiceNow integration\n",
            "type": "string"
          }
        }
      },
      "SlackNotificationObject": {
        "title": "Slack Notification",
        "description": "Properties of a Slack notification service integration\n",
        "x-description": "Notification properties for an alert sent via Slack\n",
        "type": "object",
        "required": [
          "type",
          "channel",
          "credentialId"
        ],
        "properties": {
          "type": {
            "description": "Always `\"Slack\"`\n",
            "x-description": "Tells Splunk Observability Cloud which system it should use to send the\nnotification. To select Slack as the notification system, set `\"type\": \"Slack\"`.\n",
            "type": "string",
            "example": "Slack"
          },
          "channel": {
            "description": "Target channel for the Slack notification\n",
            "x-description": "The name of the Slack channel in which to display the notification.\nOmit the leading \"#\" symbol. For example, specify\n\"#critical-notifications\" as \"critical-notifications\".\n",
            "type": "string",
            "example": "channel-notifications"
          },
          "credentialId": {
            "description": "Slack integration ID\n",
            "x-description": "ID of the Slack integration\n",
            "type": "string",
            "example": "Slack"
          }
        }
      },
      "TeamEmailNotificationObject": {
        "title": "Team Email Notification",
        "description": "Properties of a team email notification\n",
        "x-description": "Team email notification service properties. When you use `\"TeamEmail\"`,\nSplunk Observability Cloud sends the alert message to each member of the team. The\nmember email address is the same as the one used to invite the member to\nthe organization.\n",
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "description": "Always `\"TeamEmail\"`\n",
            "x-description": "Tells Splunk Observability Cloud which system it should use to send the\nnotification. To send an email notification to each member of an Splunk Observability Cloud team,\nset `\"type\": \"TeamEmail\"`.\n",
            "type": "string",
            "example": "TeamEmail"
          },
          "team": {
            "description": "Team ID\n",
            "x-description": "The ID of the team whose members should receive the\nnotification. Splunk Observability Cloud sends the alert message to each member of\nthe team, using the email address used to invite the member to the\norganization\n",
            "type": "string",
            "example": "XXxXXXXXXX0"
          }
        }
      },
      "TeamNotificationObject": {
        "title": "Team Notification",
        "description": "Properties of a team notification\n",
        "x-description": "Team notification service properties. When you use `\"Team\"`, Splunk Observability Cloud\nuses the notification policy of the specified team to send alert messages. You can\nspecify different notification services for different alert severities, and\nyou can also specify multiple services for a severity level.\n",
        "type": "object",
        "required": [
          "type",
          "team"
        ],
        "properties": {
          "type": {
            "description": "Always `\"Team\"`\n",
            "x-description": "Tells Splunk Observability Cloud which system it should use to send the\nnotification. To use the notification policy of a team to send notification messages, set `\"type\": \"Team\"`.\n",
            "type": "string",
            "example": "Team"
          },
          "team": {
            "description": "Team ID\n",
            "x-description": "A team ID. When you use `\"Team\"`, Splunk Observability Cloud uses\nthe team's notification policy to send alert messages. You can\nspecify different notification services for different alert\nseverities, and you can also specify multiple services for a\nseverity level.\n",
            "type": "string",
            "example": "DevOps"
          }
        }
      },
      "VictorOpsNotificationObject": {
        "title": "Splunk On-Call Notification",
        "description": "Properties of a Splunk On-Call notification service integration\n",
        "x-description": "Notification properties for an alert sent via Splunk On-Call\n",
        "type": "object",
        "required": [
          "type",
          "credentialId",
          "routingKey"
        ],
        "properties": {
          "type": {
            "description": "Properties of a Splunk On-Call notification service integration\n",
            "x-description": "Tells Splunk Observability Cloud which system it should use to send the\nnotification. To select Splunk On-Call as the notification system, set `\"type\": \"VictorOps\"`;\nSplunk Observability Cloud uses VictorOps as the `\"type\"` value to ensure backwards compatibility.\n",
            "type": "string",
            "example": "VictorOps"
          },
          "credentialId": {
            "description": "Splunk On-Call integration ID\n",
            "x-description": "Splunk Observability Cloud ID of the Splunk On-Call integration\n",
            "type": "string"
          },
          "routingKey": {
            "description": "Routing key you set in Splunk On-Call\n",
            "x-description": "Indicates the routing key used to determine how to process the \nnotification message. This key specifies where the notification is\nposted and how related alerts are escalated. For more information, refer to the\nVictorOps knowlegebase.\n",
            "type": "string"
          }
        }
      },
      "WebhookNotificationObject": {
        "title": "Webhook URL Notification",
        "description": "Properties of a Webhook notification service integration\n",
        "x-description": "Notification properties for an alert sent via a Webhook\n",
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "description": "Always `\"Webhook\"`\n",
            "x-description": "Tells Splunk Observability Cloud which system it should use to send the\nnotification. To use a Webhook as the notification system, set `\"type\": \"Webhook\"`.\n",
            "type": "string",
            "example": "Webhook"
          },
          "credentialId": {
            "description": "Webhook integration ID\n",
            "x-description": "Webhook integration ID\n",
            "type": "string"
          },
          "secret": {
            "description": "Secret key that identifies the Webhook\n",
            "x-description": "A secret value that identifies the Webhook integration to use when \nsending notifications. This value also indicates that the \nnotification has permission to use the integration. If\n`credentialId` is set, this property is ignored.\n",
            "type": "string"
          },
          "url": {
            "description": "Webhook URL\n",
            "x-description": "The URL of a Webhook integration. You must provide the mechanism for\nprocessing notifications sent to the URL and routing them to the\nproper chat or incident management system. If `credentialId` is set,\nthis property is ignored.\n",
            "type": "string",
            "example": "https://www.example.com/webhook"
          }
        }
      },
      "XMattersNotificationObject": {
        "title": "xMatters Notification",
        "description": "Properties of a xMatters notification service integration\n",
        "x-description": "Notification properties for an alert sent via xMatters\n",
        "type": "object",
        "required": [
          "type",
          "credentialId"
        ],
        "properties": {
          "type": {
            "description": "Always `\"xMatters\"` (with a capital \"X\")\n",
            "x-description": "Tells Splunk Observability Cloud which system it should use to send the\nnotification. To select xMatters as the notification system, set `\"type\": \"XMatters\"` using a\ncapital \"X\" as the first letter.\n",
            "type": "string",
            "example": "XMatters"
          },
          "credentialId": {
            "description": "xMatters integration ID\n",
            "x-description": "xMatters integration ID\n",
            "type": "string"
          }
        }
      },
      "TeamResponseBody": {
        "description": "Response body returned by POST, GET, and PUT requests\n",
        "x-description": "The response body returned by the following method/endpoint operations:\n\n* `GET /team`\n* `POST /team`\n* `GET /team/{tid}`\n* `PUT /team/{tid}`\n",
        "type": "object",
        "properties": {
          "created": {
            "$ref": "#/components/schemas/Created"
          },
          "creator": {
            "$ref": "#/components/schemas/Creator"
          },
          "description": {
            "$ref": "#/components/schemas/TeamDescription"
          },
          "id": {
            "$ref": "#/components/schemas/TeamId"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/LastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/LastUpdatedBy"
          },
          "members": {
            "$ref": "#/components/schemas/TeamMembersArray"
          },
          "name": {
            "$ref": "#/components/schemas/TeamName"
          },
          "notificationLists": {
            "$ref": "#/components/schemas/TeamNotificationLists"
          }
        }
      },
      "TeamRequestBody": {
        "description": "Request body\n",
        "x-description": "The request body sent by the following method/endpoint operations:\n\n* `POST /team`\n* `PUT /team/{tid}`\n",
        "type": "object",
        "properties": {
          "description": {
            "$ref": "#/components/schemas/TeamDescription"
          },
          "members": {
            "$ref": "#/components/schemas/TeamMembersArray"
          },
          "name": {
            "$ref": "#/components/schemas/TeamName"
          },
          "notificationLists": {
            "$ref": "#/components/schemas/TeamNotificationLists"
          }
        }
      },
      "AuthorizedWriters": {
        "title": "Organizations and teams with write permission for an object",
        "description": "Specifies user and team IDs that have write access to an object\n",
        "x-description": "If your organization has the write permissions feature enabled, you\ncan use this property to specify the user and team IDs that have write\naccess to the object you're specifying.\n",
        "type": "object",
        "properties": {
          "teams": {
            "description": "List of team IDs\n",
            "x-description": "List of team IDs that have write access to this object, in the form\nof a JSON array\n",
            "type": "array",
            "items": {
              "type": "string",
              "example": "DevOps"
            }
          },
          "users": {
            "description": "List of user IDs\n",
            "x-description": "List of user IDs that have write access to this object, in the form\nof a JSON array\n",
            "type": "array",
            "items": {
              "type": "string",
              "example": "AAXYAAAAAZ4"
            }
          }
        }
      },
      "CustomProperties": {
        "type": "array",
        "description": "An array of custom properties for the test.",
        "items": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "example": "foo"
            },
            "value": {
              "type": "string",
              "example": "bar"
            }
          }
        }
      },
      "Description": {
        "title": "Detector description",
        "description": "Detector description\n",
        "x-description": "Description of a detector. The value appears in the Detector window\ndisplayed in the UI Actions menu.\n",
        "type": "string",
        "readOnly": false,
        "writeOnly": false,
        "example": "jvm CPU load warning"
      },
      "DetectorInputs": {
        "title": "Inputs to detector's detect object",
        "description": "Detect object input stream variables or metric names\n",
        "x-description": "Inputs to a detector's detect block, in the form of a JSON object.\nA detector's detect block is the part of its SignalFlow program that\ncontains the `detect()` function call.\n\nThe top-level keys in the object may be internal Splunk Observability Cloud variables,\nor they may be metric names. The values may be objects or primitives,\ndepending on the structure of the detect block.\n",
        "type": "object",
        "additionalProperties": {},
        "example": {
          "A": 5,
          "B": 6
        }
      },
      "DetectorOrigin": {
        "title": "How the detector was created",
        "description": "Indicates how a detector was created.\n",
        "x-description": "Indicates how a detector was created. The possible values are:\n\n* `Standard`: Detector created using the API or the user interface.\n* `AutoDetect`: Detector is an AutoDetect detector created by Splunk Observability Cloud.\n* `AutoDetectCustomization`: Detector is a customization of another `AutoDetect` detector.\n\nNote: You can only use `Standard` or `AutoDetectCustomization` to create custom detectors. If you try to pass an invalid value for `detectorOrigin` when creating or updating detectors, you receive a \"Not valid detector origin\" error message in the response.\n",
        "type": "string",
        "enum": [
          "Standard",
          "AutoDetect",
          "AutoDetectCustomization"
        ],
        "example": "Standard",
        "default": "Standard"
      },
      "Disabled": {
        "description": "Indicates that the alert rule is enabled or disabled\n",
        "x-description": "Controls the state of an alert rule. If `false`, the rule is turned on\nand SignalFlow issues alerts for it. If `true`, the rule is turned\noff  and SignaFlow doesn't issue alerts for it, even if one of the\nrules is triggered.\n",
        "type": "boolean",
        "default": false,
        "readOnly": false,
        "writeOnly": false,
        "example": false
      },
      "DisplayName": {
        "title": "Detector chart display name",
        "description": "Data Table column header for publish block in the detector's chart\n",
        "x-description": "Specifies the Data Table column header for a single `publish()` block\nin a detector's chart. If you don't specify a value, Splunk Observability Cloud uses the\nname of the dimension that's providing the data for the `publish()`\nblock.\n",
        "type": "string",
        "example": "JVM CPU load"
      },
      "EventTime": {
        "title": "Time that an event occurred",
        "description": "Timestamp that event occurred, in *nix time in milliseconds. Set by system.\n",
        "x-description": "Date and time that an event occurred, in *nix time in milliseconds.\n\nThis property is read-only; it's always set by the system.\n",
        "type": "integer",
        "format": "int64",
        "readOnly": true
      },
      "Label": {
        "title": "Label of a publish() object in a SignalFlow program",
        "description": "Label that connects a detector publish object with chart label options\n",
        "x-description": "Specifies a SignalFlow `publish()` object label. Splunk Observability Cloud uses this value\nto associate the `publish()` block output with a `publishLabelOptions`\nobject.\n",
        "type": "string",
        "example": "cpuLoad"
      },
      "LabelResolutions": {
        "title": "Alert resolution times",
        "description": "Properties that control how often Splunk Observability Cloud checks for alert conditions\n",
        "x-description": "Key-value pairs that indicate how often data is analyzed to determine if an\nalert should be triggered, in the form of a JSON object containing\nproperties. Each key is the label name of a call to `publish()` in the\nSignalFlow for the detector, and each value is the resolution time\nfor that `publish()` block.\n\nFor example, to retrieve the label resolution of the call to\n`publish(\"DetectorStatement\")` from this object, use\n`labelResolutions.DetectorStatement`.\n\nLabel resolution is different from the data display resolution used to\npopulate the detector visualization. The data display resolution is\nautomatically set to the coarsest resolution of all of the SignalFlow\n`publish()` calls associated with the detector, since they are all\ndisplayed together in the same visualization.\n",
        "type": "object",
        "readOnly": true,
        "additionalProperties": {
          "type": "integer"
        },
        "example": {
          "DetectorA": 3000,
          "DetectorB": 5000
        }
      },
      "Locked": {
        "title": "Detector lock state",
        "description": "Indicates that users can't modify the detector\n",
        "x-description": "Detector lock state. If `true`, nobody can modify the detector in any\nway; otherwise, anyone can modify it.\n",
        "type": "boolean",
        "example": false
      },
      "MaxDelay": {
        "title": "Late-arriving data point delay time",
        "description": "Upper limit of how long the SignalFlow computation waits for delayed data before continuing, in milliseconds. The default is 0, which tells SignalFlow to set the limit dynamically.\n",
        "x-description": "Sets a duration, in milliseconds, to wait for late-arriving data before continuing the SignalFlow computation\nfor the detector. If data is arriving on time, the computation continues before the duration expires.\n\n The default is 0, which tells SignalFlow to set the limit dynamically.\n\nTo set a duration to wait even if data is arriving on time, use `minDelay`.\n",
        "type": "integer",
        "format": "int32",
        "minimum": 0,
        "maximum": 900000,
        "default": 0,
        "readOnly": false,
        "writeOnly": false,
        "example": 60000
      },
      "MinDelay": {
        "title": "data point pre-processing delay time",
        "description": "Lower limit of how long the SignalFlow computation for the detector waits before continuing, in milliseconds.\n",
        "x-description": "Sets a duration, in milliseconds, to wait before continuing the SignalFlow computation for the detector.\nThe computation waits for this duration to expire, even if the data is arriving in a timely fashion.\n\nTo set a duration to wait for late-arriving data, use `maxDelay`.\n",
        "type": "integer",
        "format": "int32",
        "minimum": 0,
        "maximum": 900000,
        "readOnly": false,
        "writeOnly": false,
        "example": 60000
      },
      "PaletteIndex": {
        "title": "Color choice",
        "description": "Color to use for the publish object in a detector's table\n",
        "x-description": "0-based index into the color table displayed in\n[Charts color palettes](/docs/chartsdashboards/charts_overview#Chart-color-palettes).\nOnly the first 16 entries (0-15) are allowed for this value. Splunk Observability Cloud uses the\nindex to determine which color to use for displaying the output of a single `publish()`\nobject in a detector's table.\n",
        "type": "integer",
        "minimum": 0,
        "maximum": 15,
        "example": 9
      },
      "Notifications": {
        "description": "List of notifications to send for a triggered rule\n",
        "x-description": "List of notifications to send when the rule is triggered, in the\nform of a JSON array.  You can specify more than notification, and\neach of them can have a different type.\n\nTo send email notifications:\n\n* To send emails to a team, the team must already exist.\n* For one or more individual users, use `\"type\": \"Email\"`.\n* For a single team, use `\"type\": \"TeamEmail\"`.\n* For multiple teams, use multiple array elements, each with `\"type\": \"TeamEmail\"` and the team ID.\n\nEmail notes:\n  \n* `\"TeamEmail\"` sends the notification message to all of the team members,\n  using the member's email address. This email is the same\n  as the one used to invite the member to the organization, and you\n  can't change it.\n* `\"Team\"` sends notification messages using the team's notification policy,\n  which may or may not send email to team members. To learn more, see\n  the description of the `\"Team\"` notification type.\n",
        "type": "array",
        "readOnly": false,
        "writeOnly": false,
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/AmazonEventBridgeNotification"
            },
            {
              "$ref": "#/components/schemas/BigPandaNotification"
            },
            {
              "$ref": "#/components/schemas/EmailNotification"
            },
            {
              "$ref": "#/components/schemas/JiraNotification"
            },
            {
              "$ref": "#/components/schemas/MSTeamsNotification"
            },
            {
              "$ref": "#/components/schemas/OpsgenieNotification"
            },
            {
              "$ref": "#/components/schemas/PagerDutyNotification"
            },
            {
              "$ref": "#/components/schemas/ServiceNowNotification"
            },
            {
              "$ref": "#/components/schemas/SlackNotification"
            },
            {
              "$ref": "#/components/schemas/TeamEmailNotification"
            },
            {
              "$ref": "#/components/schemas/TeamNotification"
            },
            {
              "$ref": "#/components/schemas/VictorOpsNotification"
            },
            {
              "$ref": "#/components/schemas/WebhookNotification"
            },
            {
              "$ref": "#/components/schemas/XMattersNotification"
            }
          ]
        },
        "example": [
          {
            "email": "user@example.com",
            "type": "Email"
          },
          {
            "credentialId": "myCredentialId",
            "type": "ServiceNow"
          }
        ]
      },
      "OverMTSLimit": {
        "description": "Indicates that a detector object matched too many MTS. Set by system.\n",
        "x-description": "If `true`, one or more statements in a detector matched too many MTS,\nand the system forcibly limited the detector. This usually occurs when\nthe detector is looking at incomplete data or an incomplete\naggregation. When this flag is `true`, use `partition_filter()`\nfunctions to split your dataset into smaller pieces, then use the\n`union()` function to rejoin the results in a subsequent computation.\nThe `union()` function still observes the MTS limit, so an\naggregation of the partial streams must first limit the dataset prior\nto recombining the streams.\n\nThis property is read-only; it's always set by the system.\n",
        "type": "boolean",
        "readOnly": true,
        "example": false
      },
      "PackageSpecifications": {
        "title": "SignalFlow internal field",
        "description": "For internal use only\n",
        "x-description": "For internal use only\n",
        "type": "string",
        "default": ""
      },
      "ParentDetectorId": {
        "title": "ID of the parent AutoDetect detector",
        "description": "ID of the parent detector\n",
        "x-description": "ID of the parent detector from which this detector is customized and created. This property is required for detectors with `detectorOrigin` of type `AutoDetectCustomization`. \n",
        "type": "string"
      },
      "ParameterizedBody": {
        "description": "Customized message body for alert notifications from a rule\n",
        "x-description": "Custom notification message body for a rule, displayed in the alert\nnotification. The body content must be plain text:\n\n* Escape quote characters with a backslash\n* Indicate a newline with the `\"\\n\"` string.\n* To insert an alert variable value, enclose the name in curly brackets `\"{}\"`.\n* To do partial escaping of the variable, enclose it in double curly\n  brackets `\"{{}}\"`. This ensures that characters in the body don't\n  trigger unintended results in Splunk Observability Cloud or the notification service.\n* To do full escaping of the variable, enclose it in triple curly\n  brackets `\"{{{}}}\"`. Splunk Observability Cloud escapes the variable as needed so\n  that characters such as quotation marks and angle brackets render\n  correctly.\n* If you're unsure which style of variable to use, use triple curly brackets,\n  so that all content renders properly.\n\nSplunk Observability Cloud provides recommendations for the notation style to use\nwith each supported variable.\n\nTo learn more about working with custom notification messages using the\nAPI, see [Custom notification messages](/docs/detectors/detectors_events_alerts#Custom-notification-messages).\n\nTo see a full list of variables with their default notation, see the\nsection [Message preview](https://docs.splunk.com/observability/en/alerts-detectors-notifications/create-detectors-for-alerts.html#message-preview)\nin the user documentation.\n",
        "type": "string",
        "readOnly": false,
        "writeOnly": false,
        "example": "{{#if anomalous}}\n\tRule \"{{{ruleName}}}\" in detector \"{{{detectorName}}}\" triggered at {{dateTimeFormat timestamp format=\"full\"}}.\n{{else}}\n\tRule \"{{{ruleName}}}\" in detector \"{{{detectorName}}}\" cleared at {{dateTimeFormat timestamp format=\"full\"}}.\n{{/if}}\n\n{{#if anomalous}}\nTriggering condition: {{{readableRule}}}\n{{/if}}\n\nMean value of signal in the last {{event_annotations.current_window}}: {{inputs.summary.value}}\n{{#if anomalous}}Trigger threshold: {{inputs.fire_top.value}}\n{{else}}Clear threshold: {{inputs.clear_top.value}}.\n{{/if}}\n\n{{#notEmpty dimensions}}\nSignal details:\n{{{dimensions}}}\n{{/notEmpty}}\n\n{{#if anomalous}}\n{{#if runbookUrl}}Runbook: {{{runbookUrl}}}{{/if}}\n{{#if tip}}Tip: {{{tip}}}{{/if}}\n{{/if}}"
      },
      "ParameterizedSubject": {
        "description": "Customized notification subject for alerts\n",
        "x-description": "Custom notification subject for a rule, displayed in the alert\nnotification. The content must be plain text:\n\n* Escape quote characters with a backslash\n* Indicate a newline with the \"\\n\" string.\n* To insert an alert variable value, enclose the name in\n  curly brackets `{}`.\n* To do partial escaping of the variable, enclose it in double curly\n  brackets `{{}}`. This ensures that characters in the body don't\n  trigger unintended results in Splunk Observability Cloud or the notification service.\n* To do full escaping of the variable, enclose it in triple curly\n  brackets `{{{}}}`. Splunk Observability Cloud escapes the variable as needed so\n  that characters such as quotation marks and angle brackets render\n  correctly.\n* If you're unsure which style of variable to use, use triple curly brackets,\n  so that all content renders properly.\n\nSplunk Observability Cloud provides recommendations for the notation style to use\nwith each supported variable.\n\nTo learn more about custom notification messages in the API, see the API topics section\n[Custom notification messages](https://developers.signalfx.com/detectors_events_alerts/detectors_overview.html#_custom_notification_messages)\nin the Developers Guide.\n\nTo see a full list of variables with their default notation, see the\nsection [Message preview](https://docs.splunk.com/observability/en/alerts-detectors-notifications/create-detectors-for-alerts.html#message-preview)\nin the user documentation.\n",
        "type": "string",
        "readOnly": false,
        "writeOnly": false,
        "example": "Notification for {{{rulename}}} in detector {{{detectorName}}}"
      },
      "ProgramText": {
        "title": "SignalFlow program for the detector",
        "description": "The detector's SignalFlow program\n",
        "x-description": "Specifies the SignalFlow program that defines the detector. This program\nmust include one or more calls to the SignalFlow `detect()` function.\nThe program must also call `publish()` on each detect stream, using a\nlabel that's unique to the program.\n\nIf you want to use custom notification messages that include input data,\nassign your detect conditions to variables.\n\nTo use multiple lines in your program, terminate each line with a\nsemicolon `;` or newline character `\\n`.\n\nTo learn more about SignalFlow programs for detectors,\nsee the [Detectors, Events, and Alerts](https://dev.splunk.com/observability/docs/detectors/detectors_events_alerts) topic in the Developers Guide.\n\nNote: For detectors with `detectorOrigin` of type `AutoDetectCustomization`, it is best practice to keep the same function in the `programText` property as the parent detector. You can still pass different arguments for the function.\n",
        "type": "string",
        "readOnly": false,
        "writeOnly": false,
        "example": "cpuLoad = data('jvm.cpu.load').percentile(pct=94).publish(label='cpuLoad'); detect(when(cpuLoad > 94)).publish('cpuLoad');"
      },
      "PublishLabelOptions": {
        "title": "List of display options for the detector's chart",
        "description": "List of display options for the detector's chart\n",
        "x-description": "List of display options for a detector's chart. Each element in the list\ncontains the options for a single SignalFlow `publish()` block in the\ndetector's SignalFlow program. The list has the form of a JSON array of\nobjects.\n\nSplunk Observability Cloud matches an object's `label` value to match it to a `publish()`\nblock.\n",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PublishLabelOption"
        }
      },
      "PublishLabelOption": {
        "title": "Display options for the detector's chart",
        "description": "Display options for a plot in the detector's chart\n",
        "x-description": "One set of options that control the appearance of a `publish()` block\nin a detector's chart, in the form of a JSON object. Splunk Observability Cloud matches the\nobjects `label` value to match it to its `publish()` block.\n",
        "type": "object",
        "properties": {
          "displayName": {
            "$ref": "#/components/schemas/DisplayName"
          },
          "label": {
            "$ref": "#/components/schemas/Label"
          },
          "paletteIndex": {
            "$ref": "#/components/schemas/PaletteIndex"
          },
          "valuePrefix": {
            "$ref": "#/components/schemas/ValuePrefix"
          },
          "valueSuffix": {
            "$ref": "#/components/schemas/ValueSuffix"
          },
          "valueUnit": {
            "$ref": "#/components/schemas/ValueUnit"
          }
        }
      },
      "RuleDescription": {
        "description": "Description of an alert rule\n",
        "x-description": "Description for the rule. Displays as the alert condition in the\nAlert Rules tab of the detector editor in the UI\n",
        "type": "string",
        "default": "",
        "readOnly": false,
        "writeOnly": false,
        "example": "JVM CPU Load test"
      },
      "RuleDetectLabel": {
        "description": "Label of the SignalFlow publish object for this rule\n",
        "x-description": "Label of the `publish()` call for the `detect()` function associated\nwith this rule.\n",
        "type": "string",
        "example": "cpuLoad"
      },
      "RunbookUrl": {
        "description": "Run book URL for a rule\n",
        "x-description": "Provides a link from an alert rule to a runbook, in the form of a URL\nthat you can refer to with the Splunk Observability Cloud `{{runbookURL}}`\nvariable in the `parameterizedBody` or `parameterizedSubject` properties.\n",
        "type": "string",
        "format": "URL",
        "readOnly": false,
        "writeOnly": false,
        "example": "www.example.com"
      },
      "Rule": {
        "title": "Detector Rule Object",
        "description": "Single alert rule\n",
        "x-description": "Single alert rule",
        "type": "object",
        "required": [
          "detectLabel",
          "severity"
        ],
        "properties": {
          "description": {
            "$ref": "#/components/schemas/RuleDescription"
          },
          "detectLabel": {
            "$ref": "#/components/schemas/RuleDetectLabel"
          },
          "disabled": {
            "$ref": "#/components/schemas/Disabled"
          },
          "notifications": {
            "$ref": "#/components/schemas/Notifications"
          },
          "parameterizedBody": {
            "$ref": "#/components/schemas/ParameterizedBody"
          },
          "parameterizedSubject": {
            "$ref": "#/components/schemas/ParameterizedSubject"
          },
          "runbookUrl": {
            "$ref": "#/components/schemas/RunbookUrl"
          },
          "severity": {
            "$ref": "#/components/schemas/Severity"
          },
          "tip": {
            "$ref": "#/components/schemas/Tip"
          }
        }
      },
      "Rules": {
        "title": "Alert Rule Definitions",
        "description": "List of alert rules for a detector\n",
        "x-description": "An array of rules that define aspects of an alert. These include the\nalert's severity and directives that control how notifications are sent\nwhen the alert is triggered. Each rule is connected to a specific\n`detect()` function in the SignalFlow program (the `programText`\nproperty) by the  value of the label in its `publish()` method. The rule\nconnects to one  or more notification directives and an severity\nindicator.\n\nTo apply different severities to each notification\nmethod you use for a single condition, create multiple rules for the\ncondition. In each rule, specify a notification method and severity.\n",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Rule"
        },
        "readOnly": false,
        "writeOnly": false
      },
      "Status": {
        "title": "Status of this detector",
        "description": "Analytics status of this detector\n",
        "x-description": "Status of the analytics job for this detector. This property is read-only. The possible\nvalues are:\n\n* `\"ACTIVE\"`: The analytics job for this detector is up and running.\n* `\"INITIALIZING\"`: The analytics job for this detector is starting up after creation or re-starting after an update.\n* `\"RETRYING_INITIALIZATION\"`: The analytics job for this detector failed to start and Splunk Observability Cloud will try to start the job again after some time.\n* `\"FAILED\"`: The analytics job for this detector failed to start and the system has reached maximum number of initialization attempts.\n",
        "type": "string",
        "readOnly": true,
        "enum": [
          "ACTIVE",
          "INITIALIZING",
          "RETRYING_INITIALIZATION",
          "FAILED"
        ],
        "example": "ACTIVE"
      },
      "Tags": {
        "title": "Keyword filters",
        "description": "List of tags for the detector\n",
        "x-description": "Array of keywords that filters detectors by one of their properties. Use\ntags to indicate the state of a detector or its data source (for\nexample, you can label a detector with a `\"prod\"` tag to indicate that it\nmonitors a production environment).\n\nNote: You can have no more than 50 tags per detector.\n",
        "type": "array",
        "readOnly": false,
        "writeOnly": false,
        "items": {
          "type": "string",
          "description": "Detector tag\n",
          "x-description": "UTF-8 string, starting with an uppercase or lowercase alphabetic character.\nThe maximum length is expressed in characters; if a string consists solely\nof single-byte UTF-8 entities, 1024 characters are available.\n",
          "maxLength": 256,
          "maxItems": 50,
          "readOnly": false,
          "writeOnly": false
        },
        "example": [
          "dev",
          "oregon",
          "offline"
        ]
      },
      "Teams": {
        "title": "Team IDs for this detector",
        "description": "IDs of teams associated with this detector\n",
        "x-description": "IDs of teams associated with this detector. The teams\nassociated  with a detector can see the detector and its active alerts\non the team's landing page in the UI. The list of teams associated\nwith a detector is independent of notification settings.  Teams\nspecified in this field don't automatically get notified of new alerts,\nand teams that choose to get alerts do not have to display the detector\non their team landing page in the web application.\n",
        "type": "array",
        "readOnly": false,
        "writeOnly": false,
        "items": {
          "type": "string",
          "readOnly": false,
          "writeOnly": false
        },
        "example": [
          "DevOps",
          "Engineering",
          "Support"
        ]
      },
      "Time": {
        "title": "Time Object",
        "description": "Time range display options\n",
        "x-description": "Options for the time displayed in the detector visualization.",
        "type": "object",
        "properties": {
          "end": {
            "description": "Timestamp of the last time to display\n",
            "x-description": "The timestamp of the last time to display in the visualization,\nspecified in *nix time in milliseconds.\n",
            "type": "integer",
            "format": "int64",
            "default": 0,
            "example": 1557693030000,
            "readOnly": false,
            "writeOnly": false
          },
          "range": {
            "description": "Number of milliseconds to display for the detector\n",
            "x-description": "The number of milliseconds to display in the visualization. This is\na is a rolling range with the current time at the right border of\nthe chart display. Use 0 to use the default behavior; this\ncorresponds to -15m for most metrics and -1h for AWS, GCP, and Azure\nmetrics.\n",
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "default": 0,
            "readOnly": false,
            "writeOnly": false,
            "example": 0
          },
          "start": {
            "description": "Timestamp of the first time to display\n",
            "x-description": "The timestamp of the first time to display in the visualization,\nspecified in *nix time in milliseconds.\n",
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "default": 0,
            "example": 1557682230000,
            "readOnly": false,
            "writeOnly": false
          },
          "type": {
            "description": "Enumeration of time range choices\n",
            "x-description": "Enumeration that controls the use of an explicit time range. A value\nof \"absolute\" indicates that you want an explicit time range;\n`\"relative\"` indicates that you want the time relative to the last N\nmilliseconds.  The default is `\"relative\"`.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false,
            "enum": [
              "absolute",
              "relative"
            ]
          }
        }
      },
      "TimeZone": {
        "title": "Time zone for SignalFlow calendar window transformations",
        "description": "Time zone for SignalFlow calendar window transformations\n",
        "x-description": "Specifies which time zone SignalFlow should use as the basis of calendar\nwindow transformation methods. For example, if you set `\"timezone\":\n\"Europe/Paris\"` and then use the transformation `sum(cycle=\"week\",\ncycle_start=\"Monday\")` in your detector's SignalFlow program, the\ncalendar window starts on Monday, Paris time.\n\nFor a list of supported time zones,\nsee [Time zone for calendar window transformations](https://dev.splunk.com/observability/docs/signalflow#Time-zone-for-calendar-window-transformations).\n",
        "type": "string",
        "default": "UTC",
        "readOnly": false,
        "writeOnly": false,
        "example": "America/Detroit"
      },
      "Tip": {
        "title": "Text that describes first action to take upon receiving an alert",
        "description": "Plain text shown in an alert notification message\n",
        "x-description": "Plain text to show in the notification message for an alert. Use this\ntext to suggest the first course of action to take when a signal triggers an alert.\nTo show this text, customize the `parameterizedBody` property to add the\n`{{{tip}}}` variable.\n",
        "type": "string",
        "example": "Check detector in Splunk Observability Cloud"
      },
      "ValuePrefix": {
        "title": "String to prepend to data table values",
        "description": "Value to prepend to detector chart's data table values\n",
        "x-description": "Specifies a string to prepend to the value in a data table for\na detector's chart. This string also appears in the tooltip you see\nwhen you hover over a point on a chart. To learn more, see the\nexample in [Single value charts](/docs/chartsdashboards/charts_overview#Single-value-charts).\nSplunk Observability Cloud overrides `valuePrefix` if you set `options.publishLabelOptions.valueUnit` for the same\nplot.\n",
        "type": "string",
        "example": "Avg "
      },
      "ValueSuffix": {
        "title": "String to append to detector chart's data table values",
        "description": "Value to append to data tabla values\n",
        "x-description": "Specifies a string to append to the value in the data table for a\ndetector's chart. This string also appears in the tooltip you see when\nyou hover over a point in the chart. To learn more, see the\nexample in [Single value charts](/docs/chartsdashboards/charts_overview#Single-value-charts).\nSplunk Observability Cloud overrides `valueSuffix` if you set `options.publishLabelOptions.valueUnit`\nfor the same plot.\n",
        "type": "string",
        "example": "pct"
      },
      "ValueUnit": {
        "title": "Display units used with the detector's chart",
        "description": "Unit of measure for values displayed in a detector's chart\n",
        "x-description": "Specifies the units of measure for values displayed in a detector's chart.\nSplunk Observability Cloud assumes that the raw data uses the unit of measure you select.\nFor example, the value 1000 in a chart where you've set\n`options.publishLabelOption.valueUnit` to `bits` appears as 1 Kilobit,\nand the value 1024 in a plot set to `Bytes` appears as 1 Kebibyte.\nSplunk Observability Cloud scales units within their own unit type. Refer to\n[Display units and other labels](/docs/chartsdashboards/charts_overview#Display-units-and-other-labels)\nfor a full specification. The `options.publishLabelOptions.valueUnit` option applies to scaling\nand labeling in chart tooltips, axes, and data tables. If\n`options.publishLabelOptions.valueUnit` affects the chart\npresentation, it overrides `options.publishLabelOptions.valuePrefix` and\n`options.publishLabelOptions.valueSuffix`.\n",
        "type": "string",
        "enum": [
          "Bit",
          "Kilobit",
          "Megabit",
          "Gigabit",
          "Terabit",
          "Petabit",
          "Exabit",
          "Zettabit",
          "Yottabit",
          "Byte",
          "Kibibyte",
          "Mebibyte",
          "Gibibyte",
          "Tebibyte",
          "Pebibyte",
          "Exbibyte",
          "Zebibyte",
          "Yobibyte",
          "Nanosecond",
          "Microsecond",
          "Millisecond",
          "Second",
          "Minute",
          "Hour",
          "Day",
          "Week"
        ],
        "example": "Second"
      },
      "VisualizationOptions": {
        "title": "Detector appearance options",
        "description": "Display options for a detector's chart\n",
        "x-description": "Options that control the appearance of a detector in the user interface.\n",
        "type": "object",
        "properties": {
          "disableSampling": {
            "description": "Controls display of all data points instead of sampled data points\n",
            "x-description": "If `true`, Splunk Observability Cloud displays all data points in the `detect()`\nstreams; otherwise, Splunk Observability Cloud only samples data points. Using sampling\nimproves performance.\n",
            "type": "boolean",
            "default": false,
            "readOnly": false,
            "writeOnly": false,
            "example": false
          },
          "publishLabelOptions": {
            "$ref": "#/components/schemas/PublishLabelOptions"
          },
          "showDataMarkers": {
            "description": "Controls the display of markers for data points\n",
            "x-description": "If `True`, visualizations contain markers for each data point.\n",
            "type": "boolean",
            "default": true,
            "readOnly": false,
            "writeOnly": false,
            "example": true
          },
          "showEventLines": {
            "description": "Controls displaying vertical lines for event times\n",
            "x-description": "If `True`, the visualization contains a vertical line at the time\nvalue that  the `detect()` function triggers an alert.\n",
            "type": "boolean",
            "default": false,
            "readOnly": false,
            "writeOnly": false,
            "example": true
          },
          "time": {
            "$ref": "#/components/schemas/Time"
          }
        }
      },
      "BigPandaNotification": {
        "title": "BigPanda Alert Notification",
        "description": "Properties that link a notification to a BigPanda integration\n",
        "x-description": "Specifies the properties of a notification service integration between\nBigPanda and Splunk Observability Cloud, in the form of a JSON object\n",
        "type": "object",
        "required": [
          "type",
          "credentialId"
        ],
        "properties": {
          "type": {
            "description": "Always \"BigPanda\"\n",
            "x-description": "Tells Splunk Observability Cloud which external system it should use to send the\nnotification. For a BigPanda notification, this is always \n`\"BigPanda\"`.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false,
            "example": "BigPanda"
          },
          "credentialId": {
            "description": "ID of the BigPanda integration object\n",
            "x-description": "BigPanda integration identifier, which Splunk Observability Cloud assigns when you add\nthe integration. Use the UI or the Integrations API to find the\nvalue of `credentialId`.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false
          }
        }
      },
      "EmailNotification": {
        "title": "Email Alert Notification",
        "description": "Properties that link a notification to an email address\n",
        "x-description": "Specifies the properties of a notification service integration between\nemail and Splunk Observability Cloud, in the form of a JSON object\n",
        "type": "object",
        "required": [
          "email",
          "type"
        ],
        "properties": {
          "type": {
            "description": "Always \"Email\"\n",
            "x-description": "Tells Splunk Observability Cloud which external system it should use to send the\nnotification. For an email notification, this is always `\"Email\"`.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false,
            "example": "Email"
          },
          "email": {
            "description": "Email address\n",
            "x-description": "The destination address for the notification email. Splunk Observability Cloud doesn't\nvalidate this address, so you must ensure it's correct before you\nuse it. Splunk Observability Cloud may not store invalid values, and it may try to\nsend notification email that doesn't have an address. In either\ncase, the notification won't be delivered.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false,
            "example": "info@example.com"
          }
        }
      },
      "MSTeamsNotification": {
        "title": "Microsoft Teams Alert Notification",
        "description": "Properties that link a notification to a Microsoft Teams integration\n",
        "x-description": "Specifies the properties of a notification service integration between\nMicrosoft Teams and Splunk Observability Cloud, in the form of a JSON object\n",
        "type": "object",
        "required": [
          "type",
          "credentialId"
        ],
        "properties": {
          "type": {
            "description": "\"Office365\" (backwards compatibility)\n",
            "x-description": "Tells Splunk Observability Cloud which external system it should use to send the\nnotification. To ensure backwards compatibility, this is always\n`\"Office365\"`.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false,
            "example": "Office365"
          },
          "credentialId": {
            "description": "ID of the MS Teams integration object\n",
            "x-description": "Microsoft Teams integration identifier, which Splunk Observability Cloud assigns when you\nadd the integration. Use the UI or the Integrations API to find\nthe value of `credentialId`.\n",
            "readOnly": false,
            "writeOnly": false,
            "type": "string"
          }
        }
      },
      "OpsgenieNotification": {
        "title": "Opsgenie Alert Notification",
        "description": "Properties that link a notification to a Opsgenie integration\n",
        "x-description": "Properties of a detector notification sent via Opsgenie.\n",
        "type": "object",
        "required": [
          "credentialId",
          "type"
        ],
        "properties": {
          "type": {
            "description": "Always \"Opsgenie\"\n",
            "x-description": "Tells Splunk Observability Cloud which external system it should use to send the\nnotification. For an Opsgenie notification, this is always\n`\"Opsgenie\"`.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false,
            "example": "Opsgenie"
          },
          "credentialId": {
            "description": "ID of the Opsgenie integration object\n",
            "x-description": "Opsgenie integration identifier, which Splunk Observability Cloud assigns when you add\nthe integration\n",
            "type": "string"
          },
          "credentialName": {
            "description": "Name of the Opsgenie integration object\n",
            "x-description": "Descriptive name of the Opsgenie credential, which you assign when\nyou add the integration\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false,
            "example": "My Opsgenie Integration"
          },
          "responderName": {
            "description": "Opsgenie responder name\n",
            "x-description": "Name of a responder you created in Opsgenie. Notifications you\nsend using the Opsgenie integration go to this responder.\n\nIf you specify `responderName`, you don't have to specify\n`responderId`. If you specify neither, Opsgenie uses the defaults\nfor your Opsgenie account.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false
          },
          "responderId": {
            "description": "Responder ID\n",
            "x-description": "ID of a responder you created in Opsgenie. Notifications you\nsend using the Opsgenie integration go to this responder.\n\nIf you specify `responderId`, you don't have to specify\n`responderName`. If you specify neither, Opsgenie uses the\ndefaults for your Opsgenie account.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false
          },
          "responderType": {
            "description": "Always \"Team\"\n",
            "x-description": "Opsgenie responder type. The only valid value is `\"Team\"`.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false,
            "example": "Team"
          }
        }
      },
      "PagerDutyNotification": {
        "title": "PagerDuty Alert Notification",
        "description": "Properties that link a notification to a PagerDuty integration\n",
        "x-description": "Specifies the properties of a notification service integration between\nPagerDuty and Splunk Observability Cloud, in the form of a JSON object\n",
        "type": "object",
        "required": [
          "credentialId",
          "type"
        ],
        "properties": {
          "type": {
            "description": "Always `\"PagerDuty\"`\n",
            "x-description": "Tells Splunk Observability Cloud which external system it should use to send the\nnotification. For a PagerDuty notification, this is always\n\"PagerDuty\".\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false,
            "example": "PagerDuty"
          },
          "credentialId": {
            "description": "ID of the PagerDuty integration object\n",
            "x-description": "PagerDuty integration identifier, which Splunk Observability Cloud assigns when you\nadd the integration. Use the UI or the Integrations API to find\nthe value of `credentialId`.\n",
            "readOnly": false,
            "writeOnly": false,
            "type": "string"
          }
        }
      },
      "ServiceNowNotification": {
        "title": "ServiceNow Alert Notification",
        "description": "Properties that link a notification to a Service Now integration\n",
        "x-description": "Specifies the properties of a notification service integration between\nServiceNow and Splunk Observability Cloud, in the form of a JSON object\n",
        "type": "object",
        "required": [
          "credentialId",
          "type"
        ],
        "properties": {
          "type": {
            "description": "Always `\"ServiceNow\"`\n",
            "x-description": "Tells Splunk Observability Cloud which external system it should use to send the\nnotification. For a ServiceNow notification, this is always\n\"ServiceNow\".\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false,
            "example": "ServiceNow"
          },
          "credentialId": {
            "description": "ID of the ServiceNow integration object\n",
            "x-description": "ServiceNow integration identifier, which Splunk Observability Cloud assigns when you\nadd the integration. Use the UI or the Integrations API to find\nthe value of `credentialId`.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false
          }
        }
      },
      "SlackNotification": {
        "title": "Slack Alert Notification",
        "description": "Properties that link a notification to a Slack integration\n",
        "x-description": "Specifies the properties of a notification service integration between\nSlack and Splunk Observability Cloud, in the form of a JSON object\n",
        "type": "object",
        "required": [
          "type",
          "channel",
          "credentialId"
        ],
        "properties": {
          "type": {
            "description": "Always `\"Slack\"`\n",
            "x-description": "Tells Splunk Observability Cloud which external system it should use to send the\nnotification. For a Slack notification, this is always `\"Slack\"`.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false,
            "example": "Slack"
          },
          "channel": {
            "description": "Target channel for the notification. Omit leading \"#\".\n",
            "x-description": "The name of the Slack channel in which to display the notification.\nOmit the leading \"#\" symbol. For example, specify\n\"#critical-notifications\" as \"critical-notifications\".\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false,
            "example": "channel-notifications"
          },
          "credentialId": {
            "description": "ID of the Slack integration object\n",
            "x-description": "Slack integration identifier, which Splunk Observability Cloud assigns when you add\nthe integration. Use the UI or the Integrations API to find the\nvalue of `credentialId`.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false
          }
        }
      },
      "TeamEmailNotification": {
        "title": "Team Email Notification",
        "description": "Properties that link a notification to an email sent to a team\n",
        "x-description": "Properties of a notification service that sends an alert message email to\neach member of a team\n",
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "description": "Always `\"TeamEmail\"`\n",
            "x-description": "Notification service to use for the notification. For a TeamEmail\nnotification, this is always \"TeamEmail\".\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false,
            "example": "TeamEmail"
          },
          "team": {
            "description": "ID of a team. All members receive the notification email.\n",
            "x-description": "The ID of a team. All the members of this team\nreceive an email containing the notification message. Splunk Observability Cloud uses\nthe email address used to invite the member to the organization.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false
          }
        }
      },
      "TeamNotification": {
        "title": "Team Notification",
        "description": "Properties of a notification sent using a team's notification policy\n",
        "x-description": "Properties of a notification service that sends an alert message to\neach member of a team, using the team's notification policy\n",
        "type": "object",
        "required": [
          "type",
          "team"
        ],
        "properties": {
          "type": {
            "description": "Always `\"Team\"`\n",
            "x-description": "Tells Splunk Observability Cloud which notification service to use to send the alert message.\nFor the team notification service, this is always \"Team\".\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false,
            "example": "Team"
          },
          "team": {
            "description": "Team ID\n",
            "x-description": "The ID of a team. When a rule issues an alert\nmessage, Splunk Observability Cloud sends the message using one of notification services\nconfigured for the team's notification policy.\n\nSplunk Observability Cloud uses the alert severity to determine the notification\nservice to use. The team notification policy can specify a different\nservice for each severity level as well as multiple services per\nlevel.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false,
            "example": "DevOps"
          }
        }
      },
      "VictorOpsNotification": {
        "title": "Splunk On-Call Alert Notification",
        "description": "Properties that link a notification to a Splunk On-Call integration object\n",
        "x-description": "Specifies the properties of a notification service integration between\nSplunk On-Call and Splunk Observability Cloud, in the form of a JSON object\n",
        "type": "object",
        "required": [
          "type",
          "credentialId",
          "routingKey"
        ],
        "properties": {
          "type": {
            "description": "Always `\"VictorOps\"`\n",
            "x-description": "Tells Splunk Observability Cloud which system to use to send the notification. For a\nVictorOps notification, this is always `\"VictorOps\"`.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false,
            "example": "VictorOps"
          },
          "credentialId": {
            "description": "ID of the Splunk On-Call integration object\n",
            "x-description": "Splunk On-Call integration identifier, which Splunk Observability Cloud assigns when you\nadd the integration. Use the UI or the Integrations API to find\nthe value of `credentialId`.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false
          },
          "routingKey": {
            "description": "Routing key used by Splunk On-Call messages\n",
            "x-description": "Indicates the routing key used to determine how to process the \nnotification message. This key specifies where the notification is\nposted and how related alerts are escalated. For more information\nsee the Splunk On-Call knowledge base.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false
          }
        }
      },
      "WebhookNotification": {
        "title": "Webhook URL Alert Notification",
        "description": "Properties that link a notification to a webhook integration\n",
        "x-description": "Specifies the properties of a notification service integration between a\nWebHook URL and Splunk Observability Cloud, in the form of a JSON object\n",
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "description": "Always \"Webhook\"\n",
            "x-description": "Tells Splunk Observability Cloud which system to use to send the notification. For a\nwebhook notification, this is always `\"Webhook\"`.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false,
            "example": "Webhook"
          },
          "credentialId": {
            "description": "ID of the webhook integration object\n",
            "x-description": "Webhook integration identifier, which Splunk Observability Cloud assigns when you add\nthe integration. Use the UI or the Integrations API to find the\nvalue of `credentialId`.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false
          },
          "secret": {
            "description": "Value that identifies which webhook integration to use\n",
            "x-description": "A secret value that identifies the webhook integration to use when \nsending notifications. This value also indicates that the \nnotification has permission to use the integration.  If\n`credentialId` is set, this property is ignored.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false
          },
          "url": {
            "description": "Webhook target URL. If `credentialId` is set, this is ignored.\n",
            "x-description": "The URL of a webhook integration. You can use the Handlebars syntax for this URL. You must provide the mechanism for\nprocessing notifications sent to the URL and routing them to the\nproper chat or incident management system. If `credentialId` is set,\nthis property is ignored.\n",
            "type": "string",
            "example": "https://example.com/alarm/{{incidentId}}?status={{status}}",
            "readOnly": false,
            "writeOnly": false
          }
        }
      },
      "XMattersNotification": {
        "title": "xMatters Alert Notification",
        "description": "Properties that link a notification to an xMatters integration object\n",
        "x-description": "Specifies the properties of a notification service integration between\nxMatters and Splunk Observability Cloud, in the form of a JSON object\n",
        "type": "object",
        "required": [
          "type",
          "credentialId"
        ],
        "properties": {
          "type": {
            "description": "Always \"XMatters\" (capital X)\n",
            "x-description": "Tells Splunk Observability Cloud which external system it should use to send the\nnotification. For an xMatters notification, this is always\n`\"XMatters\"` (with a capital \"X\").\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false,
            "example": "XMatters"
          },
          "credentialId": {
            "description": "ID of the xMatters integration object\n",
            "x-description": "xMatters integration identifier, which Splunk Observability Cloud assigns when you add\nthe integration. Use the UI or the Integrations API to find the\nvalue of `credentialId`.\n",
            "type": "string",
            "readOnly": false,
            "writeOnly": false
          }
        }
      },
      "CreateDetectorRequest": {
        "title": "Properties for creating a detector",
        "description": "Create Detector request body\n",
        "x-description": "Properties to use in creating a new detector using the API\n",
        "type": "object",
        "required": [
          "name",
          "programText",
          "rules"
        ],
        "properties": {
          "authorizedWriters": {
            "$ref": "#/components/schemas/AuthorizedWriters"
          },
          "customProperties": {
            "title": "Custom properties",
            "description": "Detector metadata\n",
            "x-description": "User metadata, in the form of properties in a JSON object. The name\nand value of each property are strings.\n",
            "type": "object",
            "additionalProperties": true,
            "example": [
              {
                "systemId": "dev",
                "machineName": "dev1"
              },
              {
                "centerId": "oregon",
                "centerName": "oregonDev"
              }
            ]
          },
          "description": {
            "title": "Detector description",
            "description": "Detector description\n",
            "x-description": "Detailed description of the detector. Splunk Observability Cloud displays the value in\nthe **Detector** pane accessed from the **Actions** menu in the web\nUI.\n",
            "type": "string",
            "default": "",
            "example": "JVM CPU Load detector. Monitors the CPU Load for the JVM, and reports overages.\n"
          },
          "detectorOrigin": {
            "$ref": "#/components/schemas/DetectorOrigin"
          },
          "maxDelay": {
            "$ref": "#/components/schemas/MaxDelay"
          },
          "minDelay": {
            "$ref": "#/components/schemas/MinDelay"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "packageSpecifications": {
            "$ref": "#/components/schemas/PackageSpecifications"
          },
          "parentDetectorId": {
            "$ref": "#/components/schemas/ParentDetectorId"
          },
          "programText": {
            "$ref": "#/components/schemas/ProgramText"
          },
          "rules": {
            "$ref": "#/components/schemas/Rules"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          },
          "teams": {
            "$ref": "#/components/schemas/Teams"
          },
          "timezone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "visualizationOptions": {
            "$ref": "#/components/schemas/VisualizationOptions"
          }
        }
      },
      "CreateDetectorResponse": {
        "title": "Create Detector Response Body",
        "description": "Create Detector response body\n",
        "x-description": "Response body returned when the Create Detector operation  (POST `/detector`)\nsuccessfully creates a detector.\n\nNote: The Validate Detector Definition operation\n(POST `/validate`) doesn't return this response body.\n",
        "type": "object",
        "properties": {
          "created": {
            "$ref": "#/components/schemas/Created"
          },
          "creator": {
            "$ref": "#/components/schemas/Creator"
          },
          "customProperties": {
            "$ref": "#/components/schemas/CustomProperties"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "detectorOrigin": {
            "$ref": "#/components/schemas/DetectorOrigin"
          },
          "id": {
            "$ref": "#/components/schemas/Id"
          },
          "labelResolutions": {
            "$ref": "#/components/schemas/LabelResolutions"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/LastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/LastUpdatedBy"
          },
          "locked": {
            "$ref": "#/components/schemas/Locked"
          },
          "maxDelay": {
            "$ref": "#/components/schemas/MaxDelay"
          },
          "minDelay": {
            "$ref": "#/components/schemas/MinDelay"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "overMTSLimit": {
            "$ref": "#/components/schemas/OverMTSLimit"
          },
          "packageSpecifications": {
            "$ref": "#/components/schemas/PackageSpecifications"
          },
          "parentDetectorId": {
            "$ref": "#/components/schemas/ParentDetectorId"
          },
          "programText": {
            "$ref": "#/components/schemas/ProgramText"
          },
          "rules": {
            "$ref": "#/components/schemas/Rules"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          },
          "teams": {
            "$ref": "#/components/schemas/Teams"
          },
          "timezone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "visualizationOptions": {
            "$ref": "#/components/schemas/VisualizationOptions"
          }
        }
      },
      "DetectorEvent": {
        "title": "Single event for a detector",
        "description": "Properties of a single event\n",
        "x-description": "Properties of a single event for a detector, in the form of a JSON\nobject\n",
        "type": "object",
        "properties": {
          "anomalyState": {
            "$ref": "#/components/schemas/AnomalyState"
          },
          "detectLabel": {
            "$ref": "#/components/schemas/DetectLabel"
          },
          "detectorId": {
            "$ref": "#/components/schemas/Id"
          },
          "detectorName": {
            "$ref": "#/components/schemas/Name"
          },
          "event_annotations": {
            "description": "Reserved for internal use\n",
            "x-description": "Reserved for internal use .\n\nThis property is read-only; it's always set by the system.\n",
            "type": "object",
            "readOnly": true
          },
          "id": {
            "$ref": "#/components/schemas/EventId"
          },
          "incidentId": {
            "$ref": "#/components/schemas/IncidentId"
          },
          "inputs": {
            "$ref": "#/components/schemas/DetectorInputs"
          },
          "severity": {
            "$ref": "#/components/schemas/Severity"
          },
          "timestamp": {
            "$ref": "#/components/schemas/EventTime"
          }
        }
      },
      "DetectorProperties": {
        "title": "Detector Properties Object",
        "description": "Detector properties\n",
        "x-description": "Properties of a detector, in the form of a JSON object\n",
        "type": "object",
        "properties": {
          "authorizedWriters": {
            "$ref": "#/components/schemas/AuthorizedWriters"
          },
          "created": {
            "$ref": "#/components/schemas/Created"
          },
          "creator": {
            "$ref": "#/components/schemas/Creator"
          },
          "customProperties": {
            "$ref": "#/components/schemas/CustomProperties"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "detectorOrigin": {
            "$ref": "#/components/schemas/DetectorOrigin"
          },
          "id": {
            "$ref": "#/components/schemas/Id"
          },
          "labelResolutions": {
            "$ref": "#/components/schemas/LabelResolutions"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/LastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/LastUpdatedBy"
          },
          "locked": {
            "$ref": "#/components/schemas/Locked"
          },
          "maxDelay": {
            "$ref": "#/components/schemas/MaxDelay"
          },
          "minDelay": {
            "$ref": "#/components/schemas/MinDelay"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "overMTSLimit": {
            "$ref": "#/components/schemas/OverMTSLimit"
          },
          "parentDetectorId": {
            "$ref": "#/components/schemas/ParentDetectorId"
          },
          "packageSpecifications": {
            "$ref": "#/components/schemas/PackageSpecifications"
          },
          "programText": {
            "$ref": "#/components/schemas/ProgramText"
          },
          "rules": {
            "$ref": "#/components/schemas/Rules"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          },
          "teams": {
            "$ref": "#/components/schemas/Teams"
          },
          "timezone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "visualizationOptions": {
            "$ref": "#/components/schemas/VisualizationOptions"
          }
        }
      },
      "GetDetectorsResponse": {
        "title": "Valid Get Detectors Response",
        "description": "Retrieving detectors by query endpoint response body\n",
        "x-description": "Properties in the response body of a successful retrieval of detectors\n",
        "type": "object",
        "properties": {
          "count": {
            "$ref": "#/components/schemas/Count"
          },
          "results": {
            "description": "List of detectors\n",
            "x-description": "Results of a search for detectors, in the form of a JSON array of objects.\nEach element is a detector object.\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DetectorProperties"
            }
          }
        }
      },
      "GetDetectorResponse": {
        "title": "Properties for a retrieved detector",
        "description": "Properties of an individual detector\n",
        "x-description": "Properties of a detector retrieved by a successful GET `/detector`\nor GET `/detector/{id}`, in the form of a JSON object.\n",
        "type": "object",
        "properties": {
          "created": {
            "$ref": "#/components/schemas/Created"
          },
          "creator": {
            "$ref": "#/components/schemas/Creator"
          },
          "customProperties": {
            "$ref": "#/components/schemas/CustomProperties"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "detectorOrigin": {
            "$ref": "#/components/schemas/DetectorOrigin"
          },
          "id": {
            "$ref": "#/components/schemas/Id"
          },
          "labelResolutions": {
            "$ref": "#/components/schemas/LabelResolutions"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/LastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/LastUpdatedBy"
          },
          "locked": {
            "$ref": "#/components/schemas/Locked"
          },
          "maxDelay": {
            "$ref": "#/components/schemas/MaxDelay"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "overMTSLimit": {
            "$ref": "#/components/schemas/OverMTSLimit"
          },
          "parentDetectorId": {
            "$ref": "#/components/schemas/ParentDetectorId"
          },
          "programText": {
            "$ref": "#/components/schemas/ProgramText"
          },
          "rules": {
            "$ref": "#/components/schemas/Rules"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          },
          "teams": {
            "$ref": "#/components/schemas/Teams"
          },
          "timezone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "visualizationOptions": {
            "$ref": "#/components/schemas/VisualizationOptions"
          }
        }
      },
      "GetDetectorEventsResponse": {
        "title": "Events for a detector",
        "description": "List of event objects\n",
        "x-description": "Result of retrieving events for a detector using\nGET `/detector/{id}/events`, in the form of an array of\nJSON objects containing events.\n",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DetectorEvent"
        }
      },
      "GetDetectorIncidentResponse": {
        "description": "Properties of a single incident\n",
        "x-description": "The properties of a single incident\n",
        "type": "object",
        "properties": {
          "active": {
            "$ref": "#/components/schemas/Active"
          },
          "anomalyState": {
            "$ref": "#/components/schemas/AnomalyState"
          },
          "detectLabel": {
            "$ref": "#/components/schemas/DetectLabel"
          },
          "detectorId": {
            "$ref": "#/components/schemas/Id"
          },
          "events": {
            "description": "List of events for this incident\n",
            "x-description": "Array that contains the event objects for this incident\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentEvent"
            }
          },
          "incidentId": {
            "$ref": "#/components/schemas/IncidentId"
          },
          "severity": {
            "$ref": "#/components/schemas/Severity"
          }
        }
      },
      "GetDetectorIncidentsResponse": {
        "description": "List of incidents returned by the Retrieve Incidents query endpoint\n",
        "x-description": "List of incidents returned by a search, in the form of a JSON array.\nThe `results` property contains a list of incident objects.\n",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/GetDetectorIncidentResponse"
        }
      },
      "UpdateDetectorRequest": {
        "title": "Update Detector Request Body",
        "description": "Properties you can overwrite in an Update Detector request\n",
        "x-description": "Overwritable properties you can include in a request to update a detector\n",
        "type": "object",
        "properties": {
          "authorizedWriters": {
            "$ref": "#/components/schemas/AuthorizedWriters"
          },
          "customProperties": {
            "$ref": "#/components/schemas/CustomProperties"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "detectorOrigin": {
            "$ref": "#/components/schemas/DetectorOrigin"
          },
          "maxDelay": {
            "$ref": "#/components/schemas/MaxDelay"
          },
          "minDelay": {
            "$ref": "#/components/schemas/MinDelay"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "packageSpecifications": {
            "$ref": "#/components/schemas/PackageSpecifications"
          },
          "parentDetectorId": {
            "$ref": "#/components/schemas/ParentDetectorId"
          },
          "programText": {
            "$ref": "#/components/schemas/ProgramText"
          },
          "rules": {
            "$ref": "#/components/schemas/Rules"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          },
          "teams": {
            "$ref": "#/components/schemas/Teams"
          },
          "timezone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "visualizationOptions": {
            "$ref": "#/components/schemas/VisualizationOptions"
          }
        }
      },
      "UpdateDetectorResponse": {
        "title": "Update Detector Response Body",
        "description": "Response body returned by Update Detector\n",
        "x-description": "Response body returned when the Update Single Detector operation\n(PUT `/detector/{id}`) successfully creates a detector.\n\nNote: The Enable Single Detector (PUT `/detector/{id}/enable`)\nand Disable Single Detector (PUT `/detector/{id}/disable`) don't\nreturn this response body.\n",
        "type": "object",
        "properties": {
          "created": {
            "$ref": "#/components/schemas/Created"
          },
          "creator": {
            "$ref": "#/components/schemas/Creator"
          },
          "customProperties": {
            "$ref": "#/components/schemas/CustomProperties"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "detectorOrigin": {
            "$ref": "#/components/schemas/DetectorOrigin"
          },
          "id": {
            "$ref": "#/components/schemas/Id"
          },
          "labelResolutions": {
            "$ref": "#/components/schemas/LabelResolutions"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/LastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/LastUpdatedBy"
          },
          "locked": {
            "$ref": "#/components/schemas/Locked"
          },
          "maxDelay": {
            "$ref": "#/components/schemas/MaxDelay"
          },
          "minDelay": {
            "$ref": "#/components/schemas/MinDelay"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "overMTSLimit": {
            "$ref": "#/components/schemas/OverMTSLimit"
          },
          "parentDetectorId": {
            "$ref": "#/components/schemas/ParentDetectorId"
          },
          "programText": {
            "$ref": "#/components/schemas/ProgramText"
          },
          "rules": {
            "$ref": "#/components/schemas/Rules"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          },
          "teams": {
            "$ref": "#/components/schemas/Teams"
          },
          "timezone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "visualizationOptions": {
            "$ref": "#/components/schemas/VisualizationOptions"
          }
        }
      },
      "ValidateDetectorRequest": {
        "title": "Properties for validating a detector",
        "description": "Properties of the Validate Detector endpoint request body\n",
        "x-description": "Properties you can include in the request body for validating a detector definition\n",
        "type": "object",
        "properties": {
          "customProperties": {
            "$ref": "#/components/schemas/CustomProperties"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "detectorOrigin": {
            "$ref": "#/components/schemas/DetectorOrigin"
          },
          "maxDelay": {
            "$ref": "#/components/schemas/MaxDelay"
          },
          "minDelay": {
            "$ref": "#/components/schemas/MinDelay"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "parentDetectorId": {
            "$ref": "#/components/schemas/ParentDetectorId"
          },
          "programText": {
            "$ref": "#/components/schemas/ProgramText"
          },
          "rules": {
            "$ref": "#/components/schemas/Rules"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          },
          "teams": {
            "$ref": "#/components/schemas/Teams"
          },
          "timezone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "visualizationOptions": {
            "$ref": "#/components/schemas/VisualizationOptions"
          }
        }
      },
      "TagMetadata": {
        "description": "Metadata for a tag\n",
        "x-description": "Metadata for a tag, in the form of a JSON object\n",
        "type": "object",
        "properties": {
          "created": {
            "description": "Tag creation timestamp, in *nix time in milliseconds. Set by system.\n",
            "x-description": "Tag creation timestamp, in *nix time in milliseconds.\n\nThis property is set by the system, and you can't modify it.\n",
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "example": 1554287430000
          },
          "creator": {
            "description": "ID of user who created the tag\n",
            "x-description": "ID of the user who created the tag. This can\nbe one of the following:\n\n* ID of user who created the integration that sent the tag\n* ID of user who sent the tag using the API\n  \nIf the value is `\"AAAAAAAAAAA\"`, Splunk Observability Cloud created the tag.\n",
            "type": "string"
          },
          "customProperties": {
            "description": "Custom properties for the tag\n",
            "x-description": "Custom properties for the tag, in the form of a JSON\nobject. Each property in the object is a custom property\nkey-value pair. The section [Custom Properties Criteria](/docs/datamodel/metrics_metadata#Custom-properties-criteria)\nlists the requirements for custom property keys and values.\n",
            "type": "object",
            "maxProperties": 50,
            "example": {
              "name": "region",
              "value": "emea"
            }
          },
          "description": {
            "description": "Tag description\n",
            "x-description": "Tag description, up to 1024 UTF-8 characters.\n",
            "type": "string",
            "minLength": 0,
            "maxLength": 1024,
            "format": "UTF-8"
          },
          "lastUpdated": {
            "description": "Tag last updated timestamp, in *nix time in milliseconds. Set by system.\n",
            "x-description": "Tag last updated timestamp, in *nix time in milliseconds.\n",
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "example": 1555497030000
          },
          "lastUpdatedBy": {
            "description": "ID of user who last updated the tag\n",
            "x-description": "ID of the user who last updated the tag by\nmodifying its metadata. If the value is `\"AAAAAAAAAAA\"`, Splunk Observability Cloud\nlast modified the tag.\n",
            "type": "string"
          },
          "name": {
            "description": "Tag name\n",
            "x-description": "Tag value, in UTF-8. The section [Tags Criteria](/docs/datamodel/metrics_metadata#Tags-criteria)\nlists the requirements for tags.\n",
            "type": "string",
            "maxLength": 256,
            "format": "UTF-8"
          }
        }
      },
      "TagQueryResponse": {
        "description": "Tag retrieval response body\n",
        "x-description": "GET `/tag` response body\n",
        "type": "object",
        "properties": {
          "count": {
            "description": "Number of results in the result set\n",
            "x-description": "Number of metadata objects that matched the specified search criteria. \nThis isn't  the same as `sizeOf(results)`, because the `limit` and\n`offset` query parameters affect the number of objects the API\nreturns in the response body.\n",
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "description": "List of results returned by the API\n",
            "x-description": "Tag metadata for tags that matched the search criteria, in the\nform of an array of JSON objects.\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagMetadata"
            }
          }
        }
      },
      "TagCreateUpdateResponse": {
        "description": "Tag create/update response body\n",
        "x-description": "PUT `/tag` response body\n",
        "type": "object",
        "properties": {
          "created": {
            "description": "Tag creation timestamp, in *nix time in milliseconds. Set by system.\n",
            "x-description": "Tag creation timestamp, in *nix time in milliseconds.\n\nThis property is set by the system, and you can't modify it.\n",
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "example": 1554287430000
          },
          "creator": {
            "description": "ID of user who created the tag\n",
            "x-description": "ID of the user who created or updated the tag.\nIf the value is `\"AAAAAAAAAAA\"`, Splunk Observability Cloud created or updated the tag.\n",
            "type": "string"
          },
          "customProperties": {
            "description": "Custom properties created for or added to the tag\n",
            "x-description": "Custom properties created for or added to the tag, in the \nform of a JSON object. Each property is a custom property name\nand value. \nThe section \n[Custom Properties Criteria](/docs/datamodel/metrics_metadata#Custom-properties-criteria)\n        lists the requirements for custom property names and values.\n",
            "type": "object",
            "additionalProperties": true,
            "maxItems": 50
          },
          "description": {
            "description": "Tag description\n",
            "x-description": "Tag description\n",
            "type": "string"
          },
          "lastUpdated": {
            "description": "Tag last updated timestamp, in *nix time in milliseconds. Set by system.\n",
            "x-description": "Tag last updated timestamp, in *nix time in milliseconds. If this is a\nnew tag, `lastUpdated == created`.\n",
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "example": 1555497030000
          },
          "lastUpdatedBy": {
            "description": "ID of the user who last updated the tag\n",
            "x-description": "ID of the user who last updated the tag. If the\nvalue is `\"AAAAAAAAAAA\"`, Splunk Observability Cloud last updated the metric.\n"
          },
          "name": {
            "description": "Tag name\n",
            "x-description": "Tag name\n",
            "type": "string"
          }
        }
      },
      "MTSMetadata": {
        "description": "MTS metadata\n",
        "x-description": "Metadata for an MTS\n",
        "type": "object",
        "properties": {
          "created": {
            "description": "MTS creation timestamp, in *nix time in milliseconds. Set by system.\n",
            "x-description": "MTS creation timestamp, in *nix time in milliseconds.\n",
            "type": "integer",
            "format": "int64",
            "example": 1557743430000
          },
          "creator": {
            "description": "ID of user who created the MTS\n",
            "x-description": "ID of the user who created the MTS. This can\nbe one of the following:\n\n* ID of user who created the integration that sent the MTS\n* ID of user who sent the MTS using the API\n  \nIf the value is `\"AAAAAAAAAAA\"`, Splunk Observability Cloud created the MTS.\n",
            "type": "string"
          },
          "customProperties": {
            "description": "Custom properties for this MTS\n",
            "x-description": "MTS custom properties, in the form of a JSON object. \nEach object property is a custom property key-value pair.\nThe section [/docs/datamodel/metrics_metadata#Custom-properties-criteria)\nlists the requirements for custom properties.\n",
            "type": "object",
            "additionalProperties": true,
            "maxItems": 50
          },
          "dimensions": {
            "description": "Dimensions for this MTS\n",
            "x-description": "MTS dimensions, in the form of a JSON object. Each object property \nis a dimension key-value pair.\nThe section [Dimension Criteria](/docs/datamodel/metrics_metadata#Dimension-criteria)\nlists the requirements for dimensions.\n",
            "type": "object",
            "maxItems": 50,
            "additionalProperties": true
          },
          "lastUpdated": {
            "description": "MTS last updated timestamp, in *nix time in milliseconds. Set by system.\n",
            "x-description": "MTS last updated timestamp, in *nix time in milliseconds.\n",
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "example": 1557916230000
          },
          "lastUpdatedBy": {
            "description": "ID of user who last updated the MTS\n",
            "x-description": "ID of the user who last updated the MTS by\nmodifying its metadata. If the value is `\"AAAAAAAAAAA\"`, Splunk Observability Cloud\nlast modified the metric.\n",
            "type": "string"
          },
          "metric": {
            "description": "Metric name\n",
            "x-description": "MTS metric name. Metric names are UTF-8 strings with a maximum\nlength of 256 characters (1024 bytes).\n",
            "type": "string",
            "maxLength": 256
          },
          "tags": {
            "description": "List of tags\n",
            "x-description": "MTS tags, in the form of a JSON array of strings.\n\nEach tag is in UTF-8, starting with an uppercase or lowercase\nalphabetic character. The maximum length is expressed in characters;\nif a string consists solely of single-byte UTF-8 entities, 1024\ncharacters are available.\n",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 256
            },
            "maxItems": 50
          },
          "type": {
            "description": "Metric type\n",
            "x-description": "Metric type of the MTS. The possible values are \n`\"GAUGE\"`, `\"COUNTER\"`, `\"CUMULATIVE_COUNTER\"`, and `\"HISTOGRAM\"`. To learn more, refer to the\n[Metric types](https://docs.splunk.com/Observability/metrics-and-metadata/metric-types.html#nav-Metric-types) section in the user documentation.\n",
            "type": "string",
            "enum": [
              "GAUGE",
              "COUNTER",
              "CUMULATIVE_COUNTER",
              "HISTOGRAM"
            ]
          }
        }
      },
      "MTSQueryResponse": {
        "description": "MTS retrieval response body\n",
        "x-description": "GET `/metrictimeseries` response body\n",
        "type": "object",
        "properties": {
          "results": {
            "description": "List of results\n",
            "x-description": "List of metadata for retrieved MTS, in the form of a JSON array.\nEach element contains metadata for a single MTS.\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MTSMetadata"
            }
          },
          "count": {
            "description": "Number of results in the result set\n",
            "x-description": "Number of metadata objects that matched the search criteria. This isn't the same as the size of `results`, because the `limit` query parameter affects the number of objects in the response body. `count` cannot exceed 10,000.\n",
            "type": "integer",
            "format": "int64"
          },
          "isPartialCount": {
            "description": "Indicates whether `count` is complete\n",
            "x-description": "If `isPartialCount` is `true`, the number of results exceeded 10,000, so there's more results than the amount indicated by the `count` field. If `false`, `count` represents the exact number of results.\n",
            "type": "boolean"
          }
        }
      },
      "DimensionMetadata": {
        "description": "Metadata for a single dimension\n",
        "x-description": "Metadata for a single dimension, in the form of a JSON object\n",
        "type": "object",
        "properties": {
          "creator": {
            "description": "ID of the user who created the dimension\n",
            "x-description": "ID of the user who created the dimension. This can\nbe one of the following:\n\n* ID of user who created the integration that sent the dimension\n* ID of user who sent the dimension using the API\n* ID of user who added the dimension using the UI\n  \nIf the value is `\"AAAAAAAAAAA\"`, Splunk Observability Cloud created the dimension.\n",
            "type": "string"
          },
          "created": {
            "description": "Dimension creation timestamp, in *nix time in milliseconds. Set by system.\n",
            "x-description": "Dimension creation timestamp, in *nix time in milliseconds.\n\nThis property is set by the system, and you can't modify it.\n",
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "example": 1555065030000
          },
          "customProperties": {
            "description": "Dimension custom properties\n",
            "x-description": "Dimension custom properties, in the form of a JSON\nobject containing custom property key-value pairs.\nNames and values have these requirements:\n\nName:\n\n* UTF-8 string, maximum length of 128 characters (512 bytes)\n* Must start with an uppercase or lowercase letter. The rest of\n  the name can contain letters, numbers, underscores (`_`) and\n  hyphens (`-`).\n* Must not start with the underscore character (`_`)\n\nValue:\n\n* String: Maximum length 256 UTF-8 characters (1024 bytes)\n* Integer or float: Maximum length 8192 bits (1024 bytes)\n",
            "type": "object",
            "additionalProperties": true,
            "maxItems": 50
          },
          "description": {
            "description": "Description of the dimension\n",
            "x-description": "Dimension description, up to 1024 UTF-8 characters\n",
            "type": "string",
            "minLength": 0,
            "maxLength": 1024,
            "format": "UTF-8"
          },
          "key": {
            "description": "Dimension name\n",
            "x-description": "Dimension name. It has these requirements:\n\n  * UTF-8 string, maximum length of 128 characters (512 bytes)\n  * Must start with an uppercase or lowercase letter. The rest of\n    the name can contain letters, numbers, underscores (`_`) and\n    hyphens (`-`), but cannot be blank\n  * Must not start with the underscore character (`_`)\n  * Must not start with the prefix `sf_`, except for dimensions\n    defined by Splunk Observability Cloud such as `sf_hires`\n",
            "type": "string",
            "maxLength": 128
          },
          "lastUpdated": {
            "description": "Dimension last updated timestamp, in *nix time in milliseconds. Set by system.\n",
            "x-description": "Last updated timestamp, in *nix time in milliseconds.\n",
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "example": 1555237830000
          },
          "lastUpdatedBy": {
            "description": "ID of user who last updated the dimension\n",
            "x-description": "ID of the user who last updated the dimension by\nmodifying its metadata. If the value is `\"AAAAAAAAAAA\"`, Splunk Observability Cloud\nlast modified the dimension.\n",
            "type": "string"
          },
          "tags": {
            "description": "List of tags for the dimension\n",
            "x-description": "Tags for the dimension, in the form of a JSON array of tag names\n\nEach tag is a UTF-8 string, starting with an uppercase or lowercase\nalphabetic character. The maximum length is expressed in characters;\nif a string consists solely of single-byte UTF-8 entities, 1024\ncharacters are available.\n\nNote: You can't have more than 50 tags per MTS, so you can't\nhave more than 50 tags total for all of the dimensions associated\nwith the MTS.\n",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 256
            },
            "maxItems": 50
          },
          "value": {
            "description": "Value of the dimension\n",
            "x-description": "Dimension value. It has these requirements:\n\n  * String: Maximum length 256 UTF-8 characters (1024 bytes)\n  * Integer or float: Maximum length 8192 bits (1024 bytes)\n",
            "type": "string",
            "maxLength": 256
          }
        }
      },
      "DimensionQueryResponse": {
        "description": "Retrieve dimension response body\n",
        "x-description": "Response body for GET `/v2/dimension`\n",
        "type": "object",
        "properties": {
          "count": {
            "description": "Number of results in the result set\n",
            "x-description": "Number of metadata objects that matched the search criteria. This \nisn't the same as `sizeOf(results)`, because the `limit` and\n`offset` query parameters affect the number of objects \nin the response body.\n",
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "description": "List of returned results\n",
            "x-description": "List of dimension metadata objects, in the form of an array of JSON \nobjects. Each object contains metadata for a dimension that matched \nthe query.\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DimensionMetadata"
            }
          }
        }
      },
      "DimensionUpdateRequest": {
        "description": "Update dimension request body\n",
        "x-description": "PUT `/dimension/{key}/{value}` request body.\n",
        "type": "object",
        "properties": {
          "customProperties": {
            "description": "Custom property updates\n",
            "x-description": "Custom property updates. Because PUT `/dimension/{key}/{value}`\nhas overwrite semantics, you need to include existing custom properties\nwhen you update; otherwise, they're deleted.\n\n  * To change the value of a custom property, use\n    `\"<property_name>\": \"<new_value>\"`.\n  * To add a custom property, use\n    `\"<new_property_name>\": \"<value>\"`\n",
            "type": "object",
            "additionalProperties": true
          },
          "description": {
            "description": "Updated description of the dimension\n",
            "x-description": "Updated dimension description\n",
            "type": "string",
            "minLength": 0,
            "maxLength": 1024,
            "format": "UTF-8"
          },
          "key": {
            "description": "Name of dimension for which you want to update metadata\n",
            "x-description": "Dimension name for which you want to update metadata\n",
            "type": "string",
            "maxLength": 128
          },
          "value": {
            "description": "Value of dimension for which you want to update metadata\n",
            "x-description": "Dimension value for which you want to update metadata\n",
            "maxLength": 256
          },
          "tags": {
            "description": "List of tags you want to add\n",
            "x-description": "List of tags you want to add, in the form of\na JSON array. Because PUT `/dimension/{key}/{value}`\nhas overwrite semantics, you need to include existing tags\nwhen you update tags or  custom properties; otherwise, they're\ndeleted.\n",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 256
            },
            "maxItems": 50
          }
        }
      },
      "DimensionUpdateResponse": {
        "description": "Dimension update response body\n",
        "x-description": "Response body for PUT `/dimension/{key}/{value}`\n",
        "type": "object",
        "properties": {
          "key": {
            "description": "Name of the updated dimension\n",
            "x-description": "Name of the updated dimension\n",
            "type": "string",
            "maxLength": 128
          },
          "value": {
            "description": "Value of the updated dimension\n",
            "x-description": "Value of the updated dimension\n",
            "maxLength": 256
          },
          "description": {
            "description": "Description of the dimension\n",
            "x-description": "Dimension description, up to 1024 UTF-8 characters\n",
            "type": "string",
            "minLength": 0,
            "maxLength": 1024,
            "format": "UTF-8"
          },
          "customProperties": {
            "description": "The dimension's custom properties\n",
            "x-description": "Custom properties for the dimension, in the form \nof a JSON object containing custom property key-value pairs\n",
            "type": "object",
            "additionalProperties": true,
            "maxItems": 50
          },
          "tags": {
            "description": "List of tags for the dimension\n",
            "x-description": "List of tags for the dimension, in the form of a\nJSON array of strings\n",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 256
            },
            "maxItems": 50
          },
          "creator": {
            "description": "ID of the user who created the dimension\n",
            "x-description": "ID of the user who created the dimension. This can\nbe one of the following:\n\n* ID of user who created the integration that sent the dimension\n* ID of user who sent the dimension using the API\n* ID of user who added the dimension using the UI\n  \nIf the value is `\"AAAAAAAAAAA\"`, Splunk Observability Cloud created the dimension.\n",
            "type": "string"
          },
          "created": {
            "description": "Dimension creation timestamp, in *nix time in milliseconds. Set by system.\n",
            "x-description": "Dimension creation timestamp, in *nix time in milliseconds.\n\nThis property is set by the system, and you can't modify it.\n",
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "example": 1557484230100
          },
          "lastUpdatedBy": {
            "description": "ID of the user who last updated the dimension\n",
            "x-description": "ID of the user who last updated the dimension.\nIf the value is `\"AAAAAAAAAAA\"`, Splunk Observability Cloud last modified the metric.\n",
            "type": "string"
          },
          "lastUpdated": {
            "description": "Last updated timestamp, in *nix time in milliseconds. Set by system.\n",
            "x-description": "Last updated timestamp, in *nix time in milliseconds.\n",
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "example": 1557570630000
          }
        }
      },
      "MetricsMetadata": {
        "description": "Metadata for a single metric\n",
        "x-description": "Metadata for a single metric name\n",
        "type": "object",
        "properties": {
          "name": {
            "description": "Metric name\n",
            "x-description": "Name of the metric\n",
            "type": "string"
          },
          "description": {
            "description": "Metric description\n",
            "x-description": "Description of the metric\n",
            "type": "string",
            "minLength": 0,
            "maxLength": 1024,
            "format": "UTF-8"
          },
          "type": {
            "description": "Metric type\n",
            "x-description": "Metric type of the metric. Possible values are `\"GAUGE\"`, `\"COUNTER\"`, `\"CUMULATIVE_COUNTER\"`, and `\"HISTOGRAM\"`. To learn more, refer to the\n[Metric types](https://docs.splunk.com/Observability/metrics-and-metadata/metric-types.html#nav-Metric-types) section in the user documentation.\n",
            "type": "string",
            "enum": [
              "GAUGE",
              "COUNTER",
              "CUMULATIVE_COUNTER",
              "HISTOGRAM"
            ]
          },
          "customProperties": {
            "description": "Metric custom properties\n",
            "x-description": "Custom properties retrieved for the metric, in the form of a JSON\nobject. Each property is a key-value pair.\n",
            "type": "object",
            "additionalProperties": true,
            "maxItems": 50
          },
          "tags": {
            "description": "List of tags for the metric\n",
            "x-description": "List of tags associated with the metric, in the form\nof a JSON array of strings.\n",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 256
            },
            "maxItems": 50
          },
          "created": {
            "description": "Metric creation timestamp, in *nix time in milliseconds. Set by system.\n",
            "x-description": "Metric creation timestamp, in *nix time in milliseconds\n\nThis property is set by the system, and you can't modify it.\n",
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "example": 1556055030000
          },
          "creator": {
            "description": "ID of the user who created the metric\n",
            "x-description": "ID of the user who created the metric. This can\nbe one of the following:\n\n* ID of user who created the integration that sent the metric\n* ID of user who sent the metric using the API\n  \nIf the value is `\"AAAAAAAAAAA\"`, Splunk Observability Cloud created the metric.\n",
            "type": "string"
          },
          "lastUpdated": {
            "description": "Metric last updated timestamp, in *nix time in milliseconds. Set by system.\n",
            "x-description": "Last updated timestamp for the metric, in Unix time\n",
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "example": 1556141430000
          },
          "lastUpdatedBy": {
            "description": "ID of the user who last updated the metric\n",
            "x-description": "ID of the user who last updated the metric by\nmodifying its metadata. If the value is `\"AAAAAAAAAAA\"`, Splunk Observability Cloud\nlast modified the metric.\n",
            "type": "string"
          }
        }
      },
      "MetricsQueryResponse": {
        "description": "Retrieve metric response body\n",
        "x-description": "Results of calling the operation GET `/v2/metric` to retrieve\nall of the metadata for metrics that match search criteria, in the form\nof a JSON object.\n",
        "type": "object",
        "properties": {
          "result": {
            "description": "List of results\n",
            "x-description": "List of results, in the form of a JSON array of metadata\nobjects\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricsMetadata"
            }
          },
          "count": {
            "description": "Number of results in the result set\n",
            "x-description": "Number of metadata objects that matched the specified metrics name. \nThis isn't  the same as `sizeOf(results)`, because the `limit` and\n`offset` query parameters affect the number of objects the API\nreturns in the response body.\n",
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CustomEventResponseObject": {
        "description": "Single custom event\n",
        "x-description": "Specifies a single custom event\n",
        "type": "object",
        "required": [
          "eventType"
        ],
        "properties": {
          "category": {
            "description": "Event category\n",
            "x-description": "A category that describes the custom event, in the\nform of one of the allowed enumerated types:\n\n  * USER_DEFINED: The default for custom events\n  * ALERT: Used by Splunk Observability Cloud to mark an event generated by\n    a detector.\n  * AUDIT: Used by third-party integrations\n  * JOB: Event generated by an Splunk Observability Cloud or third-party\n    background job\n  * COLLECTD: Generated by the Splunk Observability Cloud CollectD integration\n  * SERVICE_DISCOVERY: Generated by third-party integrations\n  * EXCEPTION: A software exception occurred\n",
            "type": "string",
            "enum": [
              "USER_DEFINED",
              "ALERT",
              "AUDIT",
              "JOB",
              "COLLECTED",
              "SERVICE_DISCOVERY",
              "EXCEPTION"
            ]
          },
          "eventType": {
            "description": "Custom event name\n",
            "x-description": "A name for the custom event. Use this name to find the\nevent in other API calls or in the UI.\n",
            "type": "string"
          },
          "dimensions": {
            "description": "Dimensions to associate with the event\n",
            "x-description": "A list of key-value pairs that specify dimension names\nand values to associate with the event. Splunk Observability Cloud assumes\nthat each value of `eventType` you send is associated with\na specific set of dimension names and values.\n",
            "type": "object"
          },
          "properties": {
            "description": "Custom event properties\n",
            "x-description": "A list of key-value pairs that specify properties of the\nspecified event.\n",
            "type": "object"
          },
          "timestamp": {
            "description": "Event timestamp, in *nix time in milliseconds. Set by system.\n",
            "x-description": "The date and time of the event in *nix time in milliseconds\n",
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "example": 1554672630000
          }
        }
      },
      "EventResponseObject": {
        "description": "Single event\n",
        "x-description": "Specifies a single event\n",
        "type": "object",
        "properties": {
          "id": {
            "description": "ID of the event\n",
            "x-description": "ID of the event, assigned by Splunk Observability Cloud\n",
            "type": "string",
            "example": "AddBYZrEFEF"
          },
          "metadata": {
            "description": "Event time series metadata\n",
            "x-description": "A map of key-value pairs created by Splunk Observability Cloud from\nevent time series metadata for the ETS that the event belongs to.\nFor example, alerts received from AWS contain metadata that describes\nthe AWS instance that sent the alert.\n",
            "type": "object",
            "additionalProperties": true,
            "example": {
              "ETS_key1": "detector",
              "ETS_key2": false,
              "ETS_key3": 1001
            }
          },
          "properties": {
            "description": "Event properties\n",
            "x-description": "A map of key-value pairs. The map can contain data sent to\nSplunk Observability Cloud in a POST `v2/event` request. It can also contain\ndata added to the event from other sources.\n",
            "type": "object",
            "additionalProperties": true,
            "example": {
              "is": "ok",
              "sf_notificationWasSent": true,
              "was": "anomalous"
            }
          },
          "sf_eventCategory": {
            "description": "Event category\n",
            "x-description": "A category that describes the event. The values are a set of enumerated types.\nSplunk Observability Cloud sets some values, while you can set others:\n\n  * USER_DEFINED: The default for events\n  * ALERT: Used by Splunk Observability Cloud to mark an event generated by\n    a detector.\n  * AUDIT: Used by third-party integrations\n  * JOB: Event generated by an Splunk Observability Cloud or third-party\n    background job\n  * COLLECTD: Generated by the Splunk Observability Cloud `collectd` integration\n  * SERVICE_DISCOVERY: Generated by third-party integrations\n  * EXCEPTION: A software exception occurred\n",
            "type": "string",
            "enum": [
              "USER_DEFINED",
              "ALERT",
              "AUDIT",
              "JOB",
              "COLLECTED",
              "SERVICE_DISCOVERY",
              "EXCEPTION"
            ]
          },
          "sf_eventCreatedOnMs": {
            "description": "Timestamp indicating when the alert was created, in *nix time in milliseconds\n",
            "x-description": "The date and time when the alert that creates the event was set, in *nix time in milliseconds.\n",
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "example": 1553678621002
          },
          "sf_eventType": {
            "description": "Event name\n",
            "x-description": "A name for the event. You can specify this value when you send a\ncustom event to Splunk Observability Cloud. Use it to uniquely identify\ncustom events.\n\nFor an event time series, this value is the analog of the metric\nname in a metric time series.\n",
            "type": "string"
          },
          "timestamp": {
            "description": "Event timestamp, in *nix time in milliseconds. It indicates the date and time when the event happened. It's set by system.\n",
            "x-description": "The date and time of the event in *nix time in milliseconds. It's set by system.\n",
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "example": 1554672630000
          },
          "tsId": {
            "description": "Splunk Observability Cloud-assigned ID of the event time series (ETS) this\nevent belongs to\n",
            "type": "string",
            "example": "XzZYApXCDCD"
          }
        }
      },
      "ListOfIds": {
        "type": "object",
        "description": "List of Test IDs\n",
        "x-description": "List of Test IDs\n",
        "properties": {
          "testIds": {
            "type": "array",
            "example": [
              15,
              123,
              19955
            ],
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "OkResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "PortTestResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "My Port Test"
          },
          "active": {
            "type": "boolean",
            "example": true
          },
          "automaticRetries": {
            "type": "integer",
            "example": 1
          },
          "frequency": {
            "$ref": "#/components/schemas/Frequency"
          },
          "schedulingStrategy": {
            "$ref": "#/components/schemas/SchedulingStrategy"
          },
          "createdAt": {
            "$ref": "#/components/schemas/CreatedAt"
          },
          "createdBy": {
            "$ref": "#/components/schemas/CreatedBy"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/UpdatedAt"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/UpdatedBy"
          },
          "locationIds": {
            "$ref": "#/components/schemas/LocationIds"
          },
          "customProperties": {
            "$ref": "#/components/schemas/CustomProperties"
          },
          "lastRunStatus": {
            "$ref": "#/components/schemas/LastRunStatus"
          },
          "lastRunAt": {
            "$ref": "#/components/schemas/LastRunAt"
          },
          "type": {
            "type": "string",
            "example": "http"
          },
          "protocol": {
            "type": "string",
            "example": "tcp"
          },
          "host": {
            "type": "string",
            "example": "splunk.com"
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "example": 443
          }
        }
      },
      "HttpTestResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "My HTTP Test"
          },
          "active": {
            "type": "boolean",
            "example": true
          },
          "automaticRetries": {
            "type": "integer",
            "example": 1
          },
          "frequency": {
            "$ref": "#/components/schemas/Frequency"
          },
          "schedulingStrategy": {
            "$ref": "#/components/schemas/SchedulingStrategy"
          },
          "createdAt": {
            "$ref": "#/components/schemas/CreatedAt"
          },
          "createdBy": {
            "$ref": "#/components/schemas/CreatedBy"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/UpdatedAt"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/UpdatedBy"
          },
          "locationIds": {
            "$ref": "#/components/schemas/LocationIds"
          },
          "customProperties": {
            "$ref": "#/components/schemas/CustomProperties"
          },
          "lastRunStatus": {
            "$ref": "#/components/schemas/LastRunStatus"
          },
          "lastRunAt": {
            "$ref": "#/components/schemas/LastRunAt"
          },
          "type": {
            "type": "string",
            "example": "http"
          },
          "url": {
            "type": "string",
            "example": "https://splunk.com"
          }
        }
      },
      "NotFound": {
        "description": "Not Found",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "not_found"
          },
          "message": {
            "type": "string",
            "example": "Can't find test."
          },
          "details": {
            "type": "object",
            "example": "{}"
          }
        }
      },
      "UnprocessableEntity": {
        "description": "UnprocessableEntity",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "unprocessable_entity"
          },
          "message": {
            "type": "string",
            "example": "Invalid request body"
          },
          "details": {
            "type": "object",
            "properties": {
              "testIds": {
                "type": "object",
                "properties": {
                  "0": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "must be an integer"
                    }
                  },
                  "2": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "must be an integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "PortTestValidateRequest": {
        "description": "Request body to validate Port tests.\n",
        "x-description": "Request body to validate Port tests.\n",
        "type": "object",
        "properties": {
          "test": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Port Test"
              },
              "locationIds": {
                "$ref": "#/components/schemas/LocationIds"
              },
              "customProperties": {
                "$ref": "#/components/schemas/CustomProperties"
              },
              "frequency": {
                "$ref": "#/components/schemas/Frequency"
              },
              "schedulingStrategy": {
                "$ref": "#/components/schemas/SchedulingStrategy"
              },
              "protocol": {
                "type": "string",
                "example": "tcp"
              },
              "host": {
                "type": "string",
                "example": "splunk.com"
              },
              "port": {
                "type": "integer",
                "format": "int32"
              },
              "active": {
                "type": "boolean",
                "example": true
              }
            }
          }
        }
      },
      "HttpTestValidateRequest": {
        "description": "Request body to validate HTTP tests.\n",
        "x-description": "Request body to validate HTTP tests.\n",
        "type": "object",
        "properties": {
          "test": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Uptime Test"
              },
              "frequency": {
                "$ref": "#/components/schemas/Frequency"
              },
              "schedulingStrategy": {
                "$ref": "#/components/schemas/SchedulingStrategy"
              },
              "locationIds": {
                "$ref": "#/components/schemas/LocationIds"
              },
              "customProperties": {
                "$ref": "#/components/schemas/CustomProperties"
              },
              "url": {
                "type": "string",
                "description": "URL to test",
                "example": "https://splunk.com"
              },
              "active": {
                "type": "boolean",
                "example": true
              }
            }
          }
        }
      },
      "VariableRequestBody": {
        "description": "Request body\n",
        "x-description": "The request body sent by the following method/endpoint operations:\n  * `POST /variables`\n",
        "type": "object",
        "properties": {
          "variable": {
            "type": "object",
            "properties": {
              "name": {
                "$ref": "#/components/schemas/VariableName"
              }
            }
          }
        }
      },
      "TestRequestBody": {
        "description": "Request body\n",
        "x-description": "The request body sent by the following method/endpoint operations:\n  * `POST /tests/api`\n  * `PATCH /tests/api/{id}`\n  * `PUT /tests/api/{id}`\n  * `POST /tests/api/validate`\n  * `POST /tests/api/{id}/validate`\n  * `PUT /tests/api/{id}/validate`\n",
        "type": "object",
        "properties": {
          "test": {
            "type": "object",
            "properties": {
              "active": {
                "description": "Describes if the test is active",
                "type": "boolean",
                "default": true,
                "example": true
              },
              "deviceId": {
                "type": "integer",
                "format": "int32",
                "description": "The unique ID of the device",
                "example": 1
              },
              "locationIds": {
                "$ref": "#/components/schemas/LocationIds"
              },
              "customProperties": {
                "$ref": "#/components/schemas/CustomProperties"
              },
              "name": {
                "type": "string",
                "example": "My API Test"
              },
              "frequency": {
                "$ref": "#/components/schemas/Frequency"
              },
              "schedulingStrategy": {
                "$ref": "#/components/schemas/SchedulingStrategy"
              },
              "requests": {
                "$ref": "#/components/schemas/ApiTestRequests"
              }
            }
          }
        }
      },
      "ApiTestRequests": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "configuration": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Get products"
                },
                "requestMethod": {
                  "type": "string",
                  "example": "GET",
                  "description": "HTTP verb method",
                  "x-description": "Must be one of the following:\n* `GET`\n* `POST`\n* `PUT`\n* `PATCH`\n* `DELETE`\n* `HEAD`\n* `OPTIONS`\n"
                },
                "url": {
                  "type": "string",
                  "example": "https://dummyjson.com/products"
                },
                "headers": {
                  "type": "object",
                  "properties": {
                    "Accept": {
                      "type": "string",
                      "example": "application/json"
                    },
                    "x-foo": {
                      "type": "string",
                      "example": "bar"
                    }
                  },
                  "description": "HTTP headers to add to your request"
                },
                "body": {
                  "type": "string",
                  "example": "'{\"alert_name\":\"the service is\ndown\",\"url\":\"https://foo.com/bar\"}'\n"
                }
              }
            },
            "setup": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/ApiTestExtractSetup"
                  },
                  {
                    "$ref": "#/components/schemas/ApiTestJavascript"
                  },
                  {
                    "$ref": "#/components/schemas/ApiTestSave"
                  }
                ]
              }
            },
            "validations": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/ApiTestValidationAssert"
                  },
                  {
                    "$ref": "#/components/schemas/ApiTestValidationExtract"
                  },
                  {
                    "$ref": "#/components/schemas/ApiTestJavascript"
                  },
                  {
                    "$ref": "#/components/schemas/ApiTestSave"
                  }
                ]
              }
            }
          }
        }
      },
      "ApiTestValidationExtract": {
        "type": "object",
        "description": "Validation step to extract values from custom data, response body, or\nexisting variable\n",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/ApiTestValidationName"
          },
          "type": {
            "$ref": "#/components/schemas/ApiTestExtractType"
          },
          "source": {
            "$ref": "#/components/schemas/ApiTestSource"
          },
          "extractor": {
            "$ref": "#/components/schemas/ApiTestExtractor"
          },
          "variable": {
            "$ref": "#/components/schemas/ApiTestVariable"
          }
        }
      },
      "ApiTestValidationAssert": {
        "type": "object",
        "description": "Validation step to assert custom data, response code, or response body.",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/ApiTestValidationName"
          },
          "type": {
            "type": "string",
            "example": "assert_numeric",
            "description": "Type of assertion.",
            "x-description": "Type of assertion. Possible values for this are:\n\n* `assert_string` - When asserting on custom data or response body\n* `assert_numeric` - When asserting on the response code\n"
          },
          "actual": {
            "type": "string",
            "example": "{{response.code}}",
            "description": "The actual value",
            "x-description": "The actual value. If referencing a custom variable, the value of\nthis field is:\n\n* `{{custom.myCustomVariable}}`\n"
          },
          "expected": {
            "type": "string",
            "example": 200,
            "description": "What you expect the variable to be."
          },
          "comparator": {
            "type": "string",
            "example": "equals",
            "description": "Comparator between the actual value and the expected value",
            "x-description": "Comparator between the actual value and the expected value. Must be\none of the following:\n\n* `is_empty`\n\n* `is_not_empty`\n\n* `contains`\n\n* `does_not_contain`\n\n* `equals`\n\n* `does_not_equal`\n\n* `matches`\n\n* `does_not_match`\n"
          }
        }
      },
      "ApiTestSave": {
        "type": "object",
        "description": "Save a custom field or response body to a variable",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/ApiTestSetupName"
          },
          "type": {
            "type": "string",
            "example": "save",
            "description": "Value must be `save`"
          },
          "value": {
            "type": "string",
            "description": "The value of the variable you are saving.",
            "x-description": "The value of the variable you are saving. If you are saving the\nresponse body, the value of this field should be `{{response.body}}`\n",
            "example": "{{response.body}}"
          },
          "variable": {
            "$ref": "#/components/schemas/ApiTestVariable"
          }
        }
      },
      "ApiTestExtractSetup": {
        "type": "object",
        "description": "Setup instructions for extracting data for API Tests",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/ApiTestSetupName"
          },
          "type": {
            "$ref": "#/components/schemas/ApiTestExtractType"
          },
          "source": {
            "$ref": "#/components/schemas/ApiTestSource"
          },
          "extractor": {
            "$ref": "#/components/schemas/ApiTestExtractor"
          },
          "variable": {
            "$ref": "#/components/schemas/ApiTestVariable"
          }
        }
      },
      "ApiTestJavascript": {
        "type": "object",
        "description": "Instructions for custom Javascript code",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/ApiTestSetupName"
          },
          "type": {
            "type": "string",
            "example": "javascript",
            "description": "Value must be `javascript`",
            "x-description": "Value must be `javascript`"
          },
          "code": {
            "type": "string",
            "example": "console.log('hello world')"
          },
          "variable": {
            "$ref": "#/components/schemas/ApiTestVariable"
          }
        }
      },
      "ApiTestExtractType": {
        "type": "string",
        "example": "extract_json",
        "description": "The type of document to extract",
        "x-description": "The type of document to extract. This should be one of the following:\n* `extract_json`\n* `extract_html`\n* `extract_xml`\n"
      },
      "ApiTestExtractor": {
        "type": "string",
        "example": "$.foo",
        "description": "Extracting language. This must be in JSONPath, XMLPath, or HTMLPath"
      },
      "ApiTestSource": {
        "type": "string",
        "example": "{'foo': 'bar'}",
        "description": "Source document to extract fields from"
      },
      "ApiTestSetupName": {
        "description": "Name of your test setup step",
        "type": "string",
        "example": "First setup step"
      },
      "ApiTestValidationName": {
        "description": "Name of your validation step",
        "type": "string",
        "example": "My validation step"
      },
      "ApiTestVariable": {
        "description": "Variable to save your extraction",
        "type": "string",
        "example": "myVariable"
      },
      "PerPage": {
        "description": "Number of results per page\n",
        "x-description": "Number of results per page. If perPage is not supplied, the value of\nthis field will be 50. If it is supplied, then the value will be what\nwas supplied.\n",
        "type": "string",
        "example": 50
      },
      "Frequency": {
        "description": "How often to run your test.",
        "type": "integer",
        "format": "int32",
        "example": 5
      },
      "LocationIds": {
        "type": "array",
        "description": "An array of location IDs where the test runs.",
        "items": {
          "type": "string"
        },
        "example": [
          "aws-us-east-1"
        ]
      },
      "LastRunStatus": {
        "description": "Status of the last test run.",
        "type": "string",
        "example": "success",
        "enum": [
          "pending",
          "success",
          "failed"
        ]
      },
      "LastRunAt": {
        "type": "string",
        "description": "Timestamp of when the test was last run, in UTC.",
        "x-description": "Timestamp of when the test was last run, in UTC.\nThis field is read-only, and the system always sets the value.\n",
        "readOnly": true,
        "example": "2022-09-14T14:36:45.156Z"
      },
      "CreatedAt": {
        "type": "string",
        "description": "Timestamp of when the test was created, in UTC.",
        "x-description": "Timestamp of when the test was last updated, in UTC.\nThis field is read-only, and the system always sets the value.\n",
        "readOnly": true,
        "example": "2022-09-14T14:35:37.801Z"
      },
      "CreatedBy": {
        "type": "string",
        "description": "Member ID of who created the test.",
        "x-description": "Member ID of who created the test.\nThis field is read-only, and the system always sets the value.\n",
        "readOnly": true,
        "example": "abcdefgh1234"
      },
      "UpdatedAt": {
        "type": "string",
        "description": "Timestamp of when the test was last updated, in UTC.",
        "x-description": "Timestamp of when the test was last updated, in UTC.\nThis field is read-only, and the system always sets the value.\n",
        "readOnly": true,
        "example": "2022-09-14T14:35:38.099Z"
      },
      "UpdatedBy": {
        "type": "string",
        "description": "Member ID of who last updated the test.",
        "x-description": "Member ID of who last updated the test.\nThis field is read-only, and the system always sets the value.\n",
        "readOnly": true,
        "example": "abcdefgh1234"
      },
      "SchedulingStrategy": {
        "description": "Type of scheduling strategy.",
        "x-description": "Type of scheduling strategy. This can only be:\n  * `round_robin`\n  * `concurrent`\n",
        "type": "string",
        "example": "round_robin"
      },
      "TotalCount": {
        "description": "Number of test in the result set\n",
        "x-description": "Number of test in the result set that match the search criteria.\n\nNote: Count is not the same as the number of objects returned\nin the response body.\n",
        "type": "integer",
        "format": "int32",
        "example": 1
      },
      "ValidatePortTestResponse": {
        "description": "Response body for validating a Port test.",
        "x-description": "Response body for validating a Port test.\n",
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "Port Test is not valid."
          },
          "details": {
            "type": "object",
            "description": "Details of why a Port test is invalid.",
            "x-description": "Details of why Port test is invalid. The `frequency` key in the example is\ndynamic. If `frequency` is invalid, the key will be `frequency`. If `port`\nis invalid, there will be a `port` key, etc.\n\nIf the test is valid, this `details` field will be an empty array, `[]`.\n",
            "properties": {
              "frequency": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "must be greater than or equal to 1"
                }
              }
            }
          }
        }
      },
      "ValidateHttpTestResponse": {
        "description": "Response body for validating an HTTP test.",
        "x-description": "Response body for validating an HTTP test.\n",
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "HTTP test is not valid"
          },
          "details": {
            "type": "object",
            "description": "Details of why HTTP test is invalid.",
            "x-description": "Details of why HTTP test is invalid. The `url` key in the example is\ndynamic. If `url` is invalid, the key will be `url`. If `frequency`\nis invalid, there will be a `frequency` key.\n\nIf the test is valid, this `details` field will be an empty array.\n",
            "properties": {
              "url": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "must be a valid URL"
                }
              }
            }
          }
        }
      },
      "ValidateApiResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseValidateApiResponse"
          },
          {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ExampleInvalidApiTestConfiguration"
              },
              {
                "$ref": "#/components/schemas/EmptyArray"
              }
            ]
          }
        ]
      },
      "BaseValidateApiResponse": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "API test is not valid."
          }
        }
      },
      "EmptyArray": {
        "description": "Empty array",
        "properties": {
          "requests": {
            "type": "array",
            "example": [],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ExampleInvalidApiTestConfiguration": {
        "description": "Example of an invalid API test configuration.",
        "type": "object",
        "properties": {
          "requests": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "configuration url is missing"
            }
          }
        }
      },
      "GetTestsResponse": {
        "description": "Returns a list of all tests.\n",
        "x-description": "Returns a list of all tests.\n",
        "type": "object",
        "properties": {
          "perPage": {
            "$ref": "#/components/schemas/PerPage"
          },
          "totalCount": {
            "$ref": "#/components/schemas/TotalCount"
          },
          "nextPageLink": {
            "description": "The href to the next page of results.\n",
            "x-description": "The href to the next page of results. If there is not a next page,\nthis will be null.\n",
            "type": "integer",
            "format": "int32"
          },
          "tests": {
            "description": "List of tests.\n",
            "x-description": "Query results, in the form of a JSON array of\nobjects. Each element is a test.\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Test"
            }
          }
        }
      },
      "TestApiResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Test"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "api"
              },
              "device": {
                "$ref": "#/components/schemas/Device"
              },
              "requests": {
                "$ref": "#/components/schemas/ApiTestRequests"
              }
            }
          }
        ]
      },
      "Test": {
        "description": "Properties of a test.",
        "x-description": "Properties of a test.",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The unique ID of the test.",
            "readOnly": true,
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the test.",
            "example": "My Test"
          },
          "active": {
            "type": "boolean",
            "description": "Describes if the test is active.",
            "example": true
          },
          "automaticRetries": {
            "description": "Automatically retry if the run fails",
            "type": "integer",
            "default": 0,
            "example": 1
          },
          "frequency": {
            "$ref": "#/components/schemas/Frequency"
          },
          "schedulingStrategy": {
            "$ref": "#/components/schemas/SchedulingStrategy"
          },
          "createdAt": {
            "$ref": "#/components/schemas/CreatedAt"
          },
          "createdBy": {
            "$ref": "#/components/schemas/CreatedBy"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/UpdatedAt"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/UpdatedBy"
          },
          "locationIds": {
            "$ref": "#/components/schemas/LocationIds"
          },
          "customProperties": {
            "$ref": "#/components/schemas/CustomProperties"
          },
          "lastRunStatus": {
            "$ref": "#/components/schemas/LastRunStatus"
          },
          "lastRunAt": {
            "$ref": "#/components/schemas/LastRunAt"
          },
          "type": {
            "type": "string",
            "example": "browser",
            "description": "Type of test",
            "x-description": "Type of tests, for example:\n\n  * `browser`\n  * `http`\n  * `api`\n  * `port`\n"
          }
        }
      },
      "Variable": {
        "type": "object",
        "title": "Variable",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The unique ID of the variable.",
            "example": 1
          },
          "name": {
            "$ref": "#/components/schemas/VariableName"
          },
          "description": {
            "$ref": "#/components/schemas/VariableDescription"
          },
          "value": {
            "$ref": "#/components/schemas/VariableValue"
          },
          "secret": {
            "$ref": "#/components/schemas/VariableSecret"
          },
          "createdAt": {
            "$ref": "#/components/schemas/CreatedAt"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/UpdatedAt"
          }
        }
      },
      "VariableName": {
        "type": "string",
        "description": "The name of your variable.",
        "example": "foo"
      },
      "VariableValue": {
        "type": "string",
        "description": "The value of your variable.",
        "x-description": "The value of your variable.\nIf this is a concealed variable, the value is\n`<REDACTED>`.\n",
        "example": "bar"
      },
      "VariableDescription": {
        "type": "string",
        "description": "The description of your variable.",
        "example": "My awesome variable"
      },
      "VariableSecret": {
        "type": "boolean",
        "description": "Whether this is a concealed variable.",
        "example": false
      },
      "Device": {
        "type": "object",
        "title": "Device",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The unique ID of the device.",
            "example": 1
          },
          "label": {
            "type": "string",
            "description": "User facing label of the device.",
            "example": "iPhone"
          },
          "viewportWidth": {
            "type": "integer",
            "format": "int32",
            "description": "Viewport width of the device.",
            "example": 375
          },
          "viewportHeight": {
            "type": "integer",
            "format": "int32",
            "description": "Viewport height of the device.",
            "example": 844
          },
          "networkConnection": {
            "$ref": "#/components/schemas/NetworkConnection"
          }
        }
      },
      "NetworkConnection": {
        "type": "object",
        "title": "Network Connection",
        "properties": {
          "description": {
            "type": "string",
            "description": "Type of network connection.",
            "example": "Mobile LTE",
            "nullable": true
          },
          "uploadBandwidth": {
            "type": "integer",
            "format": "int32",
            "description": "Upload limit of the network connection, in Kbps.",
            "example": 12000,
            "nullable": true
          },
          "downloadBandwidth": {
            "type": "integer",
            "format": "int32",
            "description": "Download limit of the network connection, in Kbps.",
            "example": 12000,
            "nullable": true
          },
          "latency": {
            "type": "integer",
            "format": "int32",
            "description": "Latency amount of the network connection, in milliseconds.",
            "example": 70,
            "nullable": true
          },
          "packetLoss": {
            "type": "number",
            "format": "double",
            "description": "Packet loss amount of the network connection.",
            "example": null,
            "nullable": true
          }
        }
      }
    }
  }
}