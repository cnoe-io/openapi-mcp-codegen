
# Copyright 2025 CNOE
# SPDX-License-Identifier: Apache-2.0
# Generated by CNOE OpenAPI MCP Codegen tool

"""Tools for /pet/{petid}/uploadimage operations"""

import logging
from typing import Dict, Any
from mcp_petstore.api.client import make_api_request

# Configure logging
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger("mcp_tools")


async def uploadfile(path_petid: int, param_additionalmetadata: str = None) -> Dict[str, Any]:
    """
    Uploads an image. Upload image of the pet.
    Args:
        path_petid (int): ID of pet to update
        param_additionalmetadata (str): Additional Metadata

    Returns:
        Dict[str, Any]: The JSON response from the API call.

    Raises:
        Exception: If the API request fails or returns an error.
    """
    logger.debug("Making POST request to /pet/{petid}/uploadimage")
    params = {}
    params["additionalmetadata"] = param_additionalmetadata
    data = {}
    if not data:
        data = None
    success, response = await make_api_request(
        f"/pet/{path_petid}/uploadimage",
        method="POST",
        params=params,
        data=data
    )
    if not success:
        logger.error(f"Request failed: {response.get('error')}")
        return {"error": response.get('error', 'Request failed')}
    return response

