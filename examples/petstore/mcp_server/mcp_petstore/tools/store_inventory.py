# Copyright 2025 CNOE
# SPDX-License-Identifier: Apache-2.0
# Generated by CNOE OpenAPI MCP Codegen tool

"""Tools for /store/inventory operations"""

import logging
from typing import Dict, Any
from mcp_petstore.api.client import make_api_request

# Configure logging
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger("mcp_tools")


async def get_inventory() -> Dict[str, Any]:
    '''
    Retrieves the current inventory of pets grouped by their status.

    Args:
        None

    Returns:
        Dict[str, Any]: A dictionary mapping status codes (e.g., "available", "pending", "sold") to their respective quantities.

    Raises:
        Exception: If the API request fails or returns an error.

    OpenAPI Specification:
      get:
        summary: Returns pet inventories by status.
        description: Returns a map of status codes to quantities.
        operationId: getInventory
        tags:
          - store
        responses:
          '200':
            description: Successful operation. Returns a map of status codes to quantities.
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: integer
          '400':
            description: Invalid request.
          '500':
            description: Internal server error.
    '''
    logger.debug("Making GET request to /store/inventory")

    params = {}
    data = {}

    success, response = await make_api_request("/store/inventory", method="GET", params=params, data=data)

    if not success:
        logger.error(f"Request failed: {response.get('error')}")
        return {"error": response.get("error", "Request failed")}
    return response