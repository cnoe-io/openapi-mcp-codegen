
# Copyright 2025 CNOE
# SPDX-License-Identifier: Apache-2.0
# Generated by CNOE OpenAPI MCP Codegen tool

"""Tools for  operations"""

import logging
from typing import Dict, Any, List
from mcp_petstore.api.client import make_api_request

# Configure logging
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger("mcp_tools")


async def findpetsbytags(param_tags: List[str] = None) -> Dict[str, Any]:
    """
    Finds Pets by tags.

    OpenAPI Description:
        Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.

    Args:param_tags (List[str] = None): OpenAPI parameter corresponding to 'param_tags'.

    Returns:
        Dict[str, Any]: The JSON response from the API call.

    Raises:
        Exception: If the API request fails or returns an error.
    """
    logger.debug("Making GET request to ")
    params = {}
    
    if param_tags is not None:
      params["param_tags"] = param_tags
    
    data = None
    

    
    params["tags"] = param_tags
    


    
    data = {}

    

    if not data:
        data = None
    success, response = await make_api_request(
        "/pet/findbytags",
        method="GET",
        params=params,
        data=data
    )
    if not success:
        logger.error(f"Request failed: {response.get('error')}")
        return {"error": response.get('error', 'Request failed')}
    return response

