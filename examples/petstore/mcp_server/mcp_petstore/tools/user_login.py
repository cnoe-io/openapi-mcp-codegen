# Copyright 2025 CNOE
# SPDX-License-Identifier: Apache-2.0
# Generated by CNOE OpenAPI MCP Codegen tool

"""Tools for /user/login operations"""

import logging
from typing import Dict, Any
from mcp_petstore.api.client import make_api_request

# Configure logging
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger("mcp_tools")


async def login_user(param_username: str = None, param_password: str = None) -> Dict[str, Any]:
    """
    Logs user into the system.

    OpenAPI Description:
        Log into the system.

    Args:
    param_username (str = None): OpenAPI parameter corresponding to 'param_username'.
    param_password (str = None): OpenAPI parameter corresponding to 'param_password'.


    Returns:
        Dict[str, Any]: The JSON response from the API call.

    Raises:
        Exception: If the API request fails or returns an error.
    """
    logger.debug("Making GET request to /user/login")

    params = {}
    data = {}

    params["username"] = param_username
    params["password"] = param_password

    success, response = await make_api_request("/user/login", method="GET", params=params, data=data)

    if not success:
        logger.error(f"Request failed: {response.get('error')}")
        return {"error": response.get("error", "Request failed")}
    return response
