# Copyright 2025 CNOE
# SPDX-License-Identifier: Apache-2.0
# Generated by CNOE OpenAPI MCP Codegen tool

"""Tools for /store/order operations"""

import logging
from typing import Dict, Any
from mcp_petstore.api.client import make_api_request

# Configure logging
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger("mcp_tools")


async def place_order(
    body_id: int = None,
    body_pet_id: int = None,
    body_quantity: int = None,
    body_ship_date: str = None,
    body_status: str = None,
    body_complete: bool = None,
) -> Dict[str, Any]:
    '''
    Place an order for a pet.

    Args:
        body_id (int, optional): The unique identifier for the order. Defaults to None.
        body_pet_id (int, optional): The unique identifier for the pet being ordered. Defaults to None.
        body_quantity (int, optional): The quantity of the pet to be ordered. Defaults to None.
        body_ship_date (str, optional): The date when the pet should be shipped. Defaults to None.
        body_status (str, optional): The current status of the order. Defaults to None.
        body_complete (bool, optional): Indicates whether the order is complete. Defaults to None.

    Returns:
        Dict[str, Any]: The JSON response from the API call containing order details.

    Raises:
        Exception: If the API request fails or returns an error.
    '''
    logger.debug("Making POST request to /store/order")

    params = {}
    data = {}

    if body_id:
        data["id"] = body_id
    if body_pet_id:
        data["pet_id"] = body_pet_id
    if body_quantity:
        data["quantity"] = body_quantity
    if body_ship_date:
        data["ship_date"] = body_ship_date
    if body_status:
        data["status"] = body_status
    if body_complete:
        data["complete"] = body_complete

    success, response = await make_api_request("/store/order", method="POST", params=params, data=data)

    if not success:
        logger.error(f"Request failed: {response.get('error')}")
        return {"error": response.get("error", "Request failed")}
    return response