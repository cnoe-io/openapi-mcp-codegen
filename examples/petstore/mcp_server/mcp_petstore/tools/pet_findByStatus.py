
# Copyright 2025 CNOE
# SPDX-License-Identifier: Apache-2.0
# Generated by CNOE OpenAPI MCP Codegen tool

"""Tools for /pet/findbystatus operations"""

import logging
from typing import Dict, Any
from mcp_petstore.api.client import make_api_request

# Configure logging
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger("mcp_tools")


async def findpetsbystatus(status: str = None) -> Dict[str, Any]:
    '''
    Finds pets by their status.

    Args:
        status (str, optional): Status value to filter pets by (e.g., 'available', 'pending', 'sold'). Defaults to None.

    Returns:
        Dict[str, Any]: A dictionary containing the list of pets matching the specified status or an error message.

    Raises:
        Exception: If the API request fails or returns an unexpected response.

    OpenAPI Specification:
      get:
        summary: Finds Pets by status
        description: Returns a list of pets filtered by their status.
        operationId: findPetsByStatus
        parameters:
          - name: status
            in: query
            description: Status value to filter pets by (e.g., 'available', 'pending', 'sold')
            required: false
            schema:
              type: string
        responses:
          '200':
            description: A list of pets matching the specified status.
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Pet'
          '400':
            description: Invalid status value supplied.
          '500':
            description: Internal server error.
    '''
    logger.debug("Making GET request to /pet/findbystatus")
    params = {}
    data = None

    success, response = await make_api_request(
        "/pet/findbystatus",
        method="GET",
        params=params,
        data=data
    )
    if not success:
        logger.error(f"Request failed: {response.get('error')}")
        return {"error": response.get('error', 'Request failed')}
    return response
