# Copyright 2025 CNOE
# SPDX-License-Identifier: Apache-2.0
# Generated by CNOE OpenAPI MCP Codegen tool

"""Tools for /pet/findByStatus operations"""

import logging
from typing import Dict, Any
from mcp_petstore.api.client import make_api_request

# Configure logging
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger("mcp_tools")


async def find_pets_by_status(param_status: str = None) -> Dict[str, Any]:
    """
    Finds Pets by status.

    OpenAPI Description:
        Multiple status values can be provided with comma separated strings.

    Args:

        param_status (str): Status values that need to be considered for filter


    Returns:
        Dict[str, Any]: The JSON response from the API call.

    Raises:
        Exception: If the API request fails or returns an error.
    """
    logger.debug("Making GET request to /pet/findByStatus")

    params = {}
    data = {}

    params["status"] = param_status

    success, response = await make_api_request("/pet/findByStatus", method="GET", params=params, data=data)

    if not success:
        logger.error(f"Request failed: {response.get('error')}")
        return {"error": response.get("error", "Request failed")}
    return response
