
# Copyright 2025 CNOE
# SPDX-License-Identifier: Apache-2.0
# Generated by CNOE OpenAPI MCP Codegen tool

#!/usr/bin/env python3
"""
 MCP Server

This server provides a Model Context Protocol (MCP) interface to the ,
allowing large language models and AI assistants to interact with the service.
"""
import logging
from dotenv import load_dotenv
from mcp.server.fastmcp import FastMCP


from mcp_petstore.tools import pet

from mcp_petstore.tools import pet_findbystatus

from mcp_petstore.tools import pet_findbytags

from mcp_petstore.tools import store_inventory

from mcp_petstore.tools import store_order

from mcp_petstore.tools import user

from mcp_petstore.tools import user_createwithlist

from mcp_petstore.tools import user_login

from mcp_petstore.tools import user_logout


load_dotenv()
logging.basicConfig(level=logging.DEBUG)

mcp = FastMCP(" MCP Server")


# Register pet tools

mcp.tool()(pet.updatepet)

mcp.tool()(pet.addpet)


# Register pet_findbystatus tools

mcp.tool()(pet_findbystatus.findpetsbystatus)


# Register pet_findbytags tools

mcp.tool()(pet_findbytags.findpetsbytags)


# Register store_inventory tools

mcp.tool()(store_inventory.getinventory)


# Register store_order tools

mcp.tool()(store_order.placeorder)


# Register user tools

mcp.tool()(user.createuser)


# Register user_createwithlist tools

mcp.tool()(user_createwithlist.createuserswithlistinput)


# Register user_login tools

mcp.tool()(user_login.loginuser)


# Register user_logout tools

mcp.tool()(user_logout.logoutuser)



def main():
    mcp.run()

if __name__ == "__main__":
    main()