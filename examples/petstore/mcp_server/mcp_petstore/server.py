
# Copyright 2025 CNOE
# SPDX-License-Identifier: Apache-2.0
# Generated by CNOE OpenAPI MCP Codegen tool

#!/usr/bin/env python3
"""
 MCP Server

This server provides a Model Context Protocol (MCP) interface to the ,
allowing large language models and AI assistants to interact with the service.
"""
import logging
import os
from dotenv import load_dotenv
from mcp.server.fastmcp import FastMCP


from mcp_petstore.tools import pet

from mcp_petstore.tools import pet_findbystatus

from mcp_petstore.tools import pet_findbytags

from mcp_petstore.tools import pet_petid

from mcp_petstore.tools import pet_petid_uploadimage

from mcp_petstore.tools import store_inventory

from mcp_petstore.tools import store_order

from mcp_petstore.tools import store_order_orderid

from mcp_petstore.tools import user

from mcp_petstore.tools import user_createwithlist

from mcp_petstore.tools import user_login

from mcp_petstore.tools import user_logout

from mcp_petstore.tools import user_username


def main():
    # Load environment variables
    load_dotenv()

    # Configure logging
    logging.basicConfig(level=logging.DEBUG)

    # Get MCP configuration from environment variables
    MCP_MODE = os.getenv("MCP_MODE", "STDIO")

    # Get host and port for server
    MCP_HOST = os.getenv("MCP_HOST", "localhost")
    MCP_PORT = int(os.getenv("MCP_PORT", "8000"))

    logging.info(f"Starting MCP server in {MCP_MODE} mode on {MCP_HOST}:{MCP_PORT}")

    # Get agent name from environment variables
    AGENT_NAME = os.getenv("AGENT_NAME", "PETSTORE Agent")
    logging.info(f"Agent name: {AGENT_NAME}")

    # Create server instance
    if MCP_MODE == "SSE":
      mcp = FastMCP(f"{AGENT_NAME} MCP Server", host=MCP_HOST, port=MCP_PORT)
    else:
      mcp = FastMCP("PETSTORE MCP Server")


    # Register pet tools

    mcp.tool()(pet.updatepet)

    mcp.tool()(pet.addpet)

    # Register pet_findbystatus tools

    mcp.tool()(pet_findbystatus.findpetsbystatus)

    # Register pet_findbytags tools

    mcp.tool()(pet_findbytags.findpetsbytags)

    # Register pet_petid tools

    mcp.tool()(pet_petid.getpetbyid)

    mcp.tool()(pet_petid.updatepetwithform)

    mcp.tool()(pet_petid.deletepet)

    # Register pet_petid_uploadimage tools

    mcp.tool()(pet_petid_uploadimage.uploadfile)

    # Register store_inventory tools

    mcp.tool()(store_inventory.getinventory)

    # Register store_order tools

    mcp.tool()(store_order.placeorder)

    # Register store_order_orderid tools

    mcp.tool()(store_order_orderid.getorderbyid)

    mcp.tool()(store_order_orderid.deleteorder)

    # Register user tools

    mcp.tool()(user.createuser)

    # Register user_createwithlist tools

    mcp.tool()(user_createwithlist.createuserswithlistinput)

    # Register user_login tools

    mcp.tool()(user_login.loginuser)

    # Register user_logout tools

    mcp.tool()(user_logout.logoutuser)

    # Register user_username tools

    mcp.tool()(user_username.getuserbyname)

    mcp.tool()(user_username.updateuser)

    mcp.tool()(user_username.deleteuser)


    # Run the MCP server
    mcp.run()

if __name__ == "__main__":
    main()